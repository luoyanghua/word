--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 7.5.843
--   Created On : 星期三, 19 十月, 2016 
--   DBMS       : MySql 
--   -------------------------------------------------- 


SET FOREIGN_KEY_CHECKS=0;



--  Create Tables 
CREATE TABLE MedicalCaseClassMst
(
	ClassUID CHAR(36) NOT NULL COMMENT '病例分类UID',
	ClassCode VARCHAR(128) COMMENT '病例分类代码',
	ClassCodeScheme VARCHAR(64) COMMENT '分类编码体系，只需要根节点有值，用于标示是按照什么来分类的，比如部位、疾病、ICD10等。',
	ClassName VARCHAR(128) NOT NULL COMMENT '病例分类名称',
	ParentClassUID CHAR(36) COMMENT '上级分类UID，若为空则为根分类。同个访问类型下只有一个根节点的话，根节点可以不展现出来。',
	AccessType TINYINT NOT NULL COMMENT '访问类型，0个人，1科室，2医院，3公共',
	SortNO INTEGER COMMENT '同级中的排序号',
	CreateUserUID CHAR(36) COMMENT '创建用户UID',
	CreateUserName VARCHAR(64) COMMENT '创建用户姓名',
	CreateDate DATETIME COMMENT '创建时间',
	LastUpdateUserUID CHAR(36) COMMENT '最后更新用户UID',
	LastUpdateUserName VARCHAR(64) COMMENT '最后更新用户姓名',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除',
	PRIMARY KEY (ClassUID),
	KEY (CreateUserUID)
) ENGINE=InnoDB COMMENT='典型病例分类字典表'
;


CREATE TABLE MedicalImageCase
(
	CaseUID CHAR(36) NOT NULL COMMENT '病例UID',
	CaseNO INTEGER NOT NULL AUTO_INCREMENT COMMENT '病例编号，自增，该编号是为了用户之间的交流使用该数字的编号比较方便',
	CaseName VARCHAR(128) NOT NULL COMMENT '病例名称',
	CaseAbstract VARCHAR(2000) COMMENT '病例摘要',
	CaseAnalysis TEXT COMMENT '病例分析',
	ObservationUID CHAR(36) COMMENT '检查UID，如果病例从检查记录里来，该值关联ObservationRequest表',
	MedRecNO VARCHAR(64) COMMENT '病例号',
	PatientID VARCHAR(64) COMMENT '病人号',
	AccessionNumber VARCHAR(64) COMMENT '检查号',
	Name VARCHAR(64) COMMENT '病人姓名，可以是匿名化',
	Sex VARCHAR(6) COMMENT '性别，男、女、未知',
	Age SMALLINT COMMENT '年龄',
	AgeUnit VARCHAR(6) COMMENT '年龄单位',
	ServiceSectID VARCHAR(64) COMMENT '检查类型',
	ObservationDate DATETIME COMMENT '检查时间',
	ServiceText VARCHAR(256) COMMENT '检查项目',
	ProcedureName VARCHAR(256) COMMENT '检查部位',
	ObservationMethod VARCHAR(256) COMMENT '检查方法',
	ImageSight VARCHAR(4000) COMMENT '影像所见',
	ImageDiagnosis VARCHAR(4000) COMMENT '影像诊断',
	DifferentialDiagnosis VARCHAR(4000) COMMENT '鉴别诊断',
	RelevantClinicalInfo TEXT COMMENT '病史等相关的临床信息',
	SurgicalPathology TEXT COMMENT '手术病理',
	FollowUpInfo TEXT COMMENT '随访信息',
	ImageFindingFlag BOOL COMMENT '影像学表现标志，0正常影像学表现、1异常影像学表现',
	DeptFlag BOOL NOT NULL DEFAULT 0 COMMENT '科室病例，0：否、1：是',
	OrganizationFlag BOOL NOT NULL DEFAULT 0 COMMENT '机构病例(医院病例)，0：否、1：是',
	PublicFlag BOOL NOT NULL DEFAULT 0 COMMENT '公共病例，0：否、1：是',
	CreateUserUID CHAR(36) COMMENT '创建用户UID',
	CreateUserName VARCHAR(64) COMMENT '创建用户姓名',
	CreateDate DATETIME COMMENT '创建时间',
	LastUpdateUserUID CHAR(36) COMMENT '最后更新用户UID',
	LastUpdateUserName VARCHAR(64) COMMENT '最后更新用户',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除',
	PRIMARY KEY (CaseUID),
	UNIQUE UQ_MedicalImageCase_CaseNO(CaseNO),
	KEY (CreateUserUID)
) ENGINE=InnoDB COMMENT='医学影像典型病例表'
;


CREATE TABLE MedicalImageCaseInClass
(
	CaseUID CHAR(36) NOT NULL COMMENT '病例UID',
	ClassUID CHAR(36) NOT NULL COMMENT '分类UID',
	CreateDate DATETIME COMMENT '创建日期',
	PRIMARY KEY (CaseUID, ClassUID),
	KEY (ClassUID),
	KEY (CaseUID)
) ENGINE=InnoDB COMMENT='医学影像病例所属分类'
;


CREATE TABLE CloudStorageServiceMst
(
	OrganizationID VARCHAR(64) NOT NULL COMMENT '机构ID',
	BeginTime DATETIME COMMENT '服务起始时间',
	EndTime DATETIME COMMENT '服务截止时间',
	StorageSize DECIMAL(10,2) COMMENT '存储大小(单位:M)',
	PlatformId VARCHAR(64) COMMENT '业务平台ID',
	PlatformName VARCHAR(64) COMMENT '业务平台名称',
	OpenStatus TINYINT NOT NULL DEFAULT 0 COMMENT '开通状态(0-未开通,1-开通)',
	Endpoint VARCHAR(256) COMMENT '影像计算服务地址',
	EndpointInternet VARCHAR(256) COMMENT '影像计算服务外网地址',
	ImageUrl VARCHAR(256) COMMENT '影像地址',
	ImageUrlInternet VARCHAR(256) COMMENT '影像外网地址',
	PRIMARY KEY (OrganizationID),
	KEY (OrganizationID)
) ENGINE=InnoDB COMMENT='云存储服务'
;


CREATE TABLE GenericQueryFieldsMst
(
	FieldSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '字段自增唯一序号',
	QueryUID CHAR(36) NOT NULL COMMENT '关联查询UID',
	FieldName VARCHAR(64) COMMENT '字段ID，对应表或者视图的字段名称',
	FieldDesc VARCHAR(64) COMMENT '字段描述',
	FieldDataType TINYINT COMMENT '字段类型，Boolean=0、Number=1、String=2、DateTime=3',
	Width SMALLINT COMMENT '字段列宽度',
	SortNO SMALLINT COMMENT '字段列排序号',
	PrimaryKeyFlag BOOL COMMENT '是否主健标识，0：非主健，1：主健',
	VisibleFlag BOOL COMMENT '是否显示，0：不显示，1：显示',
	ResultFlag BOOL DEFAULT 1 COMMENT '是否为查询结果字段，1：是；0：否。',
	OrderByMode BOOL COMMENT '排序方式，0：降序，1：升序，空不排序',
	OrderByPriority SMALLINT COMMENT '排序优先级，数值越大，优先级越低',
	Memo VARCHAR(256),
	PRIMARY KEY (FieldSeq),
	UNIQUE UQ_GenericQueryFieldsMst_QueryUID(QueryUID, FieldName),
	KEY (QueryUID)
)  COMMENT='通用查询相应的字段配置表'
;


CREATE TABLE GenericQueryMst
(
	QueryUID CHAR(36) NOT NULL COMMENT '通用查询UID',
	QueryName VARCHAR(64) COMMENT '通用查询名称',
	QueryCategoryID VARCHAR(64) COMMENT '通用查询分类',
	DataSource VARCHAR(64) COMMENT '数据源，如表名、视图名',
	PageSize INTEGER COMMENT '分页时，每页的行数，为0时表示不分页。',
	DistinctFlag BOOL DEFAULT 0 COMMENT '查询结果是否进行Distinct，1：Distinct；0：不Distinct。',
	Memo VARCHAR(256) COMMENT '备注',
	PRIMARY KEY (QueryUID)
)  COMMENT='通用查询配置，用于配置查询的数据源'
;


CREATE TABLE StatisticsConditionMst
(
	ConditionSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	StatisticsSeq INTEGER NOT NULL COMMENT '统计模板序号',
	FieldName VARCHAR(64) NOT NULL COMMENT '条件字段',
	FieldOperator VARCHAR(16) NOT NULL COMMENT '字段关系运算符号，如=，>=，Contain等',
	FieldValue VARCHAR(2000) COMMENT '条件字段值',
	SortNO SMALLINT COMMENT '排序号',
	PRIMARY KEY (ConditionSeq),
	KEY (StatisticsSeq)
) ENGINE=InnoDB COMMENT='统计条件表'
;


CREATE TABLE StatisticsMst
(
	StatisticsSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	StatisticsName VARCHAR(64) NOT NULL COMMENT '统计名称',
	StatisticsTitle VARCHAR(64) COMMENT '统计抬头，显示在数据表格上方',
	UserUID CHAR(36) COMMENT '创建用户UID',
	PublicFlag BOOL NOT NULL DEFAULT 0 COMMENT '是否公开，0不公开、1公开',
	RightID VARCHAR(64) NOT NULL COMMENT '所属的统计模块权限ID',
	RowField VARCHAR(256) COMMENT '行字段，多个以,分隔',
	ColumnField VARCHAR(256) COMMENT '列字段，多个以,分隔',
	SortNO SMALLINT COMMENT '相同RightID下的排序号',
	CreateTime DATETIME COMMENT '创建时间',
	PRIMARY KEY (StatisticsSeq)
) ENGINE=InnoDB COMMENT='统计配置表'
;


CREATE TABLE StatisticsReport
(
	StatisticsReportSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	ReportName VARCHAR(256) COMMENT '报表名称',
	BusinessType VARCHAR(64) COMMENT '业务类型。Exam:检查',
	ClassCode VARCHAR(128) COMMENT '报表大类代码，ExamWorkload:检查工作量、ExamPositiveRate:检查阳性率、ExamAccess:检查访问ExamIntegration:检查集成(影像采集等)',
	TypeCode VARCHAR(128) COMMENT '报表小类代码，ExamRetrieveImages:检查获取影像',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	DateSummaryMode TINYINT COMMENT '日期汇总方式，0天、1周、2月、3季、4年，空则没有汇总方式。',
	StartDate DATETIME COMMENT '报表统计的开始时间',
	EndDate DATETIME COMMENT '报表统计的结束时间',
	ReportContent TEXT COMMENT '报表内容，JSON数据格式',
	CreateDate DATETIME COMMENT '报表创建时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除',
	PRIMARY KEY (StatisticsReportSeq)
) ENGINE=InnoDB COMMENT='统计报表'
;


CREATE TABLE XDSAssociation
(
	AssociationSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '连接自增主键',
	EntryUUID VARCHAR(128) COMMENT '连接UUID',
	LinkType VARCHAR(64) COMMENT '连接名称',
	AssociationType VARCHAR(128) NOT NULL COMMENT '连接类型ID，见字典 urn:oasis:names:tc:ebxml-regrep:AssociationType:HasMember。urn:ihe:iti:2007:AssociationType:APND。urn:ihe:iti:2007:AssociationType:RPLC。urn:ihe:iti:2007:AssociationType:XFRM。urn:ihe:iti:2007:AssociationType:XFRM_RPLC。urn:ihe:iti:2007:AssociationType:Signs。',
	SourceObjectID VARCHAR(128) NOT NULL COMMENT '源对象ID，EntryUUID。The id attribute MUST contain the value of the id attribute of the RegistryObject being referenced.',
	targetObjectID VARCHAR(128) NOT NULL COMMENT '目标对象ID，EntryUUID。The id attribute MUST contain the value of the id attribute of the RegistryObject being referenced.',
	SubmissionSetStatus VARCHAR(128),
	DocumentUID CHAR(36) COMMENT '文档内部唯一号',
	DocumentUIDReplaced CHAR(36),
	FolderUID CHAR(36) COMMENT '文件夹内部唯一号',
	SubmissionSetUID CHAR(36) COMMENT '提交集内部唯一号',
	PRIMARY KEY (AssociationSeq),
	KEY (DocumentUID),
	KEY (DocumentUIDReplaced),
	KEY (FolderUID),
	KEY (SubmissionSetUID)
) ENGINE=InnoDB COMMENT='关联，通过该表，将文档、文件夹、提交集或者关联本身进行关联'
;


CREATE TABLE XDSDocumentAuthor
(
	DocumentAuthorSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	DocumentUID CHAR(36) COMMENT '文档注册内部序号。关联XDSDocumentEntry表',
	AuthorInstitution VARCHAR(250) COMMENT '作者机构',
	AuthorPerson VARCHAR(250) COMMENT '作者',
	AuthorRole VARCHAR(128),
	AuthorSpecialty VARCHAR(128),
	PRIMARY KEY (DocumentAuthorSeq),
	KEY (DocumentUID)
) ENGINE=InnoDB COMMENT='XDS文档作者'
;


CREATE TABLE XDSDocumentEntry
(
	DocumentUID CHAR(36) NOT NULL COMMENT '文档注册内部唯一号',
	AvailabilityStatus VARCHAR(128) COMMENT '文档可用状态，见字典Approved：available for patient care、Deprecated：obsolete',
	ClassCode VARCHAR(128) COMMENT '文档分类，大分类，见字典。The code specifying the particular kind of document (e.g., Prescription, Discharge Summary, Report).',
	ClassCodeScheme VARCHAR(128) COMMENT 'classCode编码体系',
	ClassCodeName VARCHAR(128) COMMENT '文档分类显示名称，用户人工可读，见字典。',
	Comments VARCHAR(200) COMMENT '文档注释',
	ConfidentialityCode VARCHAR(128) COMMENT '保密代码，见字典',
	ConfidentialityCodeScheme VARCHAR(128) COMMENT 'confidentialityCode编码体系',
	ConfidentialityCodeName VARCHAR(128),
	CreationTime DATETIME COMMENT '文档创建时间',
	EntryUUID VARCHAR(128) COMMENT '文档管理全局唯一号。This globally unique identifier is primarily intended for use as a document registry management identifier.',
	FormatCode VARCHAR(128) COMMENT '文档格式代码，见字典。Code globally uniquely specifying the format of the document.',
	FormatCodeScheme VARCHAR(128) COMMENT 'formatCode编码体系',
	FormatCodeName VARCHAR(128) COMMENT '文档格式显示名称',
	Hash VARCHAR(128) COMMENT '文档的hash值',
	FacilityTypeCode VARCHAR(128) COMMENT '医疗机构类型代码，见字典This code represents the type of organizational setting of the clinical encounter during which the documented act occurred.',
	FacilityTypeCodeScheme VARCHAR(128) COMMENT 'FacilityTypeCode编码体系',
	FacilityTypeCodeName VARCHAR(128) COMMENT '医疗机构类型名称',
	HomeCommunityID VARCHAR(128) COMMENT '团体ID。A globally unique identifier for a community.',
	LanguageCode VARCHAR(128) COMMENT '语言代码，见字典，中文为zh-cn，英文为en-us。Specifies the human language of character data in the document.',
	LegalAuthenticatorID VARCHAR(128) COMMENT '文档签字者ID，法律认可的责任人',
	LegalAuthenticatorName VARCHAR(128) COMMENT '文档签字者姓名',
	MimeType VARCHAR(128) COMMENT '文档的MIME类型，见字典',
	ParentDocumentID VARCHAR(128) COMMENT '父文档的UUID',
	ParentDocumentRelationship VARCHAR(128) COMMENT '与父文档的关系',
	PatientID VARCHAR(128) COMMENT '病人号',
	PatientIDAuthority VARCHAR(128) COMMENT '病人号的作用域',
	PracticeSettingCode VARCHAR(128) COMMENT '临床实践活动形式代码，见字典。The code specifying the clinical specialty where the act that resulted in the document was performed (e.g., Family Practice, Laboratory, Radiology).',
	PracticeSettingCodeScheme VARCHAR(128) COMMENT 'practiceSettingCode编码体系',
	PracticeSettingCodeName VARCHAR(128) COMMENT '临床专业名称',
	RepositoryUniqueID VARCHAR(128) COMMENT '文档库唯一ID',
	ServiceStartTime DATETIME COMMENT '文档服务开始时间。Represents the start time the service being documented took place (clinically significant, but not necessarily when the document was produced or approved)',
	ServiceStopTime DATETIME COMMENT '文档服务结束时间。Represents the stop time the service being documented took place (clinically significant, but not necessarily when the document was produced or approved).',
	FileSize INTEGER COMMENT '文档字节大小。Size in bytes of the byte stream that was provided in the Register and Provide Transaction and stored by the XDS Document Repository',
	SourcePatientID VARCHAR(128) COMMENT '文档在文档源的本地ID。The sourcePatientId represents the subject of care medical record Identifier (e.g., Patient Id) in the local patient Identifier Domain of the Document Source.',
	SourcePatientIDAuthority VARCHAR(128) COMMENT '文档在文档源的本地ID作用域ID。',
	SourcePatientInfo VARCHAR(1024),
	Title VARCHAR(128) COMMENT '文档标题。Represents the title of the document. Clinical documents often do not have a title, and are collectively referred to by the display name of the classCode (e.g., a "consultation" or "progress note").',
	TypeCode VARCHAR(128) COMMENT '文档详细种类代码，小分类，见字典。The code specifying the precise kind of document (e.g., Pulmonary History and Physical, Discharge Summary, Ultrasound Report).',
	TypeCodeScheme VARCHAR(128) COMMENT 'typeCode编码体系',
	TypeCodeName VARCHAR(128) COMMENT '文档详细种类名称',
	UniqueID VARCHAR(128) COMMENT '由文档创建者生成的文档唯一标识。The globally unique identifier assigned by the document creator to this document. This unique identifier may be used in the body of other XDS Documents to reference this document.(e.g., for a DICOM standard document a 64 character numeric UID, for an HL7 CDA format a serialization of the CDA Document id extension and root in the form oid^extension, where OID is a 64 digits max, and the ID is a 16 UTF-8 char max).',
	URI VARCHAR(128) COMMENT 'IHE描述该字段用在XDM模式下(For XDM the URI element shall point to the file containing the document.)。',
	Lid VARCHAR(128),
	VersionName VARCHAR(128),
	ReceiveTime DATETIME,
	PRIMARY KEY (DocumentUID)
) ENGINE=InnoDB COMMENT='文档对象'
;


CREATE TABLE XDSDocumentEventCodeList
(
	DocumentEventCodeSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增序号',
	DocumentUID CHAR(36) COMMENT '文档注册内部唯一号。关联XDSDocumentEntry表',
	EventCode VARCHAR(128) COMMENT '具体临床事件代码，如检查的部位代码。This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the typeCode, such as a "History and Physical Report" in which the procedure being documented is necessarily a "History and Physical" act.',
	EventCodeScheme VARCHAR(128) COMMENT '事件代码编码体系',
	EventCodeName VARCHAR(128) COMMENT '事件代码名称',
	PRIMARY KEY (DocumentEventCodeSeq),
	KEY (DocumentUID)
) ENGINE=InnoDB COMMENT='XDS文档事件'
;


CREATE TABLE XDSFolder
(
	FolderUID CHAR(36) NOT NULL COMMENT '文件夹内部唯一序号',
	AvailabilityStatus VARCHAR(128) COMMENT '文档目录可用状态，见字典Submitted：submission transaction not completed, not available for patient care、Approved：available for patient care',
	Comments VARCHAR(200) COMMENT '文档注释',
	EntryUUID VARCHAR(128) COMMENT '文档目录管理全局唯一号。This globally unique identifier is primarily intended for use as a document registry management identifier.',
	HomeCommunityID VARCHAR(128) COMMENT '团体ID。A globally unique identifier for a community.',
	LastUpdateTime DATETIME COMMENT '目录最后更新时间。Point in time at the Document Registry when an XDS Document was registered and placed in the XDS Folder',
	PatientID VARCHAR(128) COMMENT '病人号',
	PatientIDAuthority VARCHAR(128) COMMENT '病人号的作用域',
	Title VARCHAR(128) COMMENT '文档标题。Represents the title of the document. Clinical documents often do not have a title, and are collectively referred to by the display name of the classCode (e.g., a "consultation" or "progress note").',
	UniqueID VARCHAR(128) COMMENT '由文档创建者生成的文档唯一标识。The globally unique identifier assigned by the document creator to this document. This unique identifier may be used in the body of other XDS Documents to reference this document.',
	Lid VARCHAR(128),
	ReceiveTime DATETIME,
	PRIMARY KEY (FolderUID)
) ENGINE=InnoDB COMMENT='文档目录'
;


CREATE TABLE XDSFolderCodeList
(
	FolderCodeSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增序号',
	FolderUID CHAR(36) COMMENT '文件夹内部唯一序号。关联XDSFolder表',
	Code VARCHAR(128) COMMENT '临床活动代码。Shall contain the set of codes specifying the type of clinical activity that resulted in placing XDS Documents in this XDSFolder.',
	CodeScheme VARCHAR(128) COMMENT '临床活动代码编码体系',
	CodeName VARCHAR(128) COMMENT '临床活动显示名称',
	PRIMARY KEY (FolderCodeSeq),
	KEY (FolderUID)
) ENGINE=InnoDB COMMENT='XDS文档事件'
;


CREATE TABLE XDSStoredQueryMst
(
	QuerySeq INTEGER NOT NULL COMMENT '自增主键',
	QueryID VARCHAR(128) NOT NULL COMMENT '查询的UUID',
	QueryName VARCHAR(256),
	ReturnType VARCHAR(128) COMMENT '返回类型。objectref或leafclass',
	QuerySQL TEXT COMMENT '查询的SQL语句',
	PRIMARY KEY (QuerySeq)
) ENGINE=InnoDB COMMENT='XDS存储查询'
;


CREATE TABLE XDSStoredQueryParameterMst
(
	QueryParameterSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	QuerySeq INTEGER COMMENT '关联StoredQueryMst表',
	QueryID VARCHAR(128) COMMENT '查询ID，对应StoredQueryMst表',
	QueryParameterName VARCHAR(256) COMMENT '查询参数名称',
	Attribute VARCHAR(256) COMMENT '查询参数属性',
	Mandatory BOOL COMMENT '是否强制',
	Multiple BOOL COMMENT '是否可重复',
	DependentParameterName VARCHAR(256) COMMENT '依赖的另一个参数名称',
	JoinTableName VARCHAR(256) COMMENT '关联的数据源名称，如表名、视图名。',
	JoinConditionSQL VARCHAR(8000) COMMENT 'SQL的关联部分',
	WhereConditionSQL VARCHAR(8000) COMMENT 'SQL的条件关联部分',
	PRIMARY KEY (QueryParameterSeq)
) ENGINE=InnoDB COMMENT='存储查询的参数'
;


CREATE TABLE XDSSubmissionSet
(
	SubmissionSetUID CHAR(36) NOT NULL COMMENT '提交集内部唯一序号',
	AvailabilityStatus VARCHAR(128) COMMENT '文档可用状态，见字典Submitted：submission transaction not completed, not available for patient care。Approved：available for patient care。This attribute is always set to Approved as part of a successful',
	Comments VARCHAR(200) COMMENT '文档注释',
	ContentTypeCode VARCHAR(128) COMMENT '临床活动类型代码，见字典。The code specifying the type of clinical activity that resulted in placing these XDS Documents in this XDS-Submission Set.',
	ContentTypeCodeScheme VARCHAR(128) COMMENT 'ContentTypeCode编码体系',
	ContentTypeCodeName VARCHAR(128) COMMENT '临床类型显示名称',
	EntryUUID VARCHAR(128) COMMENT '文档管理全局唯一号。This globally unique identifier is primarily intended for use as a document registry management identifier.',
	HomeCommunityID VARCHAR(128) COMMENT '团体ID。A globally unique identifier for a community.',
	IntendedRecipientID VARCHAR(128) COMMENT '接受组织或者人ID。Represents the organization(s) or person(s) for whom the Submission set is intended.',
	IntendedRecipientName VARCHAR(128) COMMENT '接受组织或者人姓名。',
	PatientID VARCHAR(128) COMMENT '病人号',
	PatientIDAuthority VARCHAR(128) COMMENT '病人号的作用域',
	SourceID VARCHAR(128) COMMENT '文档集构造源ID。OID identifying the instance of the Document Source that contributed the Submission Set.',
	SubmissionTime DATETIME COMMENT '文档集创建时间。Point in Time at the Document Source when the Submission Set was created and issued for registration to the Document Registry',
	Title VARCHAR(128) COMMENT '文档标题。Represents the title of the document. Clinical documents often do not have a title, and are collectively referred to by the display name of the classCode (e.g., a "consultation" or "progress note").',
	UniqueID VARCHAR(128) COMMENT '由文档创建者生成的文档集唯一标识。Globally unique identifier for the submission-set instance assigned by the Document Source in OID format.',
	Lid VARCHAR(128),
	ReceiveTime DATETIME,
	PRIMARY KEY (SubmissionSetUID)
) ENGINE=InnoDB COMMENT='文档集'
;


CREATE TABLE XDSSubmissionSetAuthor
(
	SubmissionSetAuthorSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	SubmissionSetUID CHAR(36) COMMENT '提交集内部唯一序号。关联XDSDocumentEntry表',
	AuthorInstitution VARCHAR(250) COMMENT '作者机构',
	AuthorPerson VARCHAR(250) COMMENT '作者',
	AuthorRole VARCHAR(128),
	AuthorSpecialty VARCHAR(128),
	PRIMARY KEY (SubmissionSetAuthorSeq),
	KEY (SubmissionSetUID)
) ENGINE=InnoDB COMMENT='XDS文档作者'
;


CREATE TABLE ExamConsultRequest
(
	ConsultRequestUID CHAR(36) NOT NULL COMMENT '申请UID',
	ObservationUID CHAR(36) NOT NULL COMMENT '检查UID',
	ConsultInteractiveMode BOOL NOT NULL DEFAULT 0 COMMENT '交互模式，0非交互式，1交互式',
	ConsultRequestOrgID VARCHAR(64) COMMENT '申请机构UID',
	ConsultRequestDoctorID VARCHAR(64) COMMENT '申请医生ID',
	ConsultRequestDoctorName VARCHAR(64) COMMENT '申请医生姓名',
	ConsultRequestDoctorPhone VARCHAR(64) COMMENT '申请医生电话',
	ConsultRequestPurpose VARCHAR(2000) COMMENT '申请目的',
	ConsultRequestMemo VARCHAR(2000) COMMENT '申请备注',
	ConsultEmergency BOOL COMMENT '紧急标志，1紧急，其它普通',
	ConsultExpectDate DATETIME COMMENT '期望会诊时间',
	ConsultRequestDate DATETIME COMMENT '申请时间',
	ConsultEndDate DATETIME COMMENT '结束时间',
	ConsultServiceCenterUID CHAR(36) COMMENT '会诊的服务中心UID',
	ConsultOrgID VARCHAR(64) COMMENT '会诊医院ID',
	ConsultExpertUserUID CHAR(36) COMMENT '会诊的专家用户UID',
	ConsultStatus TINYINT NOT NULL COMMENT '状态，10:取消、20:拒绝、30:申请、40:接受、50:处理中、60:完成',
	MessageCount INTEGER DEFAULT 0 COMMENT '未处理消息提醒数量，对应UserMessage中ObjectUID=该ConsultRequestUID的消息数量',
	UnProcessWorkflowCount INTEGER COMMENT '未处理的流程数量，对应ExamConsultWorkflow表中ProcessFlag=0的记录数。',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (ConsultRequestUID),
	KEY (ObservationUID),
	INDEX IX_ExamConsultRequest_ObservationUID (ObservationUID ASC),
	INDEX IX_ExamConsultRequest_ConsultServiceCenterUID (ConsultServiceCenterUID ASC),
	INDEX IX_ExamConsultRequest_ConsultRequestDate (ConsultRequestDate ASC)
) ENGINE=InnoDB COMMENT='检查会诊申请。'
;


CREATE TABLE ExamConsultResult
(
	ResultSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '观察结果序列号',
	ConsultRequestUID CHAR(36) NOT NULL COMMENT '会诊申请UID',
	SetID SMALLINT COMMENT '同一个观察服务请求的结果顺序号',
	ObservationID VARCHAR(64) COMMENT '观察项目ID，检查时定义如下：GDT:检查所见、IMP:检查诊断、REC:诊断建议、ADT:诊断备注、ConsultAdvice:会诊意见',
	ValueTitle VARCHAR(64) COMMENT '结果值标题，用于显示，如检查所见、检查印象。',
	ValueText VARCHAR(8000) COMMENT '观察结果值文本描述',
	ValueCode VARCHAR(128) COMMENT '观察结果值代码',
	ValueCodeSystem VARCHAR(64) COMMENT '观察结果值代码编码体系，见字典',
	AbnormalFlags VARCHAR(6) COMMENT '异常标志，阴性、阳性',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (ResultSeq),
	INDEX IX_ExamConsultResult_ConsultRequestUID (ConsultRequestUID ASC)
) ENGINE=InnoDB COMMENT='检查会诊结果表'
;


CREATE TABLE ExamConsultWorkflow
(
	WorkflowSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	ConsultRequestUID CHAR(36) NOT NULL COMMENT '检查诊断申请UID',
	WorkflowName VARCHAR(64) NOT NULL COMMENT '流程名称：会诊申请，会诊备注，会诊结果',
	WorkflowDesc VARCHAR(4000) COMMENT '流程描述',
	CreateUserUID CHAR(36) COMMENT '创建用户UID',
	CreateDate DATETIME COMMENT '创建时间',
	ProcessFlag BOOL COMMENT '处理状态，0未处理，1已处理，空则不需要处理',
	ProcessDate DATETIME COMMENT '处理时间',
	ProcessUserUID CHAR(36) COMMENT '处理用户UID',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (WorkflowSeq),
	KEY (ConsultRequestUID),
	INDEX IX_ExamConsultWorkflow_ConsultRequestUID (ConsultRequestUID ASC)
) ENGINE=InnoDB COMMENT='检查会诊流程表'
;


CREATE TABLE ExamDiagnosisRequest
(
	DiagnosisRequestUID CHAR(36) NOT NULL COMMENT '申请UID',
	ObservationUID CHAR(36) NOT NULL COMMENT '检查UID',
	DiagnosisType VARCHAR(64) NOT NULL COMMENT '类型。Diagnosis：检查诊断，DiagnosisAudit：检查诊断审核',
	DiagnosisRequestOrgID VARCHAR(64) COMMENT '申请机构UID',
	DiagnosisRequestDate DATETIME COMMENT '申请时间',
	DiagnosisServiceCenterUID CHAR(36) COMMENT '服务中心UID',
	MessageCount INTEGER DEFAULT 0 COMMENT '未处理消息提醒数量，对应UserMessage中ObjectUID=该DiagnosisRequestUID的消息数量',
	UnProcessWorkflowCount INTEGER COMMENT '未处理的流程数量，对应ExamDiagnosisWorkflow表中ProcessFlag=0的记录数。',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	DiagnosisOrgID VARCHAR(64) COMMENT '诊断机构ID',
	PRIMARY KEY (DiagnosisRequestUID),
	KEY (ObservationUID),
	INDEX IX_ExamDiagnosisRequest_ObservationUID (ObservationUID ASC),
	INDEX IX_ExamDiagnosisRequest_DiagnosisRequestDate (DiagnosisRequestDate ASC),
	INDEX IX_ExamDiagnosisRequest_DiagnosisServiceCenterUID (DiagnosisServiceCenterUID ASC)
) ENGINE=InnoDB COMMENT='检查检查诊断申请。'
;


CREATE TABLE ExamDiagnosisWorkflow
(
	WorkflowSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	DiagnosisRequestUID CHAR(36) NOT NULL COMMENT '检查诊断申请UID',
	WorkflowName VARCHAR(64) NOT NULL COMMENT '流程名称：诊断申请，追加摄片，重新摄片，回科，检查备注，诊断结果，诊断回退，危急报告，锁定，解锁',
	WorkflowDesc VARCHAR(4000) COMMENT '流程描述，如追加摄片的原因，锁定的原因。',
	CreateUserUID CHAR(36) COMMENT '创建用户UID',
	CreateDate DATETIME COMMENT '创建时间',
	ProcessFlag BOOL COMMENT '处理状态，0未处理，1已处理，空则不需要处理',
	ProcessDate DATETIME COMMENT '处理时间',
	ProcessUserUID CHAR(36) COMMENT '处理用户UID',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (WorkflowSeq),
	KEY (DiagnosisRequestUID),
	INDEX IX_ExamDiagnosisWorkflow_DiagnosisRequestUID (DiagnosisRequestUID ASC)
) ENGINE=InnoDB COMMENT='检查诊断流程表'
;


CREATE TABLE ExamReportTemplateMst
(
	TemplateUID CHAR(36) NOT NULL COMMENT '模板UID',
	TemplateName VARCHAR(256) NOT NULL COMMENT '模板名称',
	InputCode VARCHAR(64) COMMENT '输入码',
	ExamType VARCHAR(16) NOT NULL COMMENT '检查类型',
	ImageSight VARCHAR(4000) COMMENT '影像所见',
	ImageDiagnosis VARCHAR(4000) COMMENT '影像诊断',
	Recommend VARCHAR(4000) COMMENT '建议',
	AbnormalFlags BOOL COMMENT '异常标志，0-正常（阴性），1-异常（阳性）',
	ParentTemplateUID CHAR(36) COMMENT '父模板UID，空则为根级别',
	CreateDate DATETIME COMMENT '创建时间',
	CreateUserUID CHAR(36) COMMENT '创建用户UID',
	SortNO INTEGER COMMENT '同级下的排序号',
	ServiceCenterUID CHAR(36) COMMENT '模板所属服务中UID',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	PublicFlag BOOL NOT NULL DEFAULT 0 COMMENT '公有模板属性，0-私有模板，1-公有模板',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除，1：已删除。',
	PRIMARY KEY (TemplateUID)
) ENGINE=InnoDB COMMENT='检查报告模板'
;


CREATE TABLE ExamWorkflow
(
	WorkflowSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	CreateUserUID CHAR(36) COMMENT '创建用户UID',
	CreateDate DATETIME COMMENT '创建时间',
	ObservationUID CHAR(36) NOT NULL COMMENT '对应ObservationRequest表ObservationUID',
	WorkflowName VARCHAR(64) NOT NULL COMMENT '流程名称',
	WorkflowDesc VARCHAR(4000) COMMENT '流程描述，如追加摄片的原因，锁定的原因。',
	ProcessFlag BOOL COMMENT '处理状态，0未处理，1已处理，空则不需要处理',
	ProcessDate DATETIME COMMENT '处理时间',
	PRIMARY KEY (WorkflowSeq),
	KEY (ObservationUID),
	INDEX IX_ExamWorkflow_ObservationUID (ObservationUID ASC)
) ENGINE=InnoDB COMMENT='检查流程表'
;


CREATE TABLE ServiceCenterMst
(
	ServiceCenterUID CHAR(36) NOT NULL COMMENT '服务中心UID',
	CenterName VARCHAR(256) NOT NULL COMMENT '服务中心名称',
	CenterIntroduce TEXT COMMENT '服务中心介绍',
	CenterLeader VARCHAR(64) COMMENT '中心领导',
	ContactUserName VARCHAR(64) COMMENT '联系人姓名',
	OfficePhoneNO VARCHAR(64) COMMENT '联系人办公电话',
	PersonalPhoneNO VARCHAR(64) COMMENT '联系人个人电话',
	Email VARCHAR(64) COMMENT '联系人邮箱',
	Address VARCHAR(256) COMMENT '服务中心地址',
	OrganizationID VARCHAR(64) COMMENT '中心属于哪个机构',
	AreaCode VARCHAR(128) COMMENT '地区编码，见字典AreaCode',
	CreateUserUID CHAR(36) COMMENT '创建用户',
	CreateDate DATETIME COMMENT '创建时间',
	SortNO INTEGER COMMENT '排序号',
	ActiveFlag BOOL NOT NULL DEFAULT 1 COMMENT '启用标志，0未启用，1启用',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除，1：已删除。',
	PRIMARY KEY (ServiceCenterUID)
) ENGINE=InnoDB COMMENT='服务中心'
;


CREATE TABLE ServiceCenterUserMst
(
	ServiceCenterUID CHAR(36) NOT NULL COMMENT '服务中心UID',
	UserUID CHAR(36) NOT NULL COMMENT '用户UID',
	CreateUserUID CHAR(36) COMMENT '创建用户UID',
	CreateUserName VARCHAR(64) COMMENT '创建用户姓名',
	CreateDate DATETIME COMMENT '创建时间',
	PRIMARY KEY (ServiceCenterUID, UserUID),
	KEY (ServiceCenterUID),
	KEY (UserUID)
) ENGINE=InnoDB COMMENT='服务中心用户'
;


CREATE TABLE ServiceExpertMst
(
	ServiceCenterUID CHAR(36) NOT NULL COMMENT '服务中心UID',
	ExpertUserUID CHAR(36) NOT NULL COMMENT '专家用户UID',
	ServiceState TINYINT NOT NULL DEFAULT 0 COMMENT '状态，0-正常，1-离职',
	CreateUserUID CHAR(36) COMMENT '创建用户UID',
	CreateUserName VARCHAR(64) COMMENT '创建用户姓名',
	CreateDate DATETIME COMMENT '创建时间',
	PRIMARY KEY (ServiceCenterUID, ExpertUserUID),
	KEY (ExpertUserUID),
	KEY (ServiceCenterUID)
) ENGINE=InnoDB COMMENT='服务中心签约专家'
;


CREATE TABLE ServiceOrganiztionMst
(
	ServiceCenterUID CHAR(36) NOT NULL COMMENT '服务中心UID',
	OrganizationID VARCHAR(64) NOT NULL COMMENT '机构ID',
	ServiceState TINYINT NOT NULL DEFAULT 0 COMMENT '服务状态，0-申请未开通，1-开通，2-停止',
	CreateUserUID CHAR(36) COMMENT '创建用户UID',
	CreateUserName VARCHAR(64) COMMENT '创建用户姓名',
	CreateDate DATETIME COMMENT '创建时间',
	PRIMARY KEY (ServiceCenterUID, OrganizationID),
	KEY (OrganizationID),
	KEY (ServiceCenterUID)
) ENGINE=InnoDB COMMENT='服务中心签约医疗机构'
;


CREATE TABLE QueueConfigMst
(
	QueueUID CHAR(36) NOT NULL COMMENT '队列UID',
	QueueID VARCHAR(64) COMMENT '队列ID',
	QueueName VARCHAR(64) COMMENT '队列名称',
	QueueNoMode TINYINT DEFAULT 0 COMMENT '排队号模式，0按照总顺序如1,2,3,4；1按照排班号+总顺序如101,102,203,204,305,306；2按照排班号+排班内顺序如101,102,201,202,301,302。0按照总顺序时在后续已经有约了检查的情况下不允许修改排队号。',
	QueueNoPrefix VARCHAR(16) COMMENT '排队号前缀',
	ServiceSectID VARCHAR(16) COMMENT '资源服务类型，检查的为检查类型(见字典ExamType)，如CR、CT、US、ES。',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	ActiveFlag BOOL DEFAULT 1 COMMENT '启用标志，0未启用，1启用',
	DefaultFlag BOOL COMMENT '默认标志，1：默认，其他非默认。',
	DeleteFlag BOOL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	PRIMARY KEY (QueueUID)
) ENGINE=InnoDB COMMENT='队列配置表'
;


CREATE TABLE QueueModeMst
(
	ServiceSectID VARCHAR(64) NOT NULL COMMENT '服务类型，检查的为检查类型(见字典ExamType)，如CR、CT、US、ES。',
	OrganizationID VARCHAR(64) NOT NULL COMMENT '机构ID',
	QueueMode SMALLINT COMMENT '排队模式，0-按检查类型排队，1-按预约资源排队',
	PRIMARY KEY (ServiceSectID, OrganizationID)
) ENGINE=InnoDB COMMENT='排队模式设置表'
;


CREATE TABLE QueueResult
(
	QueueResultSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	QueueUID CHAR(36) COMMENT '队列UID',
	QueueDate DATETIME COMMENT '排队日期',
	QueueNo INTEGER COMMENT '排队号，不含前缀',
	PlacerOrderNO VARCHAR(64) COMMENT '申请单号',
	PlacerAssigningAuthority VARCHAR(64) COMMENT '申请单号分配标示',
	FillerOrderNO VARCHAR(64) COMMENT '检查号',
	FillerAssigningAuthority VARCHAR(64) COMMENT '检查号分配标示',
	ObservationUID CHAR(36) COMMENT '检查观察唯一UID',
	PRIMARY KEY (QueueResultSeq),
	UNIQUE UQ_QueueResult_QueueNo(QueueUID, QueueDate, QueueNo),
	KEY (QueueUID)
) ENGINE=InnoDB COMMENT='排队结果'
;


CREATE TABLE ScheduleArrangeMst
(
	ArrangeUID CHAR(36) NOT NULL COMMENT '主键',
	ResourceUID CHAR(36) NOT NULL COMMENT '资源UID',
	ArrangeType TINYINT COMMENT '排班类型，0:星期排班(针对星期几进行排班)、1:日期排班(针对某天进行排班)',
	ArrangeWeek TINYINT COMMENT '排班星期几，用于星期排班。1-7分别表示星期一到星期天。',
	ArrangeWeekDateBegin VARCHAR(5) COMMENT '星期排班应用的时间范围起始，格式为：01-31，表示1月31号',
	ArrangeWeekDateEnd VARCHAR(5) COMMENT '星期排班应用的时间范围结束，格式为：12-31，表示12月31号',
	ArrangeDay DATETIME COMMENT '排班日期，用于日期排班',
	ActiveFlag BOOL DEFAULT 1 COMMENT '启用标志，0未启用，1启用',
	PRIMARY KEY (ArrangeUID),
	KEY (ResourceUID)
) ENGINE=InnoDB COMMENT='预约排班表'
;


CREATE TABLE ScheduleResourceMst
(
	ResourceUID CHAR(36) NOT NULL COMMENT '主键',
	ResourceID VARCHAR(64) COMMENT '资源ID',
	ResourceName VARCHAR(64) COMMENT '资源名称，如机房名称，设备名称',
	ResourceLocation VARCHAR(256) COMMENT '资源所在详细位置，如机房位置，设备位置。',
	ResourceBuilding VARCHAR(64) COMMENT '资源所在的楼宇',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	ServiceSectID VARCHAR(16) COMMENT '资源服务类型，检查的为检查类型(见字典ExamType)，如CR、CT、US、ES。',
	QueueUID CHAR(36) COMMENT '预约资源采用的排队队列',
	SortNO INTEGER COMMENT '排序号',
	ActiveFlag BOOL DEFAULT 1 COMMENT '资源启用标志，0未启用，1启用',
	DeleteFlag BOOL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	ResourceDesc VARCHAR(256) COMMENT '资源描述',
	ResourceRoom VARCHAR(64) COMMENT '预约资源房间（检查机房名称）',
	PRIMARY KEY (ResourceUID)
) ENGINE=InnoDB COMMENT='预约资源'
;


CREATE TABLE ScheduleResult
(
	ScheduleResultSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	ResourceUID CHAR(36) NOT NULL COMMENT '外键',
	ScheduleStartDate DATETIME NOT NULL COMMENT '预约开始时间',
	ScheduleEndDate DATETIME NOT NULL COMMENT '预约结束时间',
	AppointmentQuantity SMALLINT DEFAULT 0 COMMENT '已预约数量',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (ScheduleResultSeq),
	UNIQUE UQ_ScheduleResult_ResourceUID(ResourceUID, ScheduleStartDate, ScheduleEndDate),
	INDEX IX_ScheduleResult_ResourceUID (ResourceUID ASC),
	INDEX IX_ScheduleResult_ScheduleStartDate (ScheduleStartDate ASC),
	INDEX IX_ScheduleResult_ScheduleEndDate (ScheduleEndDate ASC)
) ENGINE=InnoDB COMMENT='预约结果表'
;


CREATE TABLE ScheduleRuleMst
(
	RuleSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	ServiceSectID VARCHAR(16) COMMENT '服务类型，检查的为检查类型(见字典ExamType)，如CR、CT、US、ES。',
	ResourceUID CHAR(36) COMMENT '资源UID',
	ArrangeUID CHAR(36) COMMENT '关联预约排班表主键',
	TimeGroupUID CHAR(36) COMMENT '关联预约排班时间组主键',
	TimeDetailUID CHAR(36),
	RuleType SMALLINT NOT NULL COMMENT '规则类型，0:检查项目绑定资源、1检查项目绑定星期、2检查项目绑定时间段、3病人类型绑定资源、4病人运输方式绑定资源、5病区绑定资源、6病人类型控制最大量、7检查项目控制最大量、8非空腹控制最大量、9检查项目占用数量、10检查项目时间冲突、11检查类型多部位模式、12外院控制最大量',
	SourceID VARCHAR(256) COMMENT '源值ID，如检查项目绑定资源规则时放检查项目ID',
	SourceValue VARCHAR(256) COMMENT '源值，检查项目绑定资源规则时放检查项目名称，如心脏超声，其他规则类似。',
	TargetID VARCHAR(256) COMMENT '目标值ID，如检查项目时间冲突规则放检查项目ID',
	TargetValue VARCHAR(256) COMMENT '目标值，如检查项目绑定资源的规则放资源ResourceUID、控制最大的规则放最大量。',
	ControlValue VARCHAR(256) COMMENT '控制值，检查项目时间冲突规则下该字段放以分钟为单位的时间',
	SortNO INTEGER COMMENT '排序号',
	ActiveFlag BOOL DEFAULT 1 COMMENT '启用标志，0未启用，1启用',
	PRIMARY KEY (RuleSeq),
	KEY (ResourceUID),
	KEY (TimeDetailUID),
	KEY (TimeGroupUID),
	KEY (ArrangeUID)
) ENGINE=InnoDB COMMENT='预约规则表'
;


CREATE TABLE ScheduleTimeDetailMst
(
	TimeDetailUID CHAR(36) NOT NULL COMMENT '主键',
	TimeGroupUID CHAR(36) COMMENT '时间分组',
	StartTime VARCHAR(8) NOT NULL COMMENT '开始时间，格式为08:30',
	EndTime VARCHAR(8) NOT NULL COMMENT '结束时间，格式为09:00',
	DoctorName VARCHAR(64) COMMENT '检查医生',
	SortNO INTEGER NOT NULL COMMENT '同时时间分组下的排序号',
	Quantity SMALLINT NOT NULL DEFAULT 0 COMMENT '可预约数量',
	ActiveFlag BOOL DEFAULT 1 COMMENT '启用标志，0未启用，1启用',
	PRIMARY KEY (TimeDetailUID),
	KEY (TimeGroupUID)
) ENGINE=InnoDB COMMENT='预约时间详细表'
;


CREATE TABLE ScheduleTimeGroupMst
(
	TimeGroupUID CHAR(36) NOT NULL COMMENT '主键',
	ArrangeUID CHAR(36) NOT NULL COMMENT '关联预约排班表主键',
	GroupName VARCHAR(16) COMMENT '时间分组，如，上午，中午，下午，晚上。',
	SortNO INTEGER COMMENT '同个排班下不同组的排序号',
	ActiveFlag BOOL DEFAULT 1 COMMENT '启用标志，0未启用，1启用',
	PRIMARY KEY (TimeGroupUID),
	KEY (ArrangeUID)
) ENGINE=InnoDB COMMENT='预约时间分组表'
;


CREATE TABLE IntegrationTask
(
	TaskId BIGINT NOT NULL AUTO_INCREMENT COMMENT '任务自增ID',
	InteractionType VARCHAR(64) NOT NULL COMMENT '集成事务类型，该字段值决定采用什么集成协议。见字典InteractionType',
	InteractionId VARCHAR(64) COMMENT '集成Id。 
 	- HL7V2消息：MSH-10 Message control ID 	- HL7V3消息：interactionId 	- XDS消息：SubmissionSetMeta.EntryUUID。',
	InteractionIdExt1 VARCHAR(64) COMMENT '集成扩展Id。 
 	- XDS消息：DoucmentEntry.EntryUUID。',
	ControlCode VARCHAR(64) COMMENT '用于区分同个集成事务类型的不同处理方式。 InteractionType=Provide and Register Document Set-b时可选值如下： 
 	- Replace 	- Addendum 	- Transformation',
	ControlId VARCHAR(64) COMMENT '根据ControlCode存放不同的内容。 InteractionType=Provide and Register Document Set-b且ControlCode=Replace\\Addendum\\Transformation时，为父文档的EntryUUID',
	CommunicationType VARCHAR(16) COMMENT '通讯类型，Send:发送，Receive:接收',
	TaskStatus TINYINT NOT NULL DEFAULT 0 COMMENT '任务状态，0：待处理，1：处理中，2：处理成功，3:处理失败。',
	BusinessKeyUID CHAR(36) COMMENT 'UID格式的集成业务键值，当集成业务键值非UID时，存放在BusinessKey字段。',
	BusinessKey VARCHAR(64) COMMENT '集成业务键值',
	BusinessKeyExt1 VARCHAR(512) COMMENT '集成业务键值扩展值，不同集成类型存放不同值',
	BusinessKeyExt2 VARCHAR(64) COMMENT '集成业务键值扩展值，不同集成类型存放不同值',
	BusinessKeyExt3 VARCHAR(64) COMMENT '集成业务键值扩展值，不同集成类型存放不同值',
	SenderId VARCHAR(64) COMMENT '发送者ID',
	ReceiverId VARCHAR(64) COMMENT '接收者ID',
	ReceiverServiceUID CHAR(36) COMMENT '服务UID，对应ServiceConfigMst表的ServiceUID，如果有值，则服务配置从ServiceConfigMst表中获取。',
	ReceiverEndpoint VARCHAR(256) COMMENT '接收者地址。XDSRegistry:http地址、XDSRepository:http地址、WADO:http地址、DICOM:IP:Port、HL7V2:IP:Port、HL7V3服务时:http地址、ICCWebClient:http地址、ICCServer:UserID:Password@IP:Port、RIDDisplay:http地址、RIDInformationSource:http地址、TDSService:http地址。',
	InitiateUser VARCHAR(64) COMMENT '发起任务的用户',
	InitiateHost VARCHAR(64) COMMENT '发起任务的主机或IP',
	InitiateModule VARCHAR(64) COMMENT '发起任务的模块',
	CreateTime DATETIME NOT NULL COMMENT '创建时间',
	ProcessHost VARCHAR(64) COMMENT '处理任务的主机',
	ProcessModule VARCHAR(64) COMMENT '处理任务的模块',
	ProcessTime DATETIME COMMENT '处理时间。',
	ErrorInfo VARCHAR(4000) COMMENT '错误描述',
	OrganizationID VARCHAR(64) COMMENT '任务发生的机构ID',
	ParentTaskId BIGINT COMMENT '父任务Id',
	MsgContent TEXT COMMENT '消息内容',
	RetryCount SMALLINT COMMENT '重试次数',
	PRIMARY KEY (TaskId),
	INDEX IX_IntegrationTask_IntegrationType (InteractionType ASC),
	INDEX IX_IntegrationTask_TaskStatus (TaskStatus ASC),
	INDEX IX_IntegrationTask_BusinessKeyUID (BusinessKeyUID ASC),
	INDEX IX_IntegrationTask_OrganizationID (OrganizationID ASC)
) ENGINE=InnoDB COMMENT='集成任务表'
;


CREATE TABLE JobDataMapMst
(
	JobUID CHAR(36) NOT NULL,
	EntryKey VARCHAR(150) NOT NULL COMMENT '配置键',
	EntryValueDefault VARCHAR(1000) COMMENT '默认值',
	EntryValueType VARCHAR(16) COMMENT '值类型，bool、int、string、datetime',
	EntryValueOption VARCHAR(1000) COMMENT '值选项，多个以,分隔',
	EntryDescription VARCHAR(1000) COMMENT '描述',
	SortNO INTEGER COMMENT '排序号',
	EntryName VARCHAR(64) COMMENT '配置名称',
	PRIMARY KEY (JobUID, EntryKey),
	KEY (JobUID)
) ENGINE=InnoDB COMMENT='Job数据配置'
;


CREATE TABLE JobDefineMst
(
	JobUID CHAR(36) NOT NULL,
	JobName VARCHAR(64) NOT NULL COMMENT 'Job名称',
	JobClassName VARCHAR(250) NOT NULL COMMENT 'Job的类名称，包含命名空间',
	JobDescription VARCHAR(250) COMMENT 'JOB描述',
	ActiveFlag BOOL DEFAULT 1 COMMENT '启用状态，0-未启用，1-启用',
	PRIMARY KEY (JobUID)
) ENGINE=InnoDB COMMENT='Job定义表'
;


CREATE TABLE JobServer
(
	ServiceUID CHAR(36) NOT NULL COMMENT '服务UID',
	ServiceName VARCHAR(64),
	MACAddress VARCHAR(64) COMMENT '服务器MAC地址',
	IP VARCHAR(64) COMMENT '服务器IP',
	HostName VARCHAR(64) COMMENT '服务器主机名',
	RunningFlag BOOL DEFAULT 0 COMMENT '运行标志，0停止，1运行',
	CreateDate DATETIME COMMENT '创建时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除 1：已删除。默认为0。',
	ControlCode TINYINT COMMENT '控制码，0-停止服务、1-重起服务。控制前需要先将值设置为空',
	PRIMARY KEY (ServiceUID)
) ENGINE=InnoDB COMMENT='Job服务程序'
;


CREATE TABLE JobTriggerDataMapMst
(
	TriggerUID CHAR(36) NOT NULL COMMENT '任务触发UID',
	EntryKey VARCHAR(150) NOT NULL COMMENT '键',
	EntryValue VARCHAR(1000) COMMENT '值',
	PRIMARY KEY (TriggerUID, EntryKey),
	KEY (TriggerUID)
) ENGINE=InnoDB COMMENT='任务触发的数据配置'
;


CREATE TABLE JobTriggerMst
(
	TriggerUID CHAR(36) NOT NULL COMMENT '任务触发UID',
	JobUID CHAR(36) NOT NULL COMMENT '任务定义UID',
	ServiceUID CHAR(36) NOT NULL COMMENT '执行该任务触发的服务，关联ServiceConfigMst表',
	TriggerType VARCHAR(8) NOT NULL COMMENT '触发器类型，Cron：cron触发器，使用表达式；Simple：简单触发器；',
	SimpleRepeatCount INTEGER COMMENT '-1表示无限次，0表示1次，依次类推',
	SimpleRepeatInterval BIGINT COMMENT '多少毫秒触发一次',
	CronExpression VARCHAR(150) COMMENT '日历表达式，例：每天22点到0点，每5秒钟触发一次0/5 * 22-0 * * ?',
	Durable BOOL COMMENT '触发事件是否持久化',
	TriggerDescription VARCHAR(250) COMMENT '触发器描述',
	CreateDate DATETIME COMMENT '创建时间',
	TriggerState VARCHAR(16) COMMENT 'Normal、Paused、Complete、Error、Blocked、None、Waiting、Acquired、Executing、PausedAndBlocked',
	FireTimes BIGINT COMMENT '触发次数',
	LastFireDate DATETIME COMMENT '上一次触发时间',
	NextFireDate DATETIME COMMENT '下一次触发时间',
	ErrorInfo VARCHAR(4000) COMMENT '错误信息',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除 1：已删除。默认为0。',
	ActiveFlag BOOL NOT NULL DEFAULT 1 COMMENT '启用状态，0-未启用，1-启用',
	PRIMARY KEY (TriggerUID),
	KEY (ServiceUID),
	KEY (JobUID)
) ENGINE=InnoDB COMMENT='触发器'
;


CREATE TABLE BillingItems
(
	BillingSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	BillingNO VARCHAR(64) COMMENT '收费号，对应收费系统的主键。',
	VisitUID CHAR(36) COMMENT '就诊UID',
	ItemClassName VARCHAR(64) COMMENT '项目分类',
	ItemCode VARCHAR(64) COMMENT '项目代码',
	ItemName VARCHAR(64) COMMENT '项目名称',
	ItemSpec VARCHAR(64) COMMENT '项目规格，可为材料的规格或项目的定价条件',
	Amount DECIMAL(6,2) COMMENT '数量，负数表示退费。',
	Units VARCHAR(16) COMMENT '单位。为项目的计量单位，如人次',
	Charges DECIMAL(8,2) COMMENT '项目费用',
	Payments DECIMAL(8,2) COMMENT '实际支付费用',
	ReceiptNO VARCHAR(64) COMMENT '收据或结算号',
	ReceiptClass VARCHAR(16) COMMENT '收据或结算分类',
	OrderedDeptID VARCHAR(64) COMMENT '开单科室ID',
	OrderedDeptName VARCHAR(64) COMMENT '开单科室名称',
	PerformedDepID VARCHAR(64) COMMENT '执行科室ID',
	PerformedDeptName VARCHAR(50) COMMENT '执行科室名称',
	BillingDate DATETIME COMMENT '计费时间',
	OperatorID VARCHAR(64) COMMENT '计价员ID',
	OperatorName VARCHAR(64) COMMENT '计价员名称',
	PlacerOrderNO VARCHAR(64) COMMENT '申请号，在PlacerAssigningAuthority申请系统下必须保证唯一',
	PlacerAssigningAuthority VARCHAR(64) COMMENT 'PlacerOrderNO号码的分配机构名',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (BillingSeq),
	KEY (VisitUID),
	INDEX IX_BillingItems_VisitUID (VisitUID ASC),
	INDEX IX_BillingItems_PlacerOrderNO (PlacerOrderNO ASC, PlacerAssigningAuthority ASC)
) ENGINE=InnoDB COMMENT='费用项目明细'
;


CREATE TABLE BusinessAuditMst
(
	BusinessAuditSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	UserUID CHAR(36) COMMENT '用户UID',
	ClientHostName VARCHAR(64) COMMENT '用户使用的客户端主机或IP',
	BusinessOperation VARCHAR(128) COMMENT '业务操作',
	InputParam TEXT COMMENT '输入参数',
	AuditDate DATETIME COMMENT '审计记录时间',
	PRIMARY KEY (BusinessAuditSeq),
	KEY (UserUID)
) ENGINE=InnoDB COMMENT='业务审计日志。'
;


CREATE TABLE LogClinicDataOperation
(
	LogSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	UserUID CHAR(36) NOT NULL COMMENT '访问用户UID',
	ClientHostName VARCHAR(256) COMMENT '客户端主机或IP',
	ClientApplication VARCHAR(64) COMMENT '客户端应用程序名称',
	BusinessUID CHAR(36) NOT NULL COMMENT '业务UID，对应各业务表主键',
	BusinessType VARCHAR(64) NOT NULL COMMENT '业务类型。Exam:检查、Lab:检验、MedicalRecord:病历、Consult:会诊、Teaching:教学、VodPlay:视频点播',
	ClassCode VARCHAR(128) COMMENT '文档大类代码。Exam:检查、Lab:检验、MedicalRecord:病历、ConsultRequest:会诊申请、ConsultResult:会诊结果、Teaching:教学、VodPlay:视频点播',
	TypeCode VARCHAR(128) COMMENT '文档小类代码。详见DocumentService设计文档',
	OperationType TINYINT NOT NULL COMMENT '0增、1删、2改、3查',
	CreateDate DATETIME COMMENT '日志创建日期',
	PRIMARY KEY (LogSeq),
	KEY (UserUID)
) ENGINE=InnoDB COMMENT='临床数据操作日志'
;


CREATE TABLE LogWebInterface
(
	LogSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	UserUID CHAR(36) COMMENT '用户UID',
	ClientUserID VARCHAR(64) COMMENT '客户端用户ID或工号',
	ClientDeptID VARCHAR(64) COMMENT '客户端科室ID',
	ClientOrganizationID VARCHAR(64) COMMENT '客户端机构ID',
	ClientHostName VARCHAR(256) COMMENT '客户端主机或IP',
	WebMethod VARCHAR(128) COMMENT 'Web方法',
	WebInputParam TEXT COMMENT '输入参数',
	CreateDate DATETIME COMMENT '日志创建时间',
	PRIMARY KEY (LogSeq)
) ENGINE=InnoDB COMMENT='Web接口日志'
;


CREATE TABLE LogWebInterfaceObsReq
(
	LogObsReqSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	LogSeq BIGINT NOT NULL COMMENT '关联访问日志',
	ObservationUID CHAR(36) NOT NULL COMMENT '观察请求UID',
	CreateDate DATETIME COMMENT '日志创建时间',
	PRIMARY KEY (LogObsReqSeq),
	KEY (LogSeq)
) ENGINE=InnoDB COMMENT='Web接口访问日志，观察请求记录'
;


CREATE TABLE AdminFunctionMst
(
	FunctionID VARCHAR(16) NOT NULL COMMENT '系统管理功能ID',
	ParentFunctionID VARCHAR(16) COMMENT '父功能ID，如果为空，则为第一级功能分类',
	FunctionName VARCHAR(64) NOT NULL COMMENT '系统管理功能名称',
	ControllerName VARCHAR(256) COMMENT '功能页面地址，对应MVC中Url.Action的controllerName。有值时，才是实际功能页面，为空表示该功能用于分类用。',
	ActionName VARCHAR(64) COMMENT '对应MVC中Url.Action的actionName。',
	Parameter VARCHAR(64) COMMENT 'Url地址的参数',
	Description VARCHAR(256) COMMENT '功能说明，可以用于界面的提示',
	SortNO SMALLINT COMMENT '同级中的排序号',
	Active BOOL COMMENT '该功能是否启用，1:启用，0:不启用',
	PRIMARY KEY (FunctionID)
) ENGINE=InnoDB COMMENT='管理功能定义表，系统管理程序根据该表配置，加载相应的功能项。'
;


CREATE TABLE AssigningAuthorityMst
(
	AuthorityID VARCHAR(64) NOT NULL COMMENT '号码分配系统ID',
	AuthorityName VARCHAR(64) COMMENT '号码分配系统名称',
	NamespaceID VARCHAR(64) COMMENT 'HL7 2.9.21 HD - hierarchic designator。The HD is designed to be used either as a local identifier (with only the <namespace ID> valued) or a publicly-assigned identifier, a UID (<universal ID> and <universal ID type> both valued).',
	UniversalID VARCHAR(64) COMMENT 'HL7 2.9.21 HD - hierarchic designator。The HD is designed to be used either as a local identifier (with only the <namespace ID> valued) or a publicly-assigned identifier, a UID (<universal ID> and <universal ID type> both valued).',
	UniversalIDType VARCHAR(64) COMMENT 'HL7 2.9.21 HD - hierarchic designator。The HD is designed to be used either as a local identifier (with only the <namespace ID> valued) or a publicly-assigned identifier, a UID (<universal ID> and <universal ID type> both valued).',
	IsMPI BOOL COMMENT '是否为MPI号码分配机构。1:是，0:否。是的话表示PatientMasterID是该系统生成的，只能有一个值为1。',
	Memo VARCHAR(256) COMMENT '备注',
	DeleteFlag BOOL DEFAULT 0 COMMENT '删除标志，0：未删除 1：已删除。默认为0。',
	PRIMARY KEY (AuthorityID)
) ENGINE=InnoDB COMMENT='编码系统表，对应HL7中的AssigningAuthority概念和CX数据类型。'
;


CREATE TABLE DeptMst
(
	DeptID VARCHAR(64) NOT NULL COMMENT '科室部门ID',
	OrganizationID VARCHAR(64) NOT NULL COMMENT '所属机构ID',
	DeptName VARCHAR(64) COMMENT '科室部门名称',
	OfficePhoneNO VARCHAR(64) COMMENT '办公电话',
	InputCode VARCHAR(64) COMMENT '输入码',
	Memo VARCHAR(256) COMMENT '备注信息',
	DeleteFlag BOOL DEFAULT 0 COMMENT '删除标志，0：未删除，1：已删除。默认为0',
	RowTimestamp BLOB COMMENT '时间戳',
	DeptType VARCHAR(64) COMMENT '科室类型，Clinic:临床科室、Technology:医技科室',
	ExamClass VARCHAR(64) COMMENT '医技科室分类，见字典ExamClass',
	PRIMARY KEY (DeptID, OrganizationID),
	KEY (OrganizationID)
) ENGINE=InnoDB COMMENT='科室部门管理表'
;


CREATE TABLE DicItemMapMst
(
	DicItemMapSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	TypeCode VARCHAR(100) NOT NULL COMMENT '字典类型代码',
	SourceItemCode VARCHAR(128) NOT NULL COMMENT '源字典项目代码',
	SourceCodeScheme VARCHAR(128) NOT NULL COMMENT '源字典项目编码体系',
	TargetItemCode VARCHAR(128) NOT NULL COMMENT '目标字典项目代码',
	TargetCodeScheme VARCHAR(128) NOT NULL COMMENT '目标字典项目编码体系',
	PRIMARY KEY (DicItemMapSeq),
	KEY (TypeCode)
) ENGINE=InnoDB COMMENT='字典项目映射，用于相同字典类型不同字典项目编码体系之间的映射。'
;


CREATE TABLE DicItemMst
(
	TypeCode VARCHAR(100) NOT NULL COMMENT '字典类型代码',
	ItemCode VARCHAR(100) NOT NULL COMMENT '字典代码',
	ItemCodeScheme VARCHAR(100) NOT NULL DEFAULT 'local' COMMENT '字典项目编码体系',
	ItemName VARCHAR(128) COMMENT '字典名称',
	ParentItemCode VARCHAR(128) COMMENT '父项目ID',
	InputCode VARCHAR(128) COMMENT '输入码',
	SortNO INTEGER COMMENT '排序号',
	Memo VARCHAR(2000) COMMENT '备注',
	DefaultFlag BOOL DEFAULT 0 COMMENT '默认标志，0：未默认、1：默认',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除',
	RowTimestamp BLOB COMMENT '时间戳',
	ItemRepresen VARCHAR(2000) COMMENT '字典表示，根据字典类型，可存放相应所需的内容',
	ItemRepresenExt1 VARCHAR(2000) COMMENT '字典扩展，根据字典类型，可存放相应所需的内容',
	ItemRepresenExt2 VARCHAR(2000) COMMENT '字典扩展，根据字典类型，可存放相应所需的内容',
	ItemRepresenExt3 VARCHAR(2000) COMMENT '字典扩展，根据字典类型，可存放相应所需的内容',
	ItemRepresenExt4 VARCHAR(2000) COMMENT '字典扩展，根据字典类型，可存放相应所需的内容',
	ItemRepresenExt5 VARCHAR(2000) COMMENT '字典扩展，根据字典类型，可存放相应所需的内容',
	ItemRepresenExt6 VARCHAR(2000) COMMENT '字典扩展，根据字典类型，可存放相应所需的内容',
	ItemRepresenExt7 VARCHAR(2000) COMMENT '字典扩展，根据字典类型，可存放相应所需的内容',
	ItemRepresenExt8 VARCHAR(2000) COMMENT '字典扩展，根据字典类型，可存放相应所需的内容',
	PRIMARY KEY (TypeCode, ItemCode, ItemCodeScheme),
	KEY (TypeCode)
) ENGINE=InnoDB COMMENT='字典项目表'
;


CREATE TABLE DicTypeMst
(
	TypeCode VARCHAR(100) NOT NULL COMMENT '字典类型代码',
	TypeName VARCHAR(128) COMMENT '字典类型名称',
	CodeScheme VARCHAR(128) COMMENT '编码体系',
	TypeClass TINYINT COMMENT '字典分类，0：系统字典，1：功能字典',
	AllowCreateItem BOOL COMMENT '是否允许创建字典项目，0：不允许，1：允许',
	AllowUpdateItem BOOL COMMENT '是否允许更新字典项目，0：不允许，1：允许',
	AllowDeleteItem BOOL COMMENT '是否允许删除字典项目，0：不允许，1：允许',
	Memo VARCHAR(2000) COMMENT '备注',
	ItemRepresenTitle VARCHAR(64) COMMENT '字典项ItemRepresen字段的显示Title',
	ItemRepresenExt1Title VARCHAR(64) COMMENT '字典项ItemRepresenExt1字段的显示Title',
	ItemRepresenExt2Title VARCHAR(64) COMMENT '字典项ItemRepresenExt2字段的显示Title',
	ItemRepresenExt3Title VARCHAR(64) COMMENT '字典项ItemRepresenExt3字段的显示Title',
	ItemRepresenExt4Title VARCHAR(64) COMMENT '字典项ItemRepresenExt4字段的显示Title',
	ItemRepresenExt5Title VARCHAR(64) COMMENT '字典项ItemRepresenExt5字段的显示Title',
	ItemRepresenExt6Title VARCHAR(64) COMMENT '字典项ItemRepresenExt6字段的显示Title',
	ItemRepresenExt7Title VARCHAR(64) COMMENT '字典项ItemRepresenExt7字段的显示Title',
	ItemRepresenExt8Title VARCHAR(64) COMMENT '字典项ItemRepresenExt8字段的显示Title',
	PRIMARY KEY (TypeCode)
) ENGINE=InnoDB COMMENT='字典类型表'
;


CREATE TABLE ExpertMst
(
	UserUID CHAR(36) NOT NULL COMMENT '专家用户UID，与UserMst表一致',
	ExpertTitleCode VARCHAR(64) COMMENT '专家职称代码',
	ExpertTitle VARCHAR(64) COMMENT '专家职称',
	ExpertIntroduce VARCHAR(2000) COMMENT '专家介绍',
	Speciality VARCHAR(1000) COMMENT '特长',
	PRIMARY KEY (UserUID),
	KEY (UserUID)
) ENGINE=InnoDB COMMENT='专家表'
;


CREATE TABLE MediaMst
(
	MediaUID CHAR(36) NOT NULL COMMENT '媒质唯一号',
	MediaName VARCHAR(64) NOT NULL COMMENT '媒质名称',
	PathType VARCHAR(64) NOT NULL COMMENT '路径类型，virtual:IIS虚拟路径、physical:物理路径、AmazonS3:亚马逊S3云存储、AliyunOSS:阿里云OSS存储',
	MediaHost VARCHAR(64) COMMENT '存储媒质主机，如果是本地媒质则为主机名或IP地址（用于给第三方提供共享文件时用，不是必须），如果是云存储则为云存储地址（必须）',
	Path VARCHAR(256) NOT NULL COMMENT '根据路径类型，需要填写不同的值。virtual:填写与IIS站点目录的相对路径，如Files，则表示站点根目录下的Files子目录。Files/Image表示站点根目录下的Files/Image子目录(如果站点下建了虚拟目录，则系统会自动影射到实际路径)。physical:填写服务器能访问到的物理路径，可以是以D:\\开头的本机路径，也可以是以\\\\开头的共享路径。',
	CurrentFlag BOOL DEFAULT 0 COMMENT '是否当前媒质，文件上传时存放在当前媒质，0：否，1：是',
	CreateUserUID VARCHAR(64) COMMENT '创建用户UID',
	CreateUserName VARCHAR(64) COMMENT '创建用户名称',
	CreateDate DATETIME COMMENT '创建日期',
	Memo VARCHAR(256) COMMENT '备注',
	SortNO INTEGER COMMENT '排序号',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	AccessId VARCHAR(256) COMMENT '访问id，如云存储ID',
	AccessKey VARCHAR(256) COMMENT '访问key，如云存储key',
	PRIMARY KEY (MediaUID)
) ENGINE=InnoDB COMMENT='媒质表'
;


CREATE TABLE OrganizationMst
(
	OrganizationID VARCHAR(64) NOT NULL COMMENT '组织机构ID',
	OrganizationName VARCHAR(64) COMMENT '组织机构名称',
	Alias VARCHAR(256) COMMENT '别名，多个以,分隔',
	InputCode VARCHAR(64) COMMENT '输入码',
	ContactUserName VARCHAR(64) COMMENT '联系人姓名',
	OfficePhoneNO VARCHAR(64) COMMENT '联系人办公电话',
	PersonalPhoneNO VARCHAR(64) COMMENT '联系人个人电话',
	Email VARCHAR(64) COMMENT '电子邮箱',
	Address VARCHAR(256) COMMENT '机构地址',
	OrganizationTypeCode VARCHAR(64) COMMENT '机构类别代码，见字典。',
	ParentOrganizationID VARCHAR(64) COMMENT '父机构ID',
	CreateUserUID CHAR(36) COMMENT '创建用户',
	CreateDate DATETIME COMMENT '创建日期',
	Memo VARCHAR(256) COMMENT '备注信息',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除，1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	OrganizationCode VARCHAR(64) COMMENT '组织机构代码',
	Province VARCHAR(30) COMMENT '省份',
	City VARCHAR(20) COMMENT '城市',
	District VARCHAR(64) COMMENT '区县',
	PRIMARY KEY (OrganizationID)
) ENGINE=InnoDB COMMENT='组织机构管理表'
;


CREATE TABLE PixRuleFieldMst
(
	RuleFieldSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	RuleUID CHAR(36) NOT NULL COMMENT '规则UID',
	FieldName VARCHAR(64) NOT NULL COMMENT '匹配字段名',
	PRIMARY KEY (RuleFieldSeq),
	KEY (RuleUID)
) ENGINE=InnoDB COMMENT='病人交叉索引规则字段配置'
;


CREATE TABLE PixRuleMst
(
	RuleUID CHAR(36) NOT NULL COMMENT '主键',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	LastUpdateUserUID CHAR(36) COMMENT '最后更新用户',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	RuleType TINYINT NOT NULL COMMENT '规则类型，0:或方式匹配（一个字段匹配表示匹配）、1:且方式匹配（全部字段匹配）',
	SortNO SMALLINT COMMENT '排序号',
	PRIMARY KEY (RuleUID)
) ENGINE=InnoDB COMMENT='病人交叉索引规则配置'
;


CREATE TABLE ServiceConfigMst
(
	ServiceUID CHAR(36) NOT NULL COMMENT '主键',
	ServiceType VARCHAR(64) NOT NULL COMMENT '服务类型。见字典ServiceType。XDSRegistry:XDS注册库、XDSRepository:XDS存储库、XDSDocumentConsumer:XDS消费者、WADO:WADO服务、DICOM:DICOM、HL7V2:HL7V2服务、HL7V3:HL7V3服务、ICCWebClient:影像Web浏览服务、ICCServer:影像处理服务、RIDDisplay:IHE RID显示Web服务、RIDInformationSource:IHE RID文档源服务、DocumentService:文档服务、HealthRecord:健康档案、BusinessService业务服务、InterfaceService接口服务。',
	ServiceID VARCHAR(128) COMMENT '服务ID。XDSRegistry:RegistryUniqueID、XDSRepository:RepositoryUniqueID、DICOM:AE Title、WADO:AE Title、HL7V2:为MSH-5 Receiving application、HL7V3:receiver.device.id.root值、ICCWebClient:AE Title、ICCServer:对应DataSource、DocumentService:唯一ID。',
	ServiceName VARCHAR(64) COMMENT '服务名称，仅用于显示',
	Endpoint VARCHAR(256) COMMENT '服务节点地址。XDSRegistry:http地址、XDSRepository:http地址、WADO:http地址、DICOM:IP:Port、HL7V2:IP:Port、HL7V3服务时:http地址、ICCWebClient:http地址、ICCServer:UserID:Password@IP:Port、RIDDisplay:http地址、RIDInformationSource:http地址、TDSService:http地址。',
	EndpointTLS VARCHAR(256) COMMENT 'TLS加密传输的服务节点地址。格式同Endpoint格式。',
	UseTLS BOOL DEFAULT 0 COMMENT '是否使用TLS，0：服务地址使用Endpoint字段值，1：服务地址使用EndpointTLS字段值。',
	Thumbprint VARCHAR(500) COMMENT '当使用TLS时，该字段存放证书微缩图信息。',
	MediaUID CHAR(36) COMMENT '服务媒质UID，如果该服务涉及到存储，可以指定存储媒质，否则系统直接从存储媒质表获取。',
	CurrentFlag BOOL DEFAULT 0 COMMENT '同种服务类型下是否为当前服务。0:非当前服务，1:当前服务。',
	Memo VARCHAR(256) COMMENT '备注',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	EndpointInternet VARCHAR(256) COMMENT '外网服务节点地址',
	EndpointTLSInternet VARCHAR(256) COMMENT '外网TLS加密传输的服务节点地址',
	PRIMARY KEY (ServiceUID),
	KEY (MediaUID)
) ENGINE=InnoDB COMMENT='服务配置表'
;


CREATE TABLE StaffMst
(
	StaffUserID VARCHAR(64) NOT NULL COMMENT '员工用户唯一号，该字段可与其他系统关联，为该系统中的用户唯一号。对应各个业务表中用户的医生ID。',
	AssigningAuthority VARCHAR(64) NOT NULL COMMENT '员工用户唯一号分配机构',
	StaffID VARCHAR(64) COMMENT '工号',
	Name VARCHAR(64) COMMENT '员工姓名',
	Sex VARCHAR(6) COMMENT '性别：男、女',
	BirthDate DATETIME COMMENT '生日',
	ContactPhoneNO VARCHAR(64) COMMENT '联系电话',
	StaffRoleID VARCHAR(64) COMMENT '服务者职责（角色）代码，标识服务者在某项活动中的职责和角色',
	StaffRoleName VARCHAR(64) COMMENT '服务者职责（角色），标识服务者在某项活动中的职责和角色，如接诊医师、收费员、化验员',
	TechnologyTitle VARCHAR(64) COMMENT '服务者专业技术职务，标识服务者所具备的专业技术职务，如主任医师、副主任医师',
	TechnologyGrade VARCHAR(16) COMMENT '专业技术职务等级，标识服务者的专业技术职务等级，如高级、中级等',
	Education VARCHAR(16) COMMENT '学历，标识服务者求学的经历，如本科、大专',
	Professional VARCHAR(64) COMMENT '专业，标识服务者所学的学业门类，如公共卫生专业、卫生管理专业等',
	JobTitle VARCHAR(64) COMMENT '标识服务者所担任的职务，如院长、科主任',
	DeptID VARCHAR(64) COMMENT '所属科室ID',
	DeptName VARCHAR(64) COMMENT '科室名称',
	OrganizationID VARCHAR(64) COMMENT '所属机构',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (StaffUserID, AssigningAuthority),
	KEY (DeptID, OrganizationID),
	KEY (OrganizationID)
) ENGINE=InnoDB COMMENT='人员信息'
;


CREATE TABLE SysParameterMst
(
	Code VARCHAR(64) NOT NULL COMMENT '配置参数代码',
	Name VARCHAR(64) COMMENT '配置参数名称',
	Value VARCHAR(8000) COMMENT '配置参数值',
	Module VARCHAR(64) COMMENT '参数所属模块，为空则为通用参数',
	Memo VARCHAR(256) COMMENT '配置参数备注',
	PRIMARY KEY (Code)
) ENGINE=InnoDB COMMENT='系统参数配置表，该配置内容为系统全局配置信息'
;


CREATE TABLE DicomStudy
(
	StudySeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	FileUID CHAR(36),
	PatientName VARCHAR(64),
	PatientID VARCHAR(64),
	StudyDateTime DATETIME,
	AccessionNumber VARCHAR(64),
	ModalityInStudy VARCHAR(64),
	StudyID VARCHAR(64),
	StudyInstanceUID VARCHAR(64),
	PRIMARY KEY (StudySeq),
	INDEX IX_DicomStudy_FileUID (FileUID ASC)
) ENGINE=InnoDB COMMENT='影像文档时，需要记录影像的检查信息，以便后续可以使用DICOM Q/R或WADO。'
;


CREATE TABLE Document
(
	FileUID CHAR(36) NOT NULL COMMENT '文件唯一UID',
	BusinessID VARCHAR(64) COMMENT '业务唯一号',
	BusinessType VARCHAR(64) COMMENT '业务类型。Exam:检查、Lab:检验、MedicalRecord:病历、Consult:会诊、Teaching:教学、VodPlay:视频点播。',
	BusinessTime DATETIME COMMENT '业务日期',
	ClassCode VARCHAR(128) COMMENT '文档大类代码。Exam:检查、Lab:检验、MedicalRecord:病历、ConsultRequest:会诊申请、ConsultResult:会诊结果、Teaching:教学、VodPlay:视频点播',
	TypeCode VARCHAR(128) COMMENT '文档小类代码。详见DocumentService设计文档。',
	FormatCode VARCHAR(128) COMMENT '文档格式代码。1.2.840.10008.5.1.4.1.1.88.59：DICOM KOS文件、DICOMDIR：DICOM DIR文件',
	EntryUUID VARCHAR(128) COMMENT 'XDSb文档管理全局唯一号。This globally unique identifier is primarily intended for use as a document registry management identifier.',
	UniqueID VARCHAR(128) COMMENT '文件创建者生成的文档唯一标识',
	MimeType VARCHAR(128) COMMENT '文件MIME类型',
	FileSHA VARCHAR(128) NOT NULL COMMENT '使用SHA1算法得到的文件的哈希值',
	FileSize INTEGER COMMENT '文件大小，单位为字节',
	FileCreateTime DATETIME COMMENT '文件创建时间',
	FileCreateUserID VARCHAR(64) COMMENT '文档创建用户',
	FileCreateUserName VARCHAR(64) COMMENT '文档创建用户姓名',
	CreateOrganizationID VARCHAR(64) COMMENT '文档创建机构ID',
	OriginalFileName VARCHAR(256) COMMENT '原文件名',
	Title VARCHAR(128) COMMENT '文档标题',
	UploadTime DATETIME COMMENT '文件上传时间',
	ParentFileUID CHAR(36) COMMENT '父文档UID，为空则没有父文档。',
	TransformMimeType VARCHAR(128) COMMENT '当原始的MIME不被支持时，会对文档进行转换，该字段存放转换后的MIME。',
	DicomInfo VARCHAR(2000) COMMENT 'DICOM信息，JSON格式，用于如胶片为JPG格式，但第三方需要DICOM格式时，将JPG转换为DICOM时所需的信息',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除',
	FolderFlag BOOL NOT NULL DEFAULT 0 COMMENT '文件夹标志，0：文档、1：文件夹',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (FileUID),
	INDEX IX_Document_BusinessID (BusinessID ASC),
	INDEX IX_Document_BusinessType (BusinessType ASC),
	INDEX IX_Document_ClassCode (ClassCode ASC),
	INDEX IX_Document_TypeCode (TypeCode ASC),
	INDEX IX_Document_FlieSHA (FileSHA ASC),
	INDEX IX_Document_FlieUID (FileUID ASC),
	INDEX IX_Document_UploadTime (UploadTime ASC)
) ENGINE=InnoDB COMMENT='文档记录'
;


CREATE TABLE DocumentInService
(
	FileUID CHAR(36) NOT NULL COMMENT '文件UID',
	ServiceUID CHAR(36) NOT NULL COMMENT '文件所在的存储服务UID',
	MediaUID CHAR(36) NOT NULL,
	FileRelativePath VARCHAR(256) NOT NULL COMMENT '文件相对路径',
	CreateTime DATETIME COMMENT '记录创建时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除',
	PRIMARY KEY (FileUID, ServiceUID),
	KEY (MediaUID),
	INDEX IX_DocumentInService_MediaUID (MediaUID ASC),
	INDEX IX_DocumentInService_FileUID (FileUID ASC),
	INDEX IX_DocumentInService_ServiceUID (ServiceUID ASC)
) ENGINE=InnoDB COMMENT='文档存储的服务，一个服务存放多个文档，一个文件可以放在多个服务上。'
;


CREATE TABLE DocumentRecipient
(
	RecipientSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	FileUID CHAR(36) NOT NULL COMMENT '文档UID',
	RecipientOrganizationID VARCHAR(64) COMMENT '接收机构ID',
	RecipientUserID VARCHAR(64) COMMENT '接收者ID',
	RecipientFlag BOOL NOT NULL DEFAULT 0 COMMENT '接收状态，0未接收、1已接收',
	RecipientTime DATETIME COMMENT '接收时间',
	PRIMARY KEY (RecipientSeq),
	KEY (FileUID)
) ENGINE=InnoDB COMMENT='文档预期的接收者'
;


CREATE TABLE ADTInfo
(
	ADTInfoSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '入出转唯一序号',
	VisitUID CHAR(36) NOT NULL COMMENT '关联就诊序列号',
	OrganizationID VARCHAR(64) COMMENT 'ADT所发生的组织机构',
	DeptID VARCHAR(64) COMMENT 'ADT所发生的科室部门ID',
	DeptName VARCHAR(64) COMMENT 'ADT所发生的科室部门名称',
	PointOfCare VARCHAR(64) COMMENT 'ADT所发生的病区',
	Room VARCHAR(20) COMMENT 'ADT所发生的病房',
	Bed VARCHAR(64) COMMENT 'ADT所发生的病床',
	Action VARCHAR(8) COMMENT 'ADT所发生的具体动作，见字典，如入院、转院、转科、转床、出院等。',
	ActionDate DATETIME COMMENT '动作发生时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (ADTInfoSeq),
	KEY (VisitUID),
	INDEX IX_ADTInfo_VisitUID (VisitUID ASC)
) ENGINE=InnoDB COMMENT='病人就诊入出转信息'
;


CREATE TABLE AdverseReaction
(
	AdverseReactionSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '唯一序列号',
	PatientID VARCHAR(64) COMMENT '病人号',
	PIDAssigningAuthority VARCHAR(64) COMMENT '病人号分配机构',
	PatientMasterID VARCHAR(64) COMMENT '病人主索引号',
	VisitUID CHAR(36) COMMENT '关联就诊UID，当该过敏与某次就诊关联，则有值',
	OrderUID CHAR(36) COMMENT '关联医嘱UID，当该过敏是根据医生下达的过敏测试发生过敏时，则有值',
	AllergenTypeCode VARCHAR(256) COMMENT '过敏类型代码，如药物过敏、食物过敏',
	AllergenTypeName VARCHAR(256) COMMENT '过敏类型名称，如药物过敏、食物过敏',
	AllergenCode VARCHAR(256) COMMENT '过敏代码',
	AllergenCodeScheme VARCHAR(64) COMMENT '过敏代码编码体系',
	AllergenName VARCHAR(256) COMMENT '过敏名称',
	AllergySource VARCHAR(256) COMMENT '过敏源，如抗生素过敏、碘过敏、花粉过敏等',
	AllergenDrug VARCHAR(256) COMMENT '过敏药物',
	AllergyReactionID VARCHAR(256) COMMENT '过敏症状反应代码',
	AllergyReaction VARCHAR(2000) COMMENT '过敏症状反应描述',
	AllergyIllness VARCHAR(64) COMMENT '过敏病情状态',
	AllergySeverity VARCHAR(16) COMMENT '过敏严重程度',
	OnsetDate DATETIME COMMENT '第一次过敏反应的时间',
	OnsetDateText VARCHAR(256) COMMENT '当不知道第一次过敏反应的准确时间，则此字段保存对时间的文本描述，如儿童时期',
	ReportedDate DATETIME COMMENT '过敏反应报告的时间',
	ReportedbyID VARCHAR(64) COMMENT '报告过敏反应的用户ID',
	ReportedbyName VARCHAR(64) COMMENT '报告过敏反应的用户姓名',
	Memo VARCHAR(256) COMMENT '备注',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	DeptID VARCHAR(64) COMMENT '科室ID',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (AdverseReactionSeq),
	KEY (PatientID, PIDAssigningAuthority),
	INDEX IX_AdverseReaction_VisitUID (VisitUID ASC),
	INDEX IX_AdverseReaction_PatientMasterID (PatientMasterID ASC),
	INDEX IX_AdverseReaction_OrderUID (OrderUID ASC)
) ENGINE=InnoDB COMMENT='过敏及不良反应'
;


CREATE TABLE ClinicInfoApplyLink
(
	LinkSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	BusinessID VARCHAR(64) NOT NULL COMMENT '业务唯一号',
	BusinessType VARCHAR(64) NOT NULL COMMENT '业务类型。Consult:会诊、Teaching:教学。',
	ClinicInfoID VARCHAR(64) NOT NULL COMMENT '临床信息ID，对应各个临床信息表主键',
	ClinicInfoType VARCHAR(64) NOT NULL COMMENT '临床信息分类，用于判断ClinicInfoID对应的临床信息表，如Visit、Exam、Lab等。见字典ClinicInfoType。',
	CreateTime DATETIME COMMENT '记录创建时间',
	PRIMARY KEY (LinkSeq)
) ENGINE=InnoDB COMMENT='临床信息应用链接，将临床信息与实际的应用如会诊进行关联。'
;


CREATE TABLE CommonOrder
(
	OrderUID CHAR(36) NOT NULL COMMENT '医嘱唯一序号',
	PatientID VARCHAR(64) COMMENT '病人号',
	PIDAssigningAuthority VARCHAR(64) COMMENT '病人号分配机构',
	PatientMasterID VARCHAR(64) COMMENT '关联病人主索引',
	VisitUID CHAR(36) NOT NULL COMMENT '关联就诊序列号',
	OrderText VARCHAR(100) NOT NULL COMMENT '医嘱内容',
	OrderCode VARCHAR(64) COMMENT '医嘱代码',
	OrderClass VARCHAR(16) COMMENT '医嘱分类：药疗、观察(检查检验)、治疗、护理',
	ConditionText VARCHAR(256) COMMENT '情况说明，如给药时的一些前提条件',
	PlacerOrderNO VARCHAR(20) COMMENT '医嘱系统开出的号码',
	PlacerAssigningAuthority VARCHAR(64) COMMENT 'PlacerOrderNO号码的分配机构名',
	PlacerGroupNO VARCHAR(20) COMMENT '成组医嘱号，一致的表示同组医嘱，否则为空',
	SortNO INTEGER COMMENT '医嘱排序号',
	GroupSortNO SMALLINT COMMENT '成组医嘱排序号，在成组医嘱中的医嘱的排序号',
	ParentChildFlag BOOL COMMENT '父子医嘱标志，0：父医嘱、1：子医嘱',
	OrderStatus VARCHAR(16) COMMENT '医嘱状态，见字典表',
	ProviderID VARCHAR(64) COMMENT '医嘱创建者ID',
	ProviderName VARCHAR(64) COMMENT '医嘱创建者姓名',
	ProviderDeptID VARCHAR(64) COMMENT '开医嘱科室',
	ProviderDeptName VARCHAR(64) COMMENT '开医嘱科室名称',
	EnteredByID VARCHAR(64) COMMENT '医嘱录入者ID',
	EnteredByName VARCHAR(64) COMMENT '医嘱录入者名称',
	VerifiedByID VARCHAR(64) COMMENT '医嘱校验者ID',
	VerifiedByName VARCHAR(64) COMMENT '医嘱校验者姓名',
	ActionByID VARCHAR(64) COMMENT '医嘱执行者ID',
	ActionByName VARCHAR(64) COMMENT '医嘱执行者姓名',
	TemporaryFlag BOOL COMMENT '临时医嘱标志，0：非临时医嘱(长期医嘱)，1；临时医嘱',
	Quantity SMALLINT COMMENT '每次医嘱执行所提供的临床内容数量。如血液培养4小时/次，每次培养2个，每个培养20分钟，持续3天，则数量为2',
	RepeatPattern VARCHAR(16) COMMENT '医嘱执行频率，如血液培养4小时/次，每次培养2个，每个培养20分钟，持续3天，则频率为4小时/次，表示为Q4H',
	IntervalTime SMALLINT COMMENT '医嘱执行频率间隔时间，与RepeatPattern字段对应。如血液培养4小时/次，每次培养2个，每个培养20分钟，持续3天，则间隔时间为4',
	IntervalUnits VARCHAR(8) COMMENT '医嘱执行频率间隔单位，与RepeatPattern字段对应。如血液培养4小时/次，每次培养2个，每个培养20分钟，持续3天，则间隔单位为小时',
	OccurrenceDuration SMALLINT COMMENT '每次医嘱发生持续时间，如血液培养4小时/次，每次培养2个，每个培养20分钟，持续3天，则该时间为20',
	OccurrenceUnits VARCHAR(8) COMMENT '每次医嘱发生持续单位，如血液培养4小时/次，每次培养2个，每个培养20分钟，持续3天，则该单位为分钟',
	ServiceDuration SMALLINT COMMENT '医嘱总的持续时间，如血液培养4小时/次，每次培养2个，每个培养20分钟，持续3天，则该时间为3',
	ServiceDurationUnits VARCHAR(8) COMMENT '医嘱总的持续单位，如血液培养4小时/次，每次培养2个，每个培养20分钟，持续3天，则该单位为天',
	EnteredDate DATETIME COMMENT '医嘱录入时间',
	StartDate DATETIME COMMENT '医嘱开始时间',
	EndDate DATETIME COMMENT '医嘱结束时间，停止日期',
	Memo VARCHAR(256) COMMENT '备注',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	DeptID VARCHAR(64) COMMENT '科室ID',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (OrderUID),
	KEY (PatientID, PIDAssigningAuthority),
	KEY (VisitUID),
	INDEX IX_CommonOrder_VisitUID (VisitUID ASC)
) ENGINE=InnoDB COMMENT='医嘱通用信息，存储医嘱共同的信息。医嘱详细信息根据医嘱类型存储在不同表中'
;


CREATE TABLE Diagnosis
(
	DiagnosisSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '诊断序列号',
	VisitUID CHAR(36) NOT NULL COMMENT '就诊序列号',
	DiagnosisText VARCHAR(256) NOT NULL COMMENT '诊断内容',
	DiagnosisCode VARCHAR(64) COMMENT '诊断代码',
	CodeScheme VARCHAR(64) COMMENT '诊断采用的编码体系，见字典，如ICD-10',
	DiagnosisClass VARCHAR(20) COMMENT '诊断分类，见字典，如门诊诊断、入院诊断、出院诊断等。见诊断分类字典。',
	DiagnosisDate DATETIME COMMENT '诊断日期',
	DoctorID VARCHAR(64) COMMENT '诊断医生ID',
	DoctorName VARCHAR(64) COMMENT '诊断医生名称',
	Priority SMALLINT DEFAULT 0 COMMENT '诊断优先级。0:无  1:低  2:中  3:高。',
	ConfidentialFlag BOOL DEFAULT 0 COMMENT '诊断秘密标志，0：否、1：是',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。默认为0',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (DiagnosisSeq),
	INDEX IX_Diagnosis_VisitUID (VisitUID ASC)
) ENGINE=InnoDB COMMENT='就诊诊断信息'
;


CREATE TABLE HealthcareEvent
(
	EventSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '序列号',
	EventType VARCHAR(16) COMMENT '事件类型',
	EventName VARCHAR(64) COMMENT '事件名称，见字典，如病人入院',
	EventDescription VARCHAR(64) COMMENT '事件描述',
	EventDate DATETIME COMMENT '时间发生日期',
	EventEndDate DATETIME COMMENT '时间结束日期',
	EventPlace VARCHAR(200) COMMENT '时间发生地点',
	EventLocation VARCHAR(100) COMMENT '事件发生场所',
	EventReason VARCHAR(200) COMMENT '时间发生原因',
	EventResult VARCHAR(200) COMMENT '事件结局',
	PrincipalID VARCHAR(64) COMMENT '事件主要负责人ID',
	PrincipalName VARCHAR(64) COMMENT '事件主要负责人姓名',
	PatientMasterID VARCHAR(64) COMMENT '病人主索引号',
	VisitUID CHAR(36) COMMENT '就诊UID',
	ObjectUID CHAR(36) COMMENT '审计对象UID值，如病人主索引号，就诊序号',
	ObjectUIDType VARCHAR(64) COMMENT '审计对象ID类型，见字典，如病人就诊序号、观察序号等',
	DeptID VARCHAR(64) COMMENT '事件发生的科室部门ID',
	DeptName VARCHAR(64) COMMENT '事件发生的科室部门名称',
	OrganizationID VARCHAR(64) COMMENT '事件发生的组织机构ID',
	Status TINYINT DEFAULT 0 COMMENT '事件状态，0：正常，1：不可用，2：已删除',
	PRIMARY KEY (EventSeq),
	INDEX IX_HealthcareEvent_PatientMasterID (PatientMasterID ASC),
	INDEX IX_HealthcareEvent_VisitUID (VisitUID ASC),
	INDEX IX_HealthcareEvent_ObjectUID (ObjectUID ASC, ObjectUIDType ASC),
	INDEX IX_HealthcareEvent_Status (Status ASC)
) ENGINE=InnoDB COMMENT='审计日志信息'
;


CREATE TABLE MedicalRecord
(
	RecordUID CHAR(36) NOT NULL COMMENT '病历序列号',
	PatientID VARCHAR(64) COMMENT '病人号',
	PIDAssigningAuthority VARCHAR(64) COMMENT '病人号分配机构',
	PatientMasterID VARCHAR(64) COMMENT '关联病人主索引',
	VisitUID CHAR(36) COMMENT '关联就诊序列号',
	RecordID VARCHAR(64) COMMENT '所属机构分配的病历的标识号',
	AssigningAuthority VARCHAR(64) COMMENT '分配RecordID的机构或者系统',
	RecordTypeID VARCHAR(64) COMMENT '病历类型ID，见字典，如门诊初诊病历、入院记录、病程记录',
	RecordTypeName VARCHAR(64) COMMENT '病历类型名称，如门诊初诊病历、入院记录、病程记录',
	CreateDate DATETIME COMMENT '病历创建时间',
	DoctorID VARCHAR(64) COMMENT '病历的责任医生ID',
	DoctorName VARCHAR(64) COMMENT '病历的责任医生姓名',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	DeptID VARCHAR(64) COMMENT '病历的责任科室部门ID',
	Status VARCHAR(1) COMMENT '病历状态，0：已废弃、1：已提交、2：已确认',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (RecordUID),
	KEY (PatientID, PIDAssigningAuthority),
	KEY (VisitUID),
	INDEX IX_MedicalRecord_VisitUID (VisitUID ASC)
) ENGINE=InnoDB COMMENT='病历信息'
;


CREATE TABLE MedicalRecordDetail
(
	DetailSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '病历详细唯一序列号',
	RecordUID CHAR(36) NOT NULL COMMENT '关联病历序列号',
	SubID VARCHAR(16) COMMENT '子序号，用于分类同个病历中的不同详细项目',
	SortNO INTEGER COMMENT '排序号',
	ItemName VARCHAR(64) NOT NULL COMMENT '项目名称，如症状、体征、疾病史（含外伤）、手术史、输血史、家族疾病史、家族遗传病史等',
	ItemCode VARCHAR(64) COMMENT '项目在CodeSystem编码体系下的代码值',
	ItemCodeScheme VARCHAR(64) COMMENT '项目采用的编码体系，如LOINC、观察项目内部代码等',
	ValueTitle VARCHAR(64) COMMENT '值标题',
	ValueType VARCHAR(8) COMMENT '结果值类型，见字典',
	ValueText VARCHAR(8000) COMMENT '观察结果的文字记录',
	ValueCode VARCHAR(128) COMMENT '观察结果的代码值',
	ValueCodeScheme VARCHAR(64) COMMENT '观察结果代码的编码体系，见字典，如ICD-10',
	DoctorID VARCHAR(64) COMMENT '该详细内容的责任医生ID',
	DoctorName VARCHAR(64) COMMENT '该详细内容的责任医生名称',
	CreateDate DATETIME COMMENT '创建日期',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (DetailSeq),
	INDEX IX_MedicalRecordDetail_RecordUID (RecordUID ASC)
) ENGINE=InnoDB COMMENT='病历详细信息'
;


CREATE TABLE Medication
(
	MedicationUID CHAR(36) NOT NULL COMMENT '药品医嘱序列号',
	OrderUID CHAR(36) COMMENT '关联医嘱序列号',
	Dose DECIMAL(10,2) COMMENT '一次剂量',
	DoseUnit VARCHAR(16) COMMENT '一次剂量单位，如ml，g',
	DosageForm VARCHAR(16) COMMENT '药品剂型，如片剂',
	AmountMin DECIMAL(10,2) COMMENT '总量最小值，当为精确的情况下，表示精确的值',
	AmountMax DECIMAL(10,2) COMMENT '总量最大值，当为精确数量时该字段为空，使用GiveAmountMin表示',
	AmountUnits VARCHAR(16) COMMENT '给药总量单位，如ml、g、瓶',
	Route VARCHAR(20) COMMENT '给药途径，如口服',
	GiveMethod VARCHAR(100) COMMENT '药品用法描述',
	DrugID VARCHAR(64) COMMENT '药物ID',
	DrugName VARCHAR(100) COMMENT '药物名称',
	DrugClass VARCHAR(64) COMMENT '药物类别',
	ProviderID VARCHAR(64) COMMENT '执行该药疗医嘱的用户ID',
	ProviderName VARCHAR(64) COMMENT '执行该药疗医嘱的用户姓名',
	AdministerDate DATETIME COMMENT '执行时间',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (MedicationUID),
	KEY (OrderUID),
	INDEX IX_Medication_OrderUID (OrderUID ASC)
) ENGINE=InnoDB COMMENT='用药处方信息'
;


CREATE TABLE Nursing
(
	NursingUID CHAR(36) NOT NULL COMMENT '护理序列号',
	PatientID VARCHAR(64) COMMENT '病人号',
	PIDAssigningAuthority VARCHAR(64) COMMENT '病人号分配机构',
	PatientMasterID VARCHAR(64) COMMENT '关联病人主索引',
	VisitUID CHAR(36) COMMENT '关联就诊序列号',
	OrderUID CHAR(36) COMMENT '关联医嘱唯一号，当从医嘱过来的，则有值',
	NursingID VARCHAR(64) COMMENT '护理ID',
	NursingCodeScheme VARCHAR(64) COMMENT '护理代码编码体系，见字典',
	NursingName VARCHAR(64) COMMENT '护理名称',
	NursingTypeID VARCHAR(16) COMMENT '护理类型ID',
	NursingTypeName VARCHAR(64) COMMENT '护理类型名称',
	NursingGrade VARCHAR(16) COMMENT '护理等级',
	NursingText VARCHAR(200) COMMENT '护理描述',
	ProviderID VARCHAR(64) COMMENT '执行者ID',
	ProviderName VARCHAR(64) COMMENT '执行者姓名',
	AdministerDate DATETIME COMMENT '执行时间',
	Method VARCHAR(200) COMMENT '护理所用操作方法',
	NursingResult VARCHAR(200) COMMENT '护理结果',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	DeptID VARCHAR(64) COMMENT '科室ID',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (NursingUID),
	KEY (OrderUID),
	KEY (PatientID, PIDAssigningAuthority),
	KEY (VisitUID),
	KEY (OrderUID),
	INDEX IX_Nursing_VisitUID (VisitUID ASC)
) ENGINE=InnoDB COMMENT='护理记录，包括一般护理记录、特殊护理记录、手术护理记录、体温记录、出入量记录、注射输液巡视记录等；以及针对住院病人的护理评估与计划，包括入院评估记录、护理计划、出院评估及指导记录、一次性卫生耗材使用记录等'
;


CREATE TABLE NursingDetail
(
	DetailSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '护理详细唯一序列号',
	NursingUID CHAR(36) NOT NULL COMMENT '关联护理序列号',
	SubID VARCHAR(16) COMMENT '子序号，用于分类同个病历中的不同详细项目',
	SortNO INTEGER COMMENT '排序号',
	ItemName VARCHAR(64) NOT NULL COMMENT '项目名称',
	ItemCode VARCHAR(64) COMMENT '项目在CodeSystem编码体系下的代码值',
	ItemCodeScheme VARCHAR(64) COMMENT '项目采用的编码体系，如LOINC、观察项目内部代码等',
	ValueTitle VARCHAR(64) COMMENT '值标题',
	ValueType VARCHAR(8) COMMENT '结果值类型，见字典',
	ValueText VARCHAR(8000) COMMENT '观察结果的文字记录',
	ValueCode VARCHAR(128) COMMENT '观察结果的代码值',
	ValueCodeScheme VARCHAR(64) COMMENT '观察结果代码的编码体系，见字典，如ICD-10',
	NurseID VARCHAR(64) COMMENT '该详细内容的责任护士ID',
	NurseName VARCHAR(64) COMMENT '该详细内容的责任护士名称',
	CreateDate DATETIME COMMENT '创建日期',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (DetailSeq),
	INDEX IX_NursingDetail_NursingUID (NursingUID ASC)
) ENGINE=InnoDB COMMENT='病历详细信息'
;


CREATE TABLE ObservationRequest
(
	ObservationUID CHAR(36) NOT NULL COMMENT '观察唯一序号',
	PatientID VARCHAR(64) COMMENT '病人号',
	PIDAssigningAuthority VARCHAR(64) COMMENT '病人号分配机构',
	PatientMasterID VARCHAR(64) COMMENT '关联病人主索引',
	PatientClass VARCHAR(16) COMMENT '病人分类，如门诊、急诊、住院、体检',
	VisitUID CHAR(36) COMMENT '关联就诊序列号',
	OrderUID CHAR(36) COMMENT '关联医嘱序列号，当该观察请求是从医嘱过来的，则有值',
	OrganizationID VARCHAR(64) NOT NULL COMMENT '观察的机构',
	ClinicInfoType VARCHAR(64) COMMENT '临床信息分类，如Exam、Lab等。见字典ClinicInfoType。',
	PlacerOrderNO VARCHAR(64) COMMENT '申请号，在PlacerAssigningAuthority申请系统下必须保证唯一，若是通过医嘱而来的观察，则与CommonOrder中的PlacerOrderNO号相同',
	PlacerAssigningAuthority VARCHAR(64) COMMENT 'PlacerOrderNO号码的分配机构名',
	PlacerOrderDetailNO VARCHAR(64) COMMENT '申请单明细号，多个以,分隔',
	FillerOrderNO VARCHAR(64) COMMENT '观察分配唯一号，在FillerAssigningAuthority观察系统下必须保证唯一，如检查唯一号、检验唯一号。',
	FillerAssigningAuthority VARCHAR(64) COMMENT 'FillerOrderNO号码的分配机构名',
	FillerPatientID VARCHAR(64) COMMENT '观察系统分配的病人号',
	AccessionNumber VARCHAR(64) COMMENT '检查号或检验号，人工用的，如用于DICOM访问。',
	ServiceID VARCHAR(256) COMMENT '观察服务ID，如果是通过医嘱而来的，则与医嘱代码一致，如检查为检查项目ID、检验为检验套餐组合ID',
	ServiceCodeScheme VARCHAR(64) COMMENT '观察项目编码体系',
	ServiceText VARCHAR(256) COMMENT '观察服务内容，如果是通过医嘱而来的，则与医嘱内容一致，如检查为检查项目名称、检验为检验套餐组合名称',
	ServiceIDInsur VARCHAR(128) COMMENT '检查项目编码(医保)',
	ServiceSectID VARCHAR(64) COMMENT '观察服务类型ID，检查的为检查类型(见字典ExamType)，如CR、CT、US、ES。检验为检验类型，如血液、体液、生化、免疫、微生物、分子生物学等；测量见测量类型(见字典MeasureType)，如体温、脉搏、呼吸、血压、大便次数、出入量、身高体重等',
	ProcedureID VARCHAR(256) COMMENT '观察过程ID，如检查的检查部位ID，检验的检验项目ID',
	ProcedureName VARCHAR(256) COMMENT '观察过程名称，如检查的检查部位名称，检验的检验项目名称',
	ProviderID VARCHAR(64) COMMENT '观察申请者ID',
	ProviderName VARCHAR(64) COMMENT '观察申请者姓名',
	ProviderPhone VARCHAR(64) COMMENT '申请医生电话',
	RequestDeptID VARCHAR(64) COMMENT '观察申请科室ID',
	RequestDeptName VARCHAR(64) COMMENT '观察申请科室名称',
	RequestOrgID VARCHAR(64) COMMENT '申请机构ID',
	RequestOrgName VARCHAR(64) COMMENT '观察申请机构名称',
	RequestedDate DATETIME COMMENT '观察请求时间，申请时间',
	Reason VARCHAR(2000) COMMENT '申请观察目的',
	Attention VARCHAR(2000) COMMENT '申请观察注意事项',
	Symptom VARCHAR(4000) COMMENT '主诉症状体征',
	AdverseReaction VARCHAR(2000) COMMENT '过敏及不良反应',
	ClinicDiagnosis VARCHAR(2000) COMMENT '临床诊断',
	RelevantClinicalInfo TEXT COMMENT '病史等相关的临床信息',
	FastingFlag BOOL COMMENT '是否空腹，0非空腹，1空腹',
	TransportationMode VARCHAR(16) COMMENT '病人运输方式，见字典类型TransportationMode。CART:车或担架、PORT:床边、WALK:行走、WHLC:轮椅',
	SpecimenID VARCHAR(64) COMMENT '标本号',
	SpecimenName VARCHAR(64) COMMENT '标本名称',
	SpecimenType VARCHAR(64) COMMENT '标本类型',
	SpecimenSource VARCHAR(64) COMMENT '标本源，如肝脏',
	CollectorID VARCHAR(64) COMMENT '观察采集者ID，如采血者ID',
	CollectorName VARCHAR(64) COMMENT '观察采集者姓名，如采血者姓名',
	CollectionDept VARCHAR(64) COMMENT '观察采集科室',
	CollectionMethod VARCHAR(64) COMMENT '标本采集方法',
	CollectionVolume VARCHAR(16) COMMENT '观察采集容量，如验血时采血100ml，则该内容为100ml',
	SpecimenReceivedDate DATETIME COMMENT '标本接收时间',
	ScheduledDate DATETIME COMMENT '预约安排日期-开始。（该字段废弃，新的采用ObservationSchedule表中相应字段）',
	ScheduledDateEnd DATETIME COMMENT '预约安排日期-结束。（该字段废弃，新的采用ObservationSchedule表中相应字段）',
	RegTime DATETIME COMMENT '观察登记时间。如检查登记时间。',
	RegisterID VARCHAR(64) COMMENT '检查登记员ID',
	RegisterName VARCHAR(64) COMMENT '检查登记员姓名',
	ObservationDeptID VARCHAR(64) COMMENT '观察执行科室ID',
	ObservationDeptName VARCHAR(64) COMMENT '观察执行科室名称',
	ObservationDate DATETIME COMMENT '观察时间，如检查时间',
	ObservationEndDate DATETIME COMMENT '观察结束时间，如检查结束时间',
	ObservationLocation VARCHAR(64) COMMENT '观察发生的场所，如检查房间。',
	ObservationEquipmentID VARCHAR(64) COMMENT '观察设备ID，如检查设备的ID。',
	ObservationEquipment VARCHAR(64) COMMENT '观察设备名称，如检查设备名称',
	EquipmentModel VARCHAR(64) COMMENT '设备型号，能够表示某类设备的编号',
	ObservationMethod VARCHAR(256) COMMENT '保存该观察的所有观察方法，如检查方法、技术。每个观察结果也可以有相应的观察方法，存放在ObservationResult表。',
	StudyInstanceUID VARCHAR(1000) COMMENT '检查实例UID，多个以,分割开。',
	TechnicianID VARCHAR(64) COMMENT '观察技师ID',
	TechnicianName VARCHAR(64) COMMENT '观察技师名称',
	ResultAssistantID VARCHAR(64) COMMENT '结果助理ID，如报告医生。同ObservationResult表中相应字段值',
	ResultAssistantName VARCHAR(64) COMMENT '结果助理姓名，如报告医生。同ObservationResult表中相应字段值',
	ResultPrincipalID VARCHAR(64) COMMENT '结果主要负责人ID，如报告审核医生。同ObservationResult表中相应字段值',
	ResultPrincipalName VARCHAR(64) COMMENT '结果主要负责人姓名，如报告审核医生。同ObservationResult表中相应字段值',
	ResultReviseID VARCHAR(64) COMMENT '结果修订者ID',
	ResultReviseName VARCHAR(64) COMMENT '结果修订者姓名',
	PreliminaryDate DATETIME COMMENT '初步结果时间，如检查的初步报告时间',
	AuditDate DATETIME COMMENT '初步结果时间，如检查的审核报告时间',
	ReviseDate DATETIME COMMENT '结果修订时间',
	ResultDate DATETIME COMMENT '最后的结果时间，报告状态时为报告时间，审核状态时为审核时间，修订时为修改时间。',
	ResultOrganizationID VARCHAR(64) COMMENT '出结果的机构ID',
	ResultServiceCenterUID CHAR(36) COMMENT '出结果的服务中心UID',
	ResultStatus VARCHAR(16) COMMENT '观察结果状态名称。见字典ResultStatus_Exam',
	ResultStatusCode VARCHAR(16) COMMENT '观察结果状态代码。C:修订结果、F:最终结果、O:没有结果只有申请详情、P:初步结果、S:部分结果、W:错误结果。参见7.4.2.11 OBX-11 HL7 Table 0085 - Observation result status codes interpretation',
	ResultPrintCount SMALLINT DEFAULT 0 COMMENT '报告打印次数',
	ResultPrintTime DATETIME COMMENT '结果打印时间',
	AbnormalFlags VARCHAR(16) COMMENT '异常标志，如放射结果的阴阳性',
	CriticalValue VARCHAR(256) COMMENT '危急值',
	InfectionName VARCHAR(256) COMMENT '传染病',
	PrivacyLevel TINYINT COMMENT '密级，0:普通 不保护、1:秘密 本院可看、2:机密 请检科室可看、3:绝密 请检医生可看',
	PrivacyLevelExt VARCHAR(16) COMMENT '密级扩展，用于各种特殊秘密的控制。第一位病种，0:无须病种控制、1:恶性肿瘤、2:性病艾滋病、3:其它不治之症、4:精神类病、9:其它。第二位患者申明被特控调阅，0:无特控1:患者申明特控（无特殊原因不予调阅）。其余各位预留备用，可不填或填0。',
	Charges DECIMAL(8,2) COMMENT '检查费用，单位为元',
	Payments DECIMAL(8,2) COMMENT '病人实际支付费用，单位为元',
	PaymentsFlag BOOL COMMENT '付款标志，0未付款(未收费)、1已付款(已收费)',
	FilmCount SMALLINT COMMENT '胶片数量',
	FilmNeed BOOL COMMENT '是否需要胶片，0不需要，1需要',
	HasImage BOOL COMMENT '是否有影像，0:没有影像、1:有影像',
	ImageLocation TINYINT COMMENT '影像位置，0:影像在医院内、1:影像在区域中心',
	ConsultStatus TINYINT COMMENT '会诊标志，空:无会诊、10:申请、20:拒绝、30:接受、40:会诊中、50:部分完成(多专家会诊情况)、51:结束(会诊全部完成)、60:会诊取消',
	ConsultRequestDate DATETIME COMMENT '会诊申请时间',
	ConsultEndDate DATETIME COMMENT '会诊结束时间',
	LastUpdateDate DATETIME COMMENT '最后更新时间。',
	DataSource VARCHAR(128) COMMENT '数据来源',
	LockFlag BOOL DEFAULT 0 COMMENT '锁定状态，0-未锁定，1-锁定',
	LockUserUID CHAR(36) COMMENT '锁定用户',
	LockReason VARCHAR(1000) COMMENT '锁定原因',
	InWritingUserUID CHAR(36) COMMENT '报告书写中的用户，如果为空则当前没有用户在书写报告',
	MessageCount INTEGER DEFAULT 0 COMMENT '未处理消息提醒数量，对应UserMessage中ObjectUID=该检查ObservationUID的消息数量',
	UnProcessWorkflowCount INTEGER COMMENT '未处理的流程数量，对应ExamWorkflow表中ProcessFlag=0的记录数。',
	PushState BOOL NOT NULL DEFAULT 0 COMMENT '推送状态，用于数据与外部同步时用',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (ObservationUID),
	KEY (OrderUID),
	KEY (VisitUID),
	INDEX IX_ObservationRequest_ObservationUID (ObservationUID ASC),
	INDEX IX_ObservationRequest_PatientMasterID (PatientMasterID ASC),
	INDEX IX_ObservationRequest_ClinicInfoType (ClinicInfoType ASC),
	INDEX IX_ObservationRequest_PatientID (PatientID ASC, PIDAssigningAuthority ASC),
	INDEX IX_ObservationRequest_VisitUID (VisitUID ASC),
	INDEX IX_ObservationRequest_ServiceSectID (ServiceSectID ASC),
	INDEX IX_ObservationRequest_RegTime (RegTime ASC),
	INDEX IX_ObservationRequest_AccessionNumber (AccessionNumber ASC),
	INDEX IX_ObservationRequest_PlacerOrderNO (PlacerOrderNO ASC),
	INDEX IX_ObservationRequest_FillerOrderNO (FillerOrderNO ASC, FillerAssigningAuthority ASC),
	INDEX IX_ObservationRequest_OrganizationID (OrganizationID ASC)
) ENGINE=InnoDB COMMENT='观察请求记录，包括放射、核医学、超声、内窥镜、病理、心电图、脑电图、肌电、胃肠动力、肺功能、睡眠呼吸监测等各类医学检查记录；临床血液、体液、生化、免疫、微生物、分子生物学等各类医学检验记录；体温、脉搏、呼吸、血压、大便次数、出入量、身高体重测量记录'
;


CREATE TABLE ObservationResult
(
	ResultSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '观察结果序列号',
	ObservationUID CHAR(36) NOT NULL COMMENT '关联观察请求序列号',
	SetID SMALLINT COMMENT '同一个观察服务请求的结果顺序号',
	ObservationID VARCHAR(64) COMMENT '观察项目ID，检查时定义如下：GDT:检查所见、IMP:检查诊断、REC:诊断建议、ADT:诊断备注、ConsultAdvice:会诊意见、Gross:病理巨检、HR:心率、AR:房率、VR:室率、PR:PR间期、QRS:QRS波群持续时间、QT:QT间期、QTc:校正后的QT间期、P:P波间期、RV5:V5胸部导联R波幅值的绝对值、SV1:V1胸部导联S波幅值的绝对值、QRSII:Q点算向上的幅值与S点算向下的幅值之和、Paxis:P波的向量轴、QRSaxis:QRS 波的向量轴、Taxis:T波的向量轴；检验时为检验项目ID',
	ObservationCodeScheme VARCHAR(64) COMMENT '项目编码体系，见字典',
	ObservationText VARCHAR(64) COMMENT '观察项目文本，如检查时为空、检验时为检验项目名称',
	SubID VARCHAR(64) COMMENT '子序号，用于分类同个观察请求服务中的不同项目观察结果组',
	ValueTitle VARCHAR(64) COMMENT '结果值标题，用于显示，如检查所见、检查印象。',
	ValueType VARCHAR(8) COMMENT '观察结果值类型，CF:Coded Element With Formatted Values,ValueCodeSystem存放编码体系如ICD-10，ValueCode存储编码值，ValueText存放文本用于显示。FT:Formatted Text (Display),ValueText存放用于显示的文本，忽略ValueCodeSystem、ValueCode值.Formatted text usually implies a meaningful structure, e.g., a list of three。RP:Reference Pointer,ValueCodeSystem存放外部引用URI头，包括协议和主机等信息，如ftp://localhost，ValueCode存放外部引用的文件MIME格式，ValueText存放外部引用URI相对地址，与ValueCodeSystem组合成全路径。',
	ValueText VARCHAR(8000) COMMENT '观察结果值文本描述，根据ValueType的值类型，存储相应的内容',
	ValueCode VARCHAR(128) COMMENT '观察结果值代码，细菌药敏试验保存耐药敏感度（R、I、S，分别对应：耐药、中敏、敏感）',
	ValueCodeSystem VARCHAR(64) COMMENT '观察结果值代码编码体系，见字典',
	ValueUnits VARCHAR(16) COMMENT '观察结果值单位',
	ResultStatus VARCHAR(16) COMMENT '观察结果状态名称。',
	ResultStatusCode VARCHAR(16) COMMENT '观察结果状态代码。C:修订结果、F:最终结果、O:没有结果只有申请详情、P:初步结果、S:部分结果、W:错误结果。参见7.4.2.11 OBX-11 HL7 Table 0085 - Observation result status codes interpretation',
	ReferencesRange VARCHAR(512) COMMENT '观察结果参考范围',
	AbnormalFlags VARCHAR(6) COMMENT '异常标志，检验结果的正常异常、阴阳性、耐药菌等',
	ObservationMethod VARCHAR(256) COMMENT '观察方法，如检查方法',
	ObservationDate DATETIME COMMENT '观察时间，如检查时间，检验时间。如果同个ObservationRequest有多个结果的观察时间不一致，在此处标识出每个观察的时间',
	PreliminaryDate DATETIME COMMENT '初步结果时间，如检查的初步报告时间',
	AuditDate DATETIME COMMENT '结果审核时间，如报告审核时间',
	ResultPrincipalID VARCHAR(64) COMMENT '结果主要负责人ID，如报告审核医生ID',
	ResultPrincipalName VARCHAR(64) COMMENT '结果主要负责人姓名，如报告审核医生名称',
	ResultAssistantID VARCHAR(64) COMMENT '结果助理ID，如报告医生ID',
	ResultAssistantName VARCHAR(64) COMMENT '结果助理姓名，如报告医生名称',
	LowerLimit VARCHAR(128) COMMENT '参考范围下限',
	UpperLimit VARCHAR(128) COMMENT '参考范围上限',
	Memo VARCHAR(256) COMMENT '备注',
	ParentResultSeq BIGINT COMMENT '该字段已废弃',
	ParentObservationID VARCHAR(64) COMMENT '父观察项目ID，针对微生物检验，首先是细菌检测，然后再做细菌的药敏试验，产生药敏结果，因此有父子关系',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (ResultSeq),
	KEY (ObservationUID),
	INDEX IX_ObservationResult_ObservationUID (ObservationUID ASC),
	INDEX IX_ObservationResult_ObservationID (ObservationID ASC),
	INDEX IX_ObservationResult_ObservationText (ObservationText ASC)
) ENGINE=InnoDB COMMENT='观察结果表'
;


CREATE TABLE ObservationSchedule
(
	ObservationUID CHAR(36) NOT NULL COMMENT '观察唯一序号',
	ScheduleSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增序号',
	ScheduleID VARCHAR(64) COMMENT '预约号，可作为排队号',
	ScheduleResourceUID CHAR(36) COMMENT '预约资源UID，只有通过IMCIS集中预约的才有值',
	ScheduleResourceName VARCHAR(64) COMMENT '预约资源，如检查房间，检查设备',
	ScheduleStartDate DATETIME COMMENT '预约开始时间',
	ScheduleEndDate DATETIME COMMENT '预约结束时间',
	ScheduleNotice VARCHAR(2000) COMMENT '预约注意事项',
	ScheduleOperatorID VARCHAR(64) COMMENT '预约操作者ID',
	ScheduleOperatorName VARCHAR(64) COMMENT '预约操作者姓名',
	ReceiptPrintCount SMALLINT DEFAULT 0 COMMENT '回执单打印次数',
	ReceiptPrintTime DATETIME COMMENT '回执单打印时间',
	ScheduleStatus TINYINT NOT NULL DEFAULT 0 COMMENT '预约状态，0正常，1人工取消预约，2未缴费自动取消预约，3提前检查',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	QueueResultSeq BIGINT COMMENT '预约排队唯一序号',
	ScheduleQuantity SMALLINT COMMENT '检查占用的预约数量',
	PRIMARY KEY (ObservationUID),
	UNIQUE UQ_ObservationSchedule_ScheduleSeq(ScheduleSeq),
	KEY (ObservationUID),
	KEY (QueueResultSeq),
	INDEX IX_ObservationSchedule_ObservationUID (ObservationUID ASC),
	INDEX IX_ObservationSchedule_ScheduleResourceUID (ScheduleResourceUID ASC),
	INDEX IX_ObservationSchedule_ScheduleStartDate (ScheduleStartDate ASC)
) ENGINE=InnoDB COMMENT='观察预约表'
;


CREATE TABLE Operation
(
	OperationUID CHAR(36) NOT NULL COMMENT '手术UID',
	PatientID VARCHAR(64) COMMENT '病人号',
	PIDAssigningAuthority VARCHAR(64) COMMENT '病人号分配机构',
	PatientMasterID VARCHAR(64) COMMENT '关联病人主索引',
	VisitUID CHAR(36) COMMENT '就诊UID',
	OrderUID CHAR(36) COMMENT '医嘱UID，当该手术请求是从医嘱过来的，则有值',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	PlacerOrderNO VARCHAR(64) COMMENT '申请号，若是通过医嘱而来的观察，则与CommonOrder中的PlacerOrderNO号相同',
	PlacerAssigningAuthority VARCHAR(64) COMMENT 'PlacerOrderNO号码的分配机构名',
	FillerOrderNO VARCHAR(64) COMMENT '手术号',
	FillerAssigningAuthority VARCHAR(64) COMMENT 'FillerOrderNO号码的分配机构名',
	OperationID VARCHAR(64) COMMENT '手术代码',
	OperationIDCodeScheme VARCHAR(64) COMMENT '手术代码编码体系，国际疾病分类 临床修订版ICD-9-CM-3',
	OperationName VARCHAR(200) COMMENT '手术名称',
	ProviderID VARCHAR(64) COMMENT '申请者ID',
	ProviderName VARCHAR(64) COMMENT '申请者姓名',
	RequestDeptID VARCHAR(64) COMMENT '申请科室ID',
	RequestDeptName VARCHAR(64) COMMENT '申请科室名称',
	RequestDate DATETIME COMMENT '申请日期',
	RequestMemo VARCHAR(400) COMMENT '手术申请备注，如手术准备条件等',
	PatientCondition VARCHAR(400) COMMENT '病情说明',
	OperHistoryIndicator TINYINT COMMENT '手术史标识。0=无，1=有，9=未说明',
	DiagBeforeOper VARCHAR(400) COMMENT '术前诊断',
	ScheduledDate DATETIME COMMENT '预约安排日期',
	EmergencyIndicator BOOL COMMENT '急诊标志，0:非急诊、1:急诊。',
	IsolationIndicator TINYINT COMMENT '隔离标志，指手术是否需要隔离，1:正常 2:隔离 3:放射',
	OperClass VARCHAR(64) COMMENT '手术类型，1-一般手术 2-急抢救手术 3-术中急抢救',
	OperScale VARCHAR(16) COMMENT '手术规模等级。指一次手术的综合规模等级。取值：特、大、中、小',
	OperDeptID VARCHAR(64) COMMENT '执行手术科室ID',
	OperDeptName VARCHAR(64) COMMENT '执行手术科室名称',
	OperRoomDepID VARCHAR(64) COMMENT '手术室科室代码',
	OperRoomDeptName VARCHAR(64) COMMENT '手术室科室名称',
	OperRoomNO VARCHAR(16) COMMENT '手术房间号',
	Sequence SMALLINT COMMENT '台次',
	BodypartID VARCHAR(64) COMMENT '手术部位ID',
	BodypartCodeScheme VARCHAR(64) COMMENT '表示各种手术、操作部位的编码体系名称，如SNOMED-CT',
	BodypartName VARCHAR(64) COMMENT '手术部位名称',
	OperProcessDesc VARCHAR(400) COMMENT '手术过程描述',
	OperIndications VARCHAR(200) COMMENT '手术指征。当某种疾病符合诊疗常规所规定的标准，采用非手术治疗方式无法治愈疾病，采用手术方式将有助于疾病的治疗时，所应采用的手术方式',
	OperContraindication VARCHAR(200) COMMENT '手术禁忌症',
	OperMainPoints VARCHAR(200) COMMENT '手术要点',
	PreparationBeforeOper VARCHAR(400) COMMENT '手术前特殊准备',
	OperAttention VARCHAR(400) COMMENT '手术注意事项',
	OperPositionID VARCHAR(64) COMMENT '手术体位代码',
	OperPositionName VARCHAR(64) COMMENT '手术体位名称',
	AnesMethodID VARCHAR(64) COMMENT '麻醉方法ID',
	AnesMethodName VARCHAR(64) COMMENT '麻醉方法',
	WoundGrade VARCHAR(16) COMMENT '切口等级',
	WoundDesc VARCHAR(400) COMMENT '手术中皮肤切口情况的具体描述',
	WoundHeal VARCHAR(64) COMMENT '切口愈合情况',
	InterventionalObject VARCHAR(200) COMMENT '介入物名称',
	SkinDisinfection VARCHAR(400) COMMENT '手术中皮肤消毒情况的具体描述',
	DrainageMaterial VARCHAR(400) COMMENT '手术中引流材料名称及数目的具体描述',
	DrainageTubePlace VARCHAR(400) COMMENT '引流管放置部位的详细描述',
	OperPrincipalID VARCHAR(64) COMMENT '手术责任医生ID，该信息在表OperationParticipant也有，这里是为了冗余。',
	OperPrincipalName VARCHAR(64) COMMENT '手术责任医生姓名，该信息在表OperationParticipant也有，这里是为了冗余。',
	AnesPrincipalID VARCHAR(64) COMMENT '麻醉责任医生ID，该信息在表OperationParticipant也有，这里是为了冗余。',
	AnesPrincipalName VARCHAR(64) COMMENT '麻醉责任医生，该信息在表OperationParticipant也有，这里是为了冗余。',
	OperStartDate DATETIME COMMENT '手术开始日期',
	OperEndDate DATETIME COMMENT '手术结束日期',
	EnterRoomDate DATETIME COMMENT '进入手术室日期',
	LeaveRoomDate DATETIME COMMENT '离开手术室日期',
	EnterPacuDate VARCHAR(50) COMMENT '进入PACU(麻醉后监测治疗室)日期',
	LeavePacuDate DATETIME COMMENT '离开PACU(麻醉后监测治疗室)日期',
	AnesStartDate DATETIME COMMENT '麻醉开始日期',
	AnesSatisfaction SMALLINT COMMENT '麻醉满意程度，1-满意 2-不全满意 3-改麻醉',
	SmoothIndicator SMALLINT COMMENT '手术过程顺利标志，1-顺利 0-不顺利',
	InfusionAmount INTEGER COMMENT '手术过程中的总输液量，单位ml',
	UrineAmount INTEGER COMMENT '手术过程中尿量，单位：ml',
	BloodLossed INTEGER COMMENT '术中失血量，单位ml',
	BloodTransfered INTEGER COMMENT '术中输血量，单位ml',
	OtherInAmount DECIMAL(8,2) COMMENT '术中其它入量，单位ml',
	OtherOutAmount DECIMAL(8,2) COMMENT '术中其它出量，单位ml',
	DiagAfterOper VARCHAR(400) COMMENT '术后诊断',
	StatusCode VARCHAR(16) COMMENT '手术状态代码。0-新申请，1-已安排，2-术中，3-术后，4-PACU，5-已提交',
	Charges DECIMAL(8,2) COMMENT '手术费用，单位为元',
	Payments DECIMAL(8,2) COMMENT '病人支付费用，单位为元',
	DeleteFlag BOOL NOT NULL COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (OperationUID),
	KEY (OrderUID),
	KEY (OrganizationID),
	KEY (VisitUID),
	INDEX IX_Operation_PatientMasterID (PatientMasterID ASC),
	INDEX IX_Operation_VisitUID (VisitUID ASC),
	INDEX IX_Operation_PatientID (PatientID ASC, PIDAssigningAuthority ASC),
	INDEX IX_Operation_OperationUID (OperationUID ASC)
) ENGINE=InnoDB COMMENT='手术记录表。如果病人一次手术有多个部位需要进行多个手术，其内容在手术名称表中描述。'
;


CREATE TABLE OperationName
(
	OperationNameSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '字增主键',
	OperationUID CHAR(36) COMMENT '手术UID',
	ItemNO SMALLINT COMMENT '手术名称序号。用于区分一次手术包含的多个部位的手术，从1开始顺序排列',
	OperationID VARCHAR(64) COMMENT '手术代码',
	OperationIDCodeScheme VARCHAR(64) COMMENT '手术代码编码体系，国际疾病分类 临床修订版ICD-9-CM-3',
	OperationName VARCHAR(64) COMMENT '手术名称',
	OperScale VARCHAR(16) COMMENT '手术规模等级。指一次手术的综合规模等级。取值：特、大、中、小',
	WoundGrade VARCHAR(16) COMMENT '切口等级',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (OperationNameSeq),
	INDEX IX_OperationName_OperationUID (OperationUID ASC)
) ENGINE=InnoDB COMMENT='如果病人一次手术有多个部位需要进行多个手术，其内容在手术名称表中描述。'
;


CREATE TABLE OperationParticipant
(
	ParticipantSeq INTEGER NOT NULL AUTO_INCREMENT,
	OperationUID CHAR(36) COMMENT '手术UID',
	ParticipantID VARCHAR(64) COMMENT '参与者ID',
	ParticipantName VARCHAR(64) COMMENT '参与者姓名',
	ParticipantType TINYINT COMMENT '参与者类型。0-OperPrincipal手术医生、1-FirstAssistant第一手术助手、2-SecondAssistant第二手术助手、3-ThirdAssistant第三手术助手、4-FourthAssistant第四手术助手、5-AnesPrincipal麻醉责任医生、6-AnesAssistant麻醉助手、7-BloodTranDoctor输血医生、8-FirstOperNurse第一台上护士、9-FirstSupplyNurse第一供应护士、10-SecondSupplyNurse第二供应护士',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (ParticipantSeq),
	INDEX IX_OperationParticipant_OperationUID (OperationUID ASC)
) ENGINE=InnoDB COMMENT='手术参与者'
;


CREATE TABLE Treatment
(
	TreatmentUID CHAR(36) NOT NULL COMMENT '治疗处置序列号',
	PatientID VARCHAR(64) COMMENT '病人号',
	PIDAssigningAuthority VARCHAR(64) COMMENT '病人号分配机构',
	PatientMasterID VARCHAR(64) COMMENT '关联病人主索引',
	VisitUID CHAR(36) COMMENT '关联就诊序列号',
	OrderUID CHAR(36) COMMENT '关联医嘱序列号，当从医嘱过来的，则有值',
	TreatmentID VARCHAR(64) COMMENT '治疗处置ID',
	TreatmentCodeScheme VARCHAR(64) COMMENT '治疗处置编码体系，见字典',
	TreatmentName VARCHAR(64) COMMENT '治疗处置名',
	TreatmentText VARCHAR(200) COMMENT '治疗处置描述',
	ProviderID VARCHAR(64) COMMENT '执行者ID',
	ProviderName VARCHAR(64) COMMENT '执行者姓名',
	AdministerDate DATETIME COMMENT '执行时间',
	Method VARCHAR(200) COMMENT '治疗处置所用操作方法',
	Amount SMALLINT COMMENT '操作方法次数或用量',
	InterventionContent VARCHAR(200) COMMENT '介入内容，如介入物',
	BodyPartID VARCHAR(64) COMMENT '部位代码',
	BodyPartName VARCHAR(64) COMMENT '部位名称',
	BodyPartCodeSystem VARCHAR(64) COMMENT '部位编码体系',
	OrganizationID VARCHAR(64) COMMENT '机构ID',
	DeptID VARCHAR(64) COMMENT '科室ID',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (TreatmentUID),
	KEY (OrderUID),
	KEY (PatientID, PIDAssigningAuthority),
	KEY (VisitUID),
	KEY (OrderUID),
	INDEX IX_Treatment_VisitUID (VisitUID ASC)
) ENGINE=InnoDB COMMENT='治疗处置记录，包括治疗记录、手术记录、麻醉记录、输血记录、待产记录、剖宫产记录、自然分娩记录等'
;


CREATE TABLE TreatmentResult
(
	ResultSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '观察结果序列号',
	TreatmentUID CHAR(36) COMMENT '关联治疗处置序列号',
	SetID SMALLINT COMMENT '同一个治疗处置的结果顺序号',
	ObservationID VARCHAR(16) COMMENT '观察项目ID',
	ObservationCodeScheme VARCHAR(64) COMMENT '项目编码体系，见字典',
	ObservationText VARCHAR(64) COMMENT '观察项目文本',
	SubID VARCHAR(6) COMMENT '子序号，用于分类同个观察请求服务中的不同项目观察结果组',
	ValueTitle VARCHAR(64) COMMENT '结果值标题',
	ValueType VARCHAR(8) COMMENT '观察结果值类型，见字典',
	ValueText VARCHAR(8000) COMMENT '观察结果值，根据ValueType的值类型，存储相应的内容',
	ValueCode VARCHAR(128) COMMENT '结果值代码',
	ValueCodeSystem VARCHAR(64) COMMENT '结果值代码编码体系，见字典',
	ValueUnits VARCHAR(16) COMMENT '观察结果值单位',
	ResultStatus VARCHAR(1) COMMENT '结果状态，0：未执行、1：执行中、2：已执行',
	ReferencesRange VARCHAR(64) COMMENT '观察结果参考范围',
	AbnormalFlags VARCHAR(6) COMMENT '异常标志',
	ObservationMethod VARCHAR(64) COMMENT '观察方法',
	ObservationDate DATETIME COMMENT '观察时间，如检查时间，检验时间。如果同个ObservationRequest有多个结果的观察时间不一致，在此处标识出每个观察的时间',
	PreliminaryDate DATETIME COMMENT '初步结果时间，如检查的初步报告时间',
	AuditDate DATETIME COMMENT '结果审核时间，如报告审核时间',
	ResultPrincipalID VARCHAR(64) COMMENT '结果主要负责人ID，如报告审核医生',
	ResultPrincipalName VARCHAR(64) COMMENT '结果主要负责人姓名，如报告审核医生',
	ResultAssistantID VARCHAR(64) COMMENT '结果助理ID，如报告医生',
	ResultAssistantName VARCHAR(64) COMMENT '结果助理姓名，如报告医生',
	Memo VARCHAR(100) COMMENT '备注',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (ResultSeq),
	INDEX IX_TreatmentResult_TreatmentUID (TreatmentUID ASC)
) ENGINE=InnoDB COMMENT='治疗处置结果'
;


CREATE TABLE Visit
(
	VisitUID CHAR(36) NOT NULL COMMENT '就诊唯一序号',
	PatientID VARCHAR(64) COMMENT '病人号',
	PIDAssigningAuthority VARCHAR(64) COMMENT '病人号分配机构',
	PatientMasterID VARCHAR(64) COMMENT '关联病人表的病人主索引号',
	VisitID VARCHAR(64) COMMENT '就诊系统分配的唯一表示一次就诊的号码',
	AlternateVisitID VARCHAR(64) COMMENT '额外的就诊号，住院时存放住院号(OutPatientNO)，门诊时存放门诊号(InPatientNO)',
	AssigningAuthority VARCHAR(64) COMMENT '分配就诊号的机构或系统',
	PatientClass VARCHAR(16) COMMENT '病人分类，如门诊、急诊、住院、体检，见字典',
	PatientType VARCHAR(64) COMMENT '病人类型，每个系统定义的细分类型',
	MedRecNO VARCHAR(64) COMMENT '就诊时分配的病历号',
	OutPatientNO VARCHAR(64) COMMENT '门诊号',
	InPatientNO VARCHAR(64) COMMENT '住院号',
	CardType VARCHAR(64) COMMENT '就诊卡类型，见字典。',
	CardNO VARCHAR(64) COMMENT '就诊卡号',
	Age SMALLINT COMMENT '就诊时的年龄',
	AgeUnit VARCHAR(6) COMMENT '年龄单位。岁、月、周、天、时',
	MaritalStatus VARCHAR(6) COMMENT '就诊时婚姻状况：未婚、已婚、丧偶、离婚、未说明',
	PregnancyFlag BOOL COMMENT '怀孕标志，0未怀孕、1怀孕、空未知',
	Occupation VARCHAR(64) COMMENT '职业',
	OrganizationID VARCHAR(64) COMMENT '该就诊所发生的组织机构',
	AdmitDate DATETIME COMMENT '接诊时间',
	ReAmissionFlag BOOL COMMENT '复诊标志，0：初诊、1：复诊',
	AdmissionType VARCHAR(64) COMMENT '就诊形式。如事故、急诊、分娩、新生、常规等。',
	AdmitPatCondition VARCHAR(64) COMMENT '入院病情。CV5501.12入院病情代码，1.危重、2.急诊、3.一般',
	AdmitDeptID VARCHAR(64) COMMENT '住院入院科室ID，门诊就诊科室ID',
	AdmitDeptName VARCHAR(64) COMMENT '住院入院科室名称，门诊就诊科室名称',
	DeptID VARCHAR(64) COMMENT '住院当前科室ID，门诊为空',
	DeptName VARCHAR(64) COMMENT '住院当前科室名称，门诊为空',
	PointOfCare VARCHAR(64) COMMENT '住院时为病区，非住院时时同就诊科室',
	PointOfCareID VARCHAR(64) COMMENT '住院时为病区ID，非住院时时同就诊科室ID',
	Room VARCHAR(64) COMMENT '住院时为病房，门诊时为诊间',
	Bed VARCHAR(64) COMMENT '病床',
	AdmittingDoctorID VARCHAR(64) COMMENT '接诊医生ID',
	AdmittingDoctorName VARCHAR(64) COMMENT '接诊医生名称',
	AttendingDoctorID VARCHAR(64) COMMENT '主治医师ID',
	AttendingDoctorName VARCHAR(64) COMMENT '主治医师姓名',
	DirectorDoctorID VARCHAR(64) COMMENT '主任医师ID',
	DirectorDoctorName VARCHAR(64) COMMENT '主任医生姓名',
	CurPatCondition VARCHAR(64) COMMENT '当前病情状态。CV5501.12入院病情代码，1.危重、2.急诊、3.一般',
	NursingGrade VARCHAR(64) COMMENT '护理等级。1.一级 2.二级 3.三级 4:特级',
	DietType VARCHAR(64) COMMENT '饮食种类。如禁食、流质、半流质、软食、普食、治疗饮食',
	PrimaryDiagnosis VARCHAR(1000) COMMENT '主要诊断文本内容',
	DischargeDate DATETIME COMMENT '离院、出院日期时间',
	DischargeDisposition VARCHAR(64) COMMENT '出院方式，如治愈、转院、死亡等',
	TotalCharges DECIMAL(10,2) COMMENT '总费用，单位为元',
	TotalPayments DECIMAL(10,2) COMMENT '病人总支付金额，单位为元',
	PaymentMode VARCHAR(64) COMMENT '支付方式，患者此次门诊就诊所发生费用的支付方式。如现金、银行卡等。',
	MedicalPaymentMode VARCHAR(64) COMMENT '医疗付款方式。如社会基本医疗保险、自费医疗等等。',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (VisitUID),
	INDEX IX_Visit_VisitUID (VisitUID ASC),
	INDEX IX_Visit_PatientMasterID (PatientMasterID ASC),
	INDEX IX_Visit_MedRecNO (MedRecNO ASC),
	INDEX IX_Visit_PointOfCare (PointOfCare ASC),
	INDEX IX_Visit_Bed (Bed ASC),
	INDEX IX_Visit_OrganizationID (OrganizationID ASC),
	INDEX IX_Visit_PatientID (PatientID ASC, PIDAssigningAuthority ASC),
	INDEX IX_Visit_DeptName (DeptName ASC),
	INDEX IX_Visit_InPatientNO (InPatientNO ASC),
	INDEX IX_Visit_OutPatientNO (OutPatientNO ASC)
) ENGINE=InnoDB COMMENT='病人就诊记录，如门诊就诊、住院、体检等'
;


CREATE TABLE VisitObservation
(
	ObservationSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '观察唯一序列号',
	VisitUID CHAR(36) COMMENT '关联就诊UID',
	ServiceSectID VARCHAR(16) COMMENT '观察服务类型ID，如血型',
	ObservationID VARCHAR(64) COMMENT '观察项目ID，ABO血型、RH血型',
	ObservationCodeScheme VARCHAR(64) COMMENT '项目编码体系，见字典',
	ObservationText VARCHAR(64) COMMENT '观察项目文本',
	Method VARCHAR(64) COMMENT '观察项目的观察方法名称',
	ValueType VARCHAR(8) COMMENT '值类型，见字典',
	ValueCode VARCHAR(128) COMMENT '观察结果的代码值',
	ValueCodeSystem VARCHAR(64) COMMENT '观察结果代码的编码体系，见字典，如ICD-10',
	ValueText VARCHAR(8000) COMMENT '观察结果的文字记录',
	PerformObserverID VARCHAR(64) COMMENT '观察执行者ID',
	PerformObserverName VARCHAR(64) COMMENT '观察者姓名',
	PerformObservationDate DATETIME COMMENT '观察日期时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除。',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (ObservationSeq),
	INDEX IX_VisitObservation_VisitUID (VisitUID ASC)
) ENGINE=InnoDB COMMENT='就诊观察信息，包括ABO血型、RH血型、抢救次数、护理天数、输血次数等。症状、体征、疾病史（含外伤）、手术史、输血史、家族疾病史、家族遗传病史等相关信息。这些信息与病历有重复，但是当没有实现电子病历时，直接存放在该表更简单。'
;


CREATE TABLE PatientAssociatedParties
(
	AssociatedPartySeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '联系人唯一序列号',
	PatientID VARCHAR(64) COMMENT '病人号',
	PIDAssigningAuthority VARCHAR(64) COMMENT '病人号分配机构',
	PatientMasterID VARCHAR(64) COMMENT '病人主索引号',
	VisitUID CHAR(36) COMMENT '关联的就诊UID',
	Name VARCHAR(64) COMMENT '联系人姓名或机构名称',
	Relationship VARCHAR(32) COMMENT '与当事人(病人)关系',
	Sex VARCHAR(6) COMMENT '联系人性别',
	BirthDate DATETIME COMMENT '联系人生日',
	ContactPhoneNO VARCHAR(64) COMMENT '联系人电话',
	ContactAddress VARCHAR(200) COMMENT '联系人地址',
	Postalcode VARCHAR(6) COMMENT '联系人邮编',
	IdentityType VARCHAR(64) COMMENT '特定环境下联系人身份标识（证明文件）号码的类别，见字典',
	IdentityID VARCHAR(64) COMMENT '特定环境下联系人身份标识（证明文件）号码',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (AssociatedPartySeq),
	KEY (VisitUID),
	INDEX IX_PatientAssociatedParties_PatientMasterID (PatientMasterID ASC),
	INDEX IX_PatientAssociatedParties_PatientID (PatientID ASC, PIDAssigningAuthority ASC)
) ENGINE=InnoDB COMMENT='病人联系人或者联系机构相关信息'
;


CREATE TABLE PatientIndex
(
	PatientID VARCHAR(64) NOT NULL COMMENT '病人号',
	PIDAssigningAuthority VARCHAR(64) NOT NULL COMMENT 'PatientID分配机构，见基础字典表AssigningAuthorityMst',
	IsMPI BOOL COMMENT '是否为病人主索引。1:是，0:否。',
	PatientMasterID VARCHAR(64) NOT NULL COMMENT '病人主索引ID，用于表示同个病人，如果有病人主索引，则直接用病人主索引。',
	Password VARCHAR(32) COMMENT '病人密码。用于需要病人输入密码的地方，如病人浏览个人信息等',
	CreateDate DATETIME COMMENT '创建时间',
	CreateUserID VARCHAR(64) COMMENT '创建该主索引的用户ID，第一次创建时的用户ID',
	CreateUserName VARCHAR(64) COMMENT '创建该主索引的用户姓名',
	CreateOrgnizationID VARCHAR(64) COMMENT '创建该主索引的组织机构',
	Name VARCHAR(64) COMMENT '病人姓名',
	NameSpell VARCHAR(64) COMMENT '病人姓名拼音',
	MotherName VARCHAR(64) COMMENT '母亲姓名',
	Sex VARCHAR(6) COMMENT '性别：男、女、未知、未说明',
	BirthDate DATETIME COMMENT '出生日期',
	BirthPlace VARCHAR(64) COMMENT '出生地',
	Nation VARCHAR(64) COMMENT '民族',
	Citizenship VARCHAR(64) COMMENT '国籍',
	MaritalStatus VARCHAR(6) COMMENT '婚姻状况：未婚、已婚、丧偶、离婚、未说明',
	IdentityType VARCHAR(64) COMMENT '特定环境下本人身份标识（证明文件），见字典',
	IdentityID VARCHAR(64) COMMENT '特定环境下本人身份标识（证明文件）号码',
	IDCardNO VARCHAR(64) COMMENT '身份证号',
	HealthCardNO VARCHAR(64) COMMENT '健康卡号',
	InsuranceType VARCHAR(64) COMMENT '医保类别，见字典',
	InsuranceID VARCHAR(64) COMMENT '医疗保险号',
	ContactPhoneNO VARCHAR(64) COMMENT '联系电话',
	HomePhoneNO VARCHAR(64) COMMENT '家庭电话',
	BusinessPhoneNO VARCHAR(64) COMMENT '公司电话',
	Email VARCHAR(64) COMMENT '电子邮箱地址',
	AddressProvince VARCHAR(64) COMMENT '地址-省份',
	AddressCity VARCHAR(64) COMMENT '地址-城市',
	AddressDistrict VARCHAR(64) COMMENT '地址-区县',
	AddressStreet VARCHAR(64) COMMENT '地址-街道、乡镇',
	AddressRoad VARCHAR(64) COMMENT '地址-街、路、村',
	AddressDetail VARCHAR(200) COMMENT '地址-门牌号。若地址无法分类，则该字段存放整个详细地址',
	Postalcode VARCHAR(6) COMMENT '邮政编码',
	Occupation VARCHAR(64) COMMENT '职业',
	WorkUnit VARCHAR(64) COMMENT '工作单位、公司',
	Language VARCHAR(64) COMMENT '语言',
	LastUpdateDate DATETIME COMMENT '最后更新时间',
	InHospitalFlag BOOL COMMENT '在院状态，1：在院、0或空：不在院',
	Status VARCHAR(1) NOT NULL DEFAULT 0 COMMENT '状态，0：正常、1：已合并、2：已删除',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (PatientID, PIDAssigningAuthority),
	INDEX IX_PatientIndex_PatientID (PatientID ASC, PIDAssigningAuthority ASC),
	INDEX IX_PatientIndex_Name (Name ASC),
	INDEX IX_PatientIndex_PatientMasterID (PatientMasterID ASC),
	KEY (CreateOrgnizationID),
	INDEX IX_PatientIndex_IDCardNO (IDCardNO ASC),
	INDEX IX_PatientIndex_HealthCardNO (HealthCardNO ASC),
	INDEX IX_PatientIndex_InsuranceID (InsuranceID ASC),
	INDEX IX_PatientIndex_Status (Status ASC)
) ENGINE=InnoDB COMMENT='病人主索引信息'
;


CREATE TABLE PatientObservation
(
	ObservationSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '观察唯一序列号',
	PatientID VARCHAR(64) COMMENT '病人号',
	PIDAssigningAuthority VARCHAR(64) COMMENT 'PatientID分配机构',
	PatientMasterID VARCHAR(64) COMMENT '病人主索引号',
	ServiceSectID VARCHAR(16) COMMENT '观察服务类型ID，如血型',
	ObservationID VARCHAR(64) COMMENT '观察项目ID',
	ObservationCodeScheme VARCHAR(64) COMMENT '项目编码体系，见字典',
	ObservationText VARCHAR(64) COMMENT '观察项目文本',
	Method VARCHAR(64) COMMENT '观察项目的观察方法名称',
	ValueType VARCHAR(8) COMMENT '值类型，见字典',
	ValueCode VARCHAR(128) COMMENT '观察结果的代码值',
	ValueCodeSystem VARCHAR(64) COMMENT '观察结果代码的编码体系，见字典，如ICD-10',
	ValueText VARCHAR(8000) COMMENT '观察结果的文字记录',
	PerformOrganizationID VARCHAR(64) COMMENT '观察执行的机构',
	PerformObserverID VARCHAR(64) COMMENT '观察执行者ID',
	PerformObserverName VARCHAR(64) COMMENT '观察者姓名',
	PerformObservationDate DATETIME COMMENT '观察日期时间',
	DeleteFlag BOOL NOT NULL DEFAULT 0 COMMENT '删除标志，0：未删除、1：已删除',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (ObservationSeq),
	KEY (PerformOrganizationID),
	INDEX IX_PatientObservation_PatientMasterID (PatientMasterID ASC),
	INDEX IX_PatientObservation_PatientID (PatientID ASC, PIDAssigningAuthority ASC)
) ENGINE=InnoDB COMMENT='病人相关观察信息，包括ABO血型、RH血型、疾病史（含外伤）、手术史、输血史、家族疾病史、家族遗传病史等。该处存放病人最新的观察信息。针对每次就诊的观察信息，具体存放在每次就诊的相关信息中。'
;


CREATE TABLE OnlineUserMst
(
	OnlineSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '序列号',
	UserUID CHAR(36) NOT NULL COMMENT '用户序列号',
	UserID VARCHAR(64) COMMENT '用户ID',
	OrganizationID VARCHAR(64) COMMENT '用户所属机构ID',
	LoginTime DATETIME COMMENT '用户登录进入系统时间',
	LogoutTime DATETIME COMMENT '用户登出系统时间',
	HostName VARCHAR(64) COMMENT '用户登录使用的电脑主机名或者IP',
	Application VARCHAR(64) COMMENT '用户登录所使用的应用软件名称',
	PRIMARY KEY (OnlineSeq),
	KEY (UserUID)
) ENGINE=InnoDB COMMENT='在线用户表，存储当前登录进入系统的用户信息'
;


CREATE TABLE RightMst
(
	RightID VARCHAR(64) NOT NULL COMMENT '权限唯一号',
	RightClass VARCHAR(16) NOT NULL COMMENT '权限分类。模块、数据、操作',
	RightName VARCHAR(64) NOT NULL COMMENT '权限名称',
	Title VARCHAR(64) COMMENT '用于界面上显示的名称',
	ControllerName VARCHAR(256) COMMENT '页面地址，当为页面权限时该字段有值，对应MVC中Url.Action的controllerName',
	ActionName VARCHAR(64) COMMENT '页面Action，当为页面权限时该字段有值，对应MVC中Url.Action的actionName。',
	Parameter VARCHAR(256) COMMENT '当为页面权限时该字段可填写页面Url参数',
	Active BOOL NOT NULL DEFAULT 1 COMMENT '该功能是否启用，1:启用，0:不启用',
	ParentRightID VARCHAR(64) COMMENT '父权限ID，为空表示根权限',
	SortNO SMALLINT COMMENT '同级下的排序号',
	Memo VARCHAR(256) COMMENT '备注',
	PRIMARY KEY (RightID)
) ENGINE=InnoDB COMMENT='权限管理表'
;


CREATE TABLE RoleMst
(
	RoleUID CHAR(36) NOT NULL COMMENT '角色唯一号',
	RoleName VARCHAR(64) NOT NULL COMMENT '角色名称',
	CreateUserUID CHAR(36) COMMENT '创建用户',
	CreateUserName VARCHAR(64) COMMENT '创建用户姓名',
	CreateDate DATETIME COMMENT '创建日期',
	Memo VARCHAR(256) COMMENT '备注',
	PRIMARY KEY (RoleUID)
) ENGINE=InnoDB COMMENT='角色管理表'
;


CREATE TABLE RoleRightMst
(
	RoleUID CHAR(36) NOT NULL COMMENT '权限所属角色',
	RightID VARCHAR(64) NOT NULL COMMENT '权限唯一号',
	CreateUserUID CHAR(36) COMMENT '添加用户',
	CreateUserName VARCHAR(64) COMMENT '添加用户',
	CreateDate DATETIME COMMENT '添加时间',
	PRIMARY KEY (RoleUID, RightID),
	KEY (RightID),
	KEY (RoleUID)
) ENGINE=InnoDB COMMENT='权限管理表'
;


CREATE TABLE UserAppendRightMst
(
	UserUID CHAR(36) NOT NULL COMMENT '用户唯一序号',
	RightID VARCHAR(64) NOT NULL COMMENT '权限唯一号',
	AllowFlag BOOL COMMENT '允许标志，0：不允许使用该权限、1：允许使用该权限',
	StartDate DATETIME COMMENT '权限开始时间，为空表示不限制开始时间',
	EndDate DATETIME COMMENT '权限结束时间，为空表示不限制结束时间',
	CreateUserUID CHAR(36) COMMENT '创建用户UID',
	CreateUserName VARCHAR(64) COMMENT '创建用户',
	CreateDate DATETIME COMMENT '创建日期',
	Memo VARCHAR(256) COMMENT '备注',
	PRIMARY KEY (UserUID, RightID),
	KEY (RightID),
	KEY (UserUID)
) ENGINE=InnoDB COMMENT='用户附加权限管理表'
;


CREATE TABLE UserConfigMst
(
	UserUID CHAR(36) NOT NULL COMMENT '用户唯一序号',
	ConfigItemName VARCHAR(64) NOT NULL COMMENT '用户配置节点名称',
	ConfigItemValue TEXT COMMENT '用户配置节点值',
	PRIMARY KEY (UserUID, ConfigItemName),
	KEY (UserUID)
) ENGINE=InnoDB COMMENT='用户配置管理表，存放用户的相关配置'
;


CREATE TABLE UserFeedback
(
	FeedbackSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	UserUID CHAR(36) NOT NULL COMMENT '用户UID',
	FeedbackType SMALLINT NOT NULL DEFAULT 0 COMMENT '反馈类型，0-其他、1-问题、2-建议、3-需求',
	FeedbackContent TEXT COMMENT '反馈内容',
	ClientHostName VARCHAR(64) COMMENT '客户端主机名',
	ClientApplication VARCHAR(64) COMMENT '客户端应用程序名',
	CreateDate DATETIME COMMENT '创建时间',
	PRIMARY KEY (FeedbackSeq),
	KEY (UserUID)
) ENGINE=InnoDB COMMENT='用户反馈信息'
;


CREATE TABLE UserMessage
(
	MessageSeq BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	SubscriptionSeq INTEGER COMMENT '订阅Seq，如果是通过订阅产生的消息，则有值。',
	SendUserUID CHAR(36) COMMENT '发送用户UID',
	SendUserName VARCHAR(64) COMMENT '发送用户姓名',
	SendUserPhone VARCHAR(64) COMMENT '发送者手机号码',
	ReceiveUserUID CHAR(36) COMMENT '接收用户UID',
	ReceiveUserName VARCHAR(64) COMMENT '接收用户姓名',
	ReceiveUserPhone VARCHAR(64) COMMENT '接收者手机号码',
	SendContents TEXT COMMENT '发送内容',
	ObjectType VARCHAR(64) COMMENT '对象类型，与相应的业务表名称一致',
	ObjectUID CHAR(36) COMMENT '对象UID，对应相应表的UID主键。',
	NeedFeedback BOOL DEFAULT 0 COMMENT '是否需要反馈，0不需要，1需要',
	InitiateHost VARCHAR(64) COMMENT '发送主机，IP和主机名等',
	ReceiveHost VARCHAR(64) COMMENT '接收主机，IP和主机名等',
	CreateDate DATETIME COMMENT '创建时间',
	ReceiveTime DATETIME COMMENT '接收时间',
	ProcessTime DATETIME COMMENT '处理时间',
	FeedbackTime DATETIME COMMENT '反馈时间',
	FeedbackContents VARCHAR(2000) COMMENT '处理结果',
	State TINYINT NOT NULL DEFAULT 0 COMMENT '状态，0-未接收，1-已接收，2-已处理，3-已反馈',
	PRIMARY KEY (MessageSeq),
	INDEX IX_UserMessage_SendUserUID (SendUserUID ASC),
	INDEX IX_UserMessage_ReceiveUserUID (ReceiveUserUID ASC)
) ENGINE=InnoDB COMMENT='用户消息表'
;


CREATE TABLE UserMst
(
	UserUID CHAR(36) NOT NULL COMMENT '用户唯一序号',
	UserID VARCHAR(64) NOT NULL COMMENT '用户ID，在一个组织内唯一',
	UserPwd VARCHAR(64) COMMENT '用户密码',
	UserType VARCHAR(64) COMMENT '用户类型，Expert：专家、Patient：病人。空表示普通用户。',
	UserName VARCHAR(64),
	Sex VARCHAR(6) COMMENT '性别，男、女',
	BirthDay DATETIME COMMENT '生日',
	IDCardNO VARCHAR(64) COMMENT '身份证号',
	OfficePhoneNO VARCHAR(64) COMMENT '办公电话',
	PersonalPhoneNO VARCHAR(64) COMMENT '个人电话号码',
	Email VARCHAR(64) COMMENT '电子邮箱',
	Address VARCHAR(256) COMMENT '联系地址',
	Status TINYINT COMMENT '用户状态。0：正常，1：停用，2：待审核',
	OrganizationID VARCHAR(64) COMMENT '用户所属机构ID',
	DeptID VARCHAR(64) COMMENT '用户所属部门ID',
	WorkNO VARCHAR(16) COMMENT '员工工号',
	ValidityStartDate DATETIME COMMENT '用户有效开始时间，为空表示不限制开始时间',
	ValidityEndDate DATETIME COMMENT '用户有效结束时间，为空表示不限制结束时间',
	CreateUserUID CHAR(36) COMMENT '创建用户',
	CreateUserName VARCHAR(64) COMMENT '创建用户姓名',
	CreateDate DATETIME COMMENT '创建日期',
	LastLogonTime DATETIME COMMENT '最后登录时间',
	Memo VARCHAR(256) COMMENT '备注信息',
	RowTimestamp BLOB COMMENT '时间戳',
	PRIMARY KEY (UserUID),
	UNIQUE UQ_UserMst_UserID(UserID, OrganizationID),
	KEY (OrganizationID)
) ENGINE=InnoDB COMMENT='用户管理表'
;


CREATE TABLE UserQuerySetMst
(
	QuerySeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	QueryType VARCHAR(64) NOT NULL COMMENT '查询类型。patient:病人查询、visit:就诊查询、exam:检查查询、statistics_examgzl:统计检查工作量、statistics_examyxl:统计检查阳性率。',
	UserUID CHAR(36) COMMENT '用户UID，如果为空，表示所有用户都具备的预设。',
	Name VARCHAR(64) COMMENT '预设条件名称',
	QueryCondition VARCHAR(8000) COMMENT '预设条件内容，JSON字符串',
	SortNO INTEGER COMMENT '排序号，针对同个用户下的预设条件',
	DefaultFlag BOOL COMMENT '是否默认，当设置为默认时，用户进入系统后自动执行该预设条件查询，并显示结果，针对同个用户下的预设条件',
	PublicFlag BOOL NOT NULL DEFAULT 0 COMMENT '是否公开，0不公开、1公开',
	PRIMARY KEY (QuerySeq),
	KEY (UserUID)
) ENGINE=InnoDB COMMENT='用户查询定义，预设条件'
;


CREATE TABLE UserRemindMst
(
	RemindSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '自增主键',
	SubscriptionSeq INTEGER COMMENT '订阅Seq，如果是通过订阅产生的提醒，则有值。',
	UserUID CHAR(36) NOT NULL COMMENT '用户UID。',
	ObjectType VARCHAR(64) COMMENT '对象类型，与相应的业务表名称一致，如PatientIndex表示病人表记录',
	ObjectUID VARCHAR(64) COMMENT '订阅对象UID，用于指定订阅某个对象，对应相应表的UID主键。',
	RemindContent VARCHAR(256) COMMENT '提醒内容',
	CreateDate DATETIME COMMENT '创建时间',
	UserViewed BOOL COMMENT '用户是否已经查看过该提醒，0:未查看、1:已查看。',
	UserViewDate DATETIME COMMENT '用户查看时间',
	PRIMARY KEY (RemindSeq),
	KEY (UserUID),
	INDEX IX_UserRemindMst_UserUID (UserUID ASC)
) ENGINE=InnoDB COMMENT='用户提醒表'
;


CREATE TABLE UserRoleMst
(
	UserUID CHAR(36) NOT NULL COMMENT '用户唯一序号',
	RoleUID CHAR(36) NOT NULL COMMENT '角色唯一号',
	CreateUserUID CHAR(36) COMMENT '创建用户',
	CreateUserName VARCHAR(64) COMMENT '创建用户',
	CreateDate DATETIME COMMENT '创建时间',
	PRIMARY KEY (UserUID, RoleUID),
	KEY (RoleUID),
	KEY (UserUID)
) ENGINE=InnoDB COMMENT='用户角色表，保存用户所属的角色'
;


CREATE TABLE UserSubscriptionMst
(
	SubscriptionSeq INTEGER NOT NULL AUTO_INCREMENT COMMENT '字增主键',
	UserUID CHAR(36) NOT NULL COMMENT '用户UID',
	SubscriptionType VARCHAR(16) NOT NULL COMMENT '订阅类型，MedicalCase:病历收藏、Attention:关注、Remind:提醒',
	ObjectType VARCHAR(64) NOT NULL COMMENT '订阅对象类型，与相应的业务表名称一致，如PatientIndex表示病人表记录',
	ObjectUID VARCHAR(64) NOT NULL COMMENT '订阅对象UID，用于指定订阅某个对象，对应相应表的UID主键。',
	PatientMasterID VARCHAR(64) COMMENT '病人主索引',
	RelatedObject BOOL COMMENT '是否包含相关对象，0:不包含、1:包含。',
	RemindStartDate DATETIME COMMENT '开始提醒时间。当SubscriptionType=Remind时用。为空表示不限定开始时间。',
	RemindEndDate DATETIME COMMENT '结束提醒时间。当SubscriptionType=Remind时用。为空表示不限定结束时间。',
	CreateDate DATETIME COMMENT '创建时间',
	Memo VARCHAR(256) COMMENT '备注',
	PRIMARY KEY (SubscriptionSeq),
	UNIQUE UQ_UserSubscriptionMst_ObjectUID(UserUID, SubscriptionType, ObjectType, ObjectUID),
	KEY (UserUID),
	INDEX IX_UserSubscriptionMst_UserUID (UserUID ASC)
) ENGINE=InnoDB COMMENT='用户订阅，如用于医生对病人、临床信息的关注等。'
;



SET FOREIGN_KEY_CHECKS=1;


--  Create Foreign Key Constraints 
ALTER TABLE MedicalCaseClassMst ADD CONSTRAINT FK_MedicalCaseClassMst_UserMst 
	FOREIGN KEY (CreateUserUID) REFERENCES UserMst (UserUID)
;

ALTER TABLE MedicalImageCase ADD CONSTRAINT FK_MedicalImageCase_UserMst 
	FOREIGN KEY (CreateUserUID) REFERENCES UserMst (UserUID)
;

ALTER TABLE MedicalImageCaseInClass ADD CONSTRAINT FK_MedicalImageCaseInClass_MedicalCaseClassMst 
	FOREIGN KEY (ClassUID) REFERENCES MedicalCaseClassMst (ClassUID)
;

ALTER TABLE MedicalImageCaseInClass ADD CONSTRAINT FK_MedicalImageCaseInClass_MedicalImageCase 
	FOREIGN KEY (CaseUID) REFERENCES MedicalImageCase (CaseUID)
;

ALTER TABLE CloudStorageServiceMst ADD CONSTRAINT FK_CloudStorageServiceMst_OrganizationMst 
	FOREIGN KEY (OrganizationID) REFERENCES OrganizationMst (OrganizationID)
	ON UPDATE CASCADE
;

ALTER TABLE GenericQueryFieldsMst ADD CONSTRAINT FK_GenericQueryFieldsMst_GenericQueryMst 
	FOREIGN KEY (QueryUID) REFERENCES GenericQueryMst (QueryUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE StatisticsConditionMst ADD CONSTRAINT FK_StatisticsConditionMst_StatisticsMst 
	FOREIGN KEY (StatisticsSeq) REFERENCES StatisticsMst (StatisticsSeq)
	ON DELETE CASCADE
;

ALTER TABLE XDSAssociation ADD CONSTRAINT FK_XDSAssociation_XDSDocumentEntry 
	FOREIGN KEY (DocumentUID) REFERENCES XDSDocumentEntry (DocumentUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE XDSAssociation ADD CONSTRAINT FK_XDSAssociation_XDSDocumentEntry_Replaced 
	FOREIGN KEY (DocumentUIDReplaced) REFERENCES XDSDocumentEntry (DocumentUID)
;

ALTER TABLE XDSAssociation ADD CONSTRAINT FK_XDSAssociation_XDSFolder 
	FOREIGN KEY (FolderUID) REFERENCES XDSFolder (FolderUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE XDSAssociation ADD CONSTRAINT FK_XDSAssociation_XDSSubmissionSet 
	FOREIGN KEY (SubmissionSetUID) REFERENCES XDSSubmissionSet (SubmissionSetUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE XDSDocumentAuthor ADD CONSTRAINT FK_XDSDocumentAuthor_XDSDocumentEntry 
	FOREIGN KEY (DocumentUID) REFERENCES XDSDocumentEntry (DocumentUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE XDSDocumentEventCodeList ADD CONSTRAINT FK_XDSDocumentEventCodeList_XDSDocumentEntry 
	FOREIGN KEY (DocumentUID) REFERENCES XDSDocumentEntry (DocumentUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE XDSFolderCodeList ADD CONSTRAINT FK_XDSFolderCodeList_XDSFolder 
	FOREIGN KEY (FolderUID) REFERENCES XDSFolder (FolderUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE XDSSubmissionSetAuthor ADD CONSTRAINT FK_XDSSubmissionSetAuthor_XDSSubmissionSet 
	FOREIGN KEY (SubmissionSetUID) REFERENCES XDSSubmissionSet (SubmissionSetUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE ExamConsultRequest ADD CONSTRAINT FK_ExamConsultRequest_ObservationRequest 
	FOREIGN KEY (ObservationUID) REFERENCES ObservationRequest (ObservationUID)
;

ALTER TABLE ExamConsultResult ADD CONSTRAINT FK_ExamConsultResult_ExamConsultRequest 
	FOREIGN KEY (ConsultRequestUID) REFERENCES ExamConsultRequest (ConsultRequestUID)
	ON DELETE CASCADE
;

ALTER TABLE ExamConsultWorkflow ADD CONSTRAINT FK_ExamConsultWorkflow_ExamConsultRequest 
	FOREIGN KEY (ConsultRequestUID) REFERENCES ExamConsultRequest (ConsultRequestUID)
	ON DELETE CASCADE
;

ALTER TABLE ExamDiagnosisRequest ADD CONSTRAINT FK_ExamDiagnosisRequest_ObservationRequest 
	FOREIGN KEY (ObservationUID) REFERENCES ObservationRequest (ObservationUID)
;

ALTER TABLE ExamDiagnosisWorkflow ADD CONSTRAINT FK_ExamDiagnosisWorkflow_ExamDiagnosisRequest 
	FOREIGN KEY (DiagnosisRequestUID) REFERENCES ExamDiagnosisRequest (DiagnosisRequestUID)
	ON DELETE CASCADE
;

ALTER TABLE ExamWorkflow ADD CONSTRAINT FK_ExamWorkflow_ObservationRequest 
	FOREIGN KEY (ObservationUID) REFERENCES ObservationRequest (ObservationUID)
	ON DELETE CASCADE
;

ALTER TABLE ServiceCenterUserMst ADD CONSTRAINT FK_ServiceCenterUserMst_ServiceCenterMst 
	FOREIGN KEY (ServiceCenterUID) REFERENCES ServiceCenterMst (ServiceCenterUID)
	ON DELETE CASCADE
;

ALTER TABLE ServiceCenterUserMst ADD CONSTRAINT FK_ServiceCenterUserMst_UserMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
	ON DELETE CASCADE
;

ALTER TABLE ServiceExpertMst ADD CONSTRAINT FK_ServiceExpertMst_ExpertMst 
	FOREIGN KEY (ExpertUserUID) REFERENCES ExpertMst (UserUID)
;

ALTER TABLE ServiceExpertMst ADD CONSTRAINT FK_ServiceExpertMst_ServiceCenterMst 
	FOREIGN KEY (ServiceCenterUID) REFERENCES ServiceCenterMst (ServiceCenterUID)
;

ALTER TABLE ServiceOrganiztionMst ADD CONSTRAINT FK_ServiceOrganiztionMst_OrganizationMst 
	FOREIGN KEY (OrganizationID) REFERENCES OrganizationMst (OrganizationID)
;

ALTER TABLE ServiceOrganiztionMst ADD CONSTRAINT FK_ServiceOrganiztionMst_ServiceCenterMst 
	FOREIGN KEY (ServiceCenterUID) REFERENCES ServiceCenterMst (ServiceCenterUID)
;

ALTER TABLE QueueResult ADD CONSTRAINT FK_QueueResult_QueueConfigMst 
	FOREIGN KEY (QueueUID) REFERENCES QueueConfigMst (QueueUID)
;

ALTER TABLE ScheduleArrangeMst ADD CONSTRAINT FK_ScheduleArrangeMst_ScheduleResourceMst 
	FOREIGN KEY (ResourceUID) REFERENCES ScheduleResourceMst (ResourceUID)
	ON DELETE CASCADE
;

ALTER TABLE ScheduleResult ADD CONSTRAINT FK_ScheduleResult_ScheduleResourceMst 
	FOREIGN KEY (ResourceUID) REFERENCES ScheduleResourceMst (ResourceUID)
	ON DELETE CASCADE
;

ALTER TABLE ScheduleRuleMst ADD CONSTRAINT FK_ScheduleRuleMst_ScheduleResourceMst 
	FOREIGN KEY (ResourceUID) REFERENCES ScheduleResourceMst (ResourceUID)
	ON DELETE CASCADE
;

ALTER TABLE ScheduleRuleMst ADD CONSTRAINT FK_ScheduleRuleMst_ScheduleTimeDetailMst 
	FOREIGN KEY (TimeDetailUID) REFERENCES ScheduleTimeDetailMst (TimeDetailUID)
;

ALTER TABLE ScheduleRuleMst ADD CONSTRAINT FK_ScheduleRuleMst_ScheduleTimeGroupMst 
	FOREIGN KEY (TimeGroupUID) REFERENCES ScheduleTimeGroupMst (TimeGroupUID)
;

ALTER TABLE ScheduleRuleMst ADD CONSTRAINT FK_ScheduleRuleMst_ScheduleArrangeMst 
	FOREIGN KEY (ArrangeUID) REFERENCES ScheduleArrangeMst (ArrangeUID)
;

ALTER TABLE ScheduleTimeDetailMst ADD CONSTRAINT FK_ScheduleTimeDetailMst_ScheduleTimeGroupMst 
	FOREIGN KEY (TimeGroupUID) REFERENCES ScheduleTimeGroupMst (TimeGroupUID)
	ON DELETE CASCADE
;

ALTER TABLE ScheduleTimeGroupMst ADD CONSTRAINT FK_ScheduleTimeGroupMst_ScheduleArrangeMst 
	FOREIGN KEY (ArrangeUID) REFERENCES ScheduleArrangeMst (ArrangeUID)
	ON DELETE CASCADE
;

ALTER TABLE JobDataMapMst ADD CONSTRAINT FK_JobDataMapMst_JobDefineMst 
	FOREIGN KEY (JobUID) REFERENCES JobDefineMst (JobUID)
	ON DELETE CASCADE
;

ALTER TABLE JobTriggerDataMapMst ADD CONSTRAINT FK_JobTriggerDataMapMst_JobTriggerMst 
	FOREIGN KEY (TriggerUID) REFERENCES JobTriggerMst (TriggerUID)
	ON DELETE CASCADE
;

ALTER TABLE JobTriggerMst ADD CONSTRAINT FK_JobTriggerMst_JobServer 
	FOREIGN KEY (ServiceUID) REFERENCES JobServer (ServiceUID)
;

ALTER TABLE JobTriggerMst ADD CONSTRAINT FK_JobTriggerMst_JobDefineMst 
	FOREIGN KEY (JobUID) REFERENCES JobDefineMst (JobUID)
;

ALTER TABLE BillingItems ADD CONSTRAINT FK_BillingItems_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE BusinessAuditMst ADD CONSTRAINT FK_BusinessAuditMst_UserMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
;

ALTER TABLE LogClinicDataOperation ADD CONSTRAINT FK_LogClinicDataOperation_UserMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
;

ALTER TABLE LogWebInterfaceObsReq ADD CONSTRAINT FK_LogWebInterfaceObsReq_LogWebInterface 
	FOREIGN KEY (LogSeq) REFERENCES LogWebInterface (LogSeq)
	ON DELETE CASCADE
;

ALTER TABLE DeptMst ADD CONSTRAINT FK_DeptMst_OrgnizationMst 
	FOREIGN KEY (OrganizationID) REFERENCES OrganizationMst (OrganizationID)
;

ALTER TABLE DicItemMapMst ADD CONSTRAINT FK_DicItemMapMst_DicTypeMst 
	FOREIGN KEY (TypeCode) REFERENCES DicTypeMst (TypeCode)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE DicItemMst ADD CONSTRAINT FK_DicItemMst_DicTypeMst 
	FOREIGN KEY (TypeCode) REFERENCES DicTypeMst (TypeCode)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE ExpertMst ADD CONSTRAINT FK_ExpertMst_UserMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
;

ALTER TABLE PixRuleFieldMst ADD CONSTRAINT FK_PixRuleFieldMst_PixRuleMst 
	FOREIGN KEY (RuleUID) REFERENCES PixRuleMst (RuleUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE ServiceConfigMst ADD CONSTRAINT FK_ServiceConfigMst_MediaMst 
	FOREIGN KEY (MediaUID) REFERENCES MediaMst (MediaUID)
;

ALTER TABLE StaffMst ADD CONSTRAINT FK_StaffMst_DeptMst 
	FOREIGN KEY (DeptID, OrganizationID) REFERENCES DeptMst (DeptID, OrganizationID)
;

ALTER TABLE StaffMst ADD CONSTRAINT FK_StaffMst_OrganizationMst 
	FOREIGN KEY (OrganizationID) REFERENCES OrganizationMst (OrganizationID)
;

ALTER TABLE DicomStudy ADD CONSTRAINT FK_DicomStudy_Document 
	FOREIGN KEY (FileUID) REFERENCES Document (FileUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE DocumentInService ADD CONSTRAINT FK_DocumentInService_MediaMst 
	FOREIGN KEY (MediaUID) REFERENCES MediaMst (MediaUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE DocumentInService ADD CONSTRAINT FK_DocumentInService_ServiceConfigMst 
	FOREIGN KEY (ServiceUID) REFERENCES ServiceConfigMst (ServiceUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE DocumentInService ADD CONSTRAINT FK_DocumentInService_Document 
	FOREIGN KEY (FileUID) REFERENCES Document (FileUID)
;

ALTER TABLE DocumentRecipient ADD CONSTRAINT FK_DocumentRecipient_Document 
	FOREIGN KEY (FileUID) REFERENCES Document (FileUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE ADTInfo ADD CONSTRAINT FK_ADTInfo_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE AdverseReaction ADD CONSTRAINT FK_AdverseReaction_CommonOrder 
	FOREIGN KEY (OrderUID) REFERENCES CommonOrder (OrderUID)
;

ALTER TABLE AdverseReaction ADD CONSTRAINT FK_AdverseReaction_PatientIndex 
	FOREIGN KEY (PatientID, PIDAssigningAuthority) REFERENCES PatientIndex (PatientID, PIDAssigningAuthority)
;

ALTER TABLE AdverseReaction ADD CONSTRAINT FK_AdverseReaction_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE CommonOrder ADD CONSTRAINT FK_CommonOrder_PatientIndex 
	FOREIGN KEY (PatientID, PIDAssigningAuthority) REFERENCES PatientIndex (PatientID, PIDAssigningAuthority)
;

ALTER TABLE CommonOrder ADD CONSTRAINT FK_CommonOrder_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE Diagnosis ADD CONSTRAINT FK_Diagnosis_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE MedicalRecord ADD CONSTRAINT FK_MedicalRecord_PatientIndex 
	FOREIGN KEY (PatientID, PIDAssigningAuthority) REFERENCES PatientIndex (PatientID, PIDAssigningAuthority)
;

ALTER TABLE MedicalRecord ADD CONSTRAINT FK_MedicalRecord_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE MedicalRecordDetail ADD CONSTRAINT FK_MedicalRecordDetail_MedicalRecord 
	FOREIGN KEY (RecordUID) REFERENCES MedicalRecord (RecordUID)
;

ALTER TABLE Medication ADD CONSTRAINT FK_Medication_CommonOrder 
	FOREIGN KEY (OrderUID) REFERENCES CommonOrder (OrderUID)
;

ALTER TABLE Nursing ADD CONSTRAINT FK_Nursing_CommonOrder 
	FOREIGN KEY (OrderUID) REFERENCES CommonOrder (OrderUID)
;

ALTER TABLE Nursing ADD CONSTRAINT FK_Nursing_PatientIndex 
	FOREIGN KEY (PatientID, PIDAssigningAuthority) REFERENCES PatientIndex (PatientID, PIDAssigningAuthority)
;

ALTER TABLE Nursing ADD CONSTRAINT FK_Nursing_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE NursingDetail ADD CONSTRAINT FK_NursingDetail_Nursing 
	FOREIGN KEY (NursingUID) REFERENCES Nursing (NursingUID)
;

ALTER TABLE ObservationRequest ADD CONSTRAINT FK_ObservationRequest_CommonOrder 
	FOREIGN KEY (OrderUID) REFERENCES CommonOrder (OrderUID)
;

ALTER TABLE ObservationRequest ADD CONSTRAINT FK_ObservationRequest_PatientIndex 
	FOREIGN KEY (PatientID, PIDAssigningAuthority) REFERENCES PatientIndex (PatientID, PIDAssigningAuthority)
;

ALTER TABLE ObservationRequest ADD CONSTRAINT FK_ObservationRequest_OrganizationMst 
	FOREIGN KEY (OrganizationID) REFERENCES OrganizationMst (OrganizationID)
	ON UPDATE CASCADE
;

ALTER TABLE ObservationRequest ADD CONSTRAINT FK_ObservationRequest_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE ObservationResult ADD CONSTRAINT FK_ObservationResult_ObservationRequest 
	FOREIGN KEY (ObservationUID) REFERENCES ObservationRequest (ObservationUID)
	ON DELETE CASCADE
;

ALTER TABLE ObservationSchedule ADD CONSTRAINT FK_ObservationSchedule_ObservationRequest 
	FOREIGN KEY (ObservationUID) REFERENCES ObservationRequest (ObservationUID)
	ON DELETE CASCADE
;

ALTER TABLE ObservationSchedule ADD CONSTRAINT FK_ObservationSchedule_QueueResult 
	FOREIGN KEY (QueueResultSeq) REFERENCES QueueResult (QueueResultSeq)
;

ALTER TABLE Operation ADD CONSTRAINT FK_Operation_CommonOrder 
	FOREIGN KEY (OrderUID) REFERENCES CommonOrder (OrderUID)
;

ALTER TABLE Operation ADD CONSTRAINT FK_Operation_PatientIndex 
	FOREIGN KEY (PatientID, PIDAssigningAuthority) REFERENCES PatientIndex (PatientID, PIDAssigningAuthority)
;

ALTER TABLE Operation ADD CONSTRAINT FK_Operation_OrganizationMst 
	FOREIGN KEY (OrganizationID) REFERENCES OrganizationMst (OrganizationID)
;

ALTER TABLE Operation ADD CONSTRAINT FK_Operation_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE OperationName ADD CONSTRAINT FK_OperationName_Operation 
	FOREIGN KEY (OperationUID) REFERENCES Operation (OperationUID)
;

ALTER TABLE OperationParticipant ADD CONSTRAINT FK_OperationParticipant_Operation 
	FOREIGN KEY (OperationUID) REFERENCES Operation (OperationUID)
;

ALTER TABLE Treatment ADD CONSTRAINT FK_Treatment_CommonOrder 
	FOREIGN KEY (OrderUID) REFERENCES CommonOrder (OrderUID)
;

ALTER TABLE Treatment ADD CONSTRAINT FK_Treatment_PatientIndex 
	FOREIGN KEY (PatientID, PIDAssigningAuthority) REFERENCES PatientIndex (PatientID, PIDAssigningAuthority)
;

ALTER TABLE Treatment ADD CONSTRAINT FK_Treatment_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE TreatmentResult ADD CONSTRAINT FK_TreatmentResult_Treatment 
	FOREIGN KEY (TreatmentUID) REFERENCES Treatment (TreatmentUID)
;

ALTER TABLE Visit ADD CONSTRAINT FK_Visit_OrganizationMst 
	FOREIGN KEY (OrganizationID) REFERENCES OrganizationMst (OrganizationID)
	ON UPDATE CASCADE
;

ALTER TABLE Visit ADD CONSTRAINT FK_Visit_PatientIndex 
	FOREIGN KEY (PatientID, PIDAssigningAuthority) REFERENCES PatientIndex (PatientID, PIDAssigningAuthority)
;

ALTER TABLE VisitObservation ADD CONSTRAINT FK_VisitObservation_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE PatientAssociatedParties ADD CONSTRAINT FK_PatientAssociatedParties_PatientIndex 
	FOREIGN KEY (PatientID, PIDAssigningAuthority) REFERENCES PatientIndex (PatientID, PIDAssigningAuthority)
;

ALTER TABLE PatientAssociatedParties ADD CONSTRAINT FK_PatientAssociatedParties_Visit 
	FOREIGN KEY (VisitUID) REFERENCES Visit (VisitUID)
;

ALTER TABLE PatientIndex ADD CONSTRAINT FK_PatientIndex_OrganizationMst 
	FOREIGN KEY (CreateOrgnizationID) REFERENCES OrganizationMst (OrganizationID)
	ON UPDATE CASCADE
;

ALTER TABLE PatientObservation ADD CONSTRAINT FK_PatientObservation_OrganizationMst 
	FOREIGN KEY (PerformOrganizationID) REFERENCES OrganizationMst (OrganizationID)
	ON UPDATE CASCADE
;

ALTER TABLE PatientObservation ADD CONSTRAINT FK_PatientObservation_PatientIndex 
	FOREIGN KEY (PatientID, PIDAssigningAuthority) REFERENCES PatientIndex (PatientID, PIDAssigningAuthority)
;

ALTER TABLE OnlineUserMst ADD CONSTRAINT FK_OnlineUserMst_UsersMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
;

ALTER TABLE RoleRightMst ADD CONSTRAINT FK_RoleRightMst_RightMst 
	FOREIGN KEY (RightID) REFERENCES RightMst (RightID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE RoleRightMst ADD CONSTRAINT FK_RoleRightMst_RoleMst 
	FOREIGN KEY (RoleUID) REFERENCES RoleMst (RoleUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE UserAppendRightMst ADD CONSTRAINT FK_UserAppendRightMst_RightMst 
	FOREIGN KEY (RightID) REFERENCES RightMst (RightID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE UserAppendRightMst ADD CONSTRAINT FK_UserAppendRightMst_UsersMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
;

ALTER TABLE UserConfigMst ADD CONSTRAINT FK_UserConfigMst_UserMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
;

ALTER TABLE UserFeedback ADD CONSTRAINT FK_UserFeedback_UserMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
;

ALTER TABLE UserMst ADD CONSTRAINT FK_UserMst_OrganizationMst 
	FOREIGN KEY (OrganizationID) REFERENCES OrganizationMst (OrganizationID)
	ON UPDATE CASCADE
;

ALTER TABLE UserQuerySetMst ADD CONSTRAINT FK_UserQuerySetMst_UserMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
;

ALTER TABLE UserRemindMst ADD CONSTRAINT FK_UserRemindMst_UserMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
;

ALTER TABLE UserRoleMst ADD CONSTRAINT FK_UserRoleMst_RoleMst 
	FOREIGN KEY (RoleUID) REFERENCES RoleMst (RoleUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE UserRoleMst ADD CONSTRAINT FK_UserRoleMst_UsersMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE UserSubscriptionMst ADD CONSTRAINT FK_UserSubscriptionMst_UserMst 
	FOREIGN KEY (UserUID) REFERENCES UserMst (UserUID)
;


--  Create Views 
SELECT     o.ObservationUID, 0 AS ExamIndex, o.PatientMasterID AS GPatientID, p.InsuranceID AS MedNo, p.IDCardNO AS IdNumber, p.HealthCardNO AS OneCardNo, 
                      o.FillerOrderNO AS ExamineID, o.AccessionNumber, v.MedRecNO, o.PatientID, v.InPatientNO, v.OutPatientNO, v.CardNO, v.PointOfCare AS AreaNo, v.Bed AS BedNo, 
                      o.PlacerOrderNO AS HisExamineId, v.VisitID AS OrderSeries, p.Name AS PatientName, p.Sex AS PatientSex, v.Age AS PatientAge, p.BirthDate AS PatientBirthday, 
                      p.AddressDetail AS Address, p.WorkUnit AS Company, p.ContactPhoneNO AS PhoneCode, o.ServiceSectID AS ExamineType, o.ServiceText AS ExamineItem, 
                      o.ServiceID AS ExamineItemID, o.ProcedureName AS ExamineBodyPart, o.ProcedureID AS ExamineBodyPartACR, v.PatientType, v.PatientClass AS StayInsu, 
                      o.RelevantClinicalInfo AS AllergicHistory, p.Occupation AS Professional, o.RegisterName AS Register, o.RegisterID, o.RegTime, o.RequestDeptName AS ReqOffice, 
                      o.ObservationDeptID AS ReqOfficeID, o.ProviderName AS ReqDoctor, o.ProviderID AS ReqDoctorID, o.Symptom AS PatientDesc, o.ClinicDiagnosis, 
                      o.RelevantClinicalInfo AS MedicalRecord, o.ObservationDate AS PerformTime, o.TechnicianName AS PerformTechnician, o.TechnicianID AS PerformTechnicianID, 
                      o.PreliminaryDate AS ReportTime, o.ResultAssistantName AS ReportPhysician, o.ResultAssistantID AS ReportPhysicianID, o.AuditDate AS AuditTime, 
                      o.ResultPrincipalName AS AuditDoctor, o.ResultPrincipalID AS AuditDoctorID, o.ResultDate AS ReviseTime, o.ResultPrincipalName AS ReviseDoctor, 
                      o.ResultPrincipalID AS ReviseDoctorID, '' AS DoctorPhone,
                          (SELECT   b.ValueText
                            FROM          ObservationResult AS b
                            WHERE      (o.ObservationUID = b.ObservationUID) AND (b.ObservationID = 'GDT') AND (DeleteFlag = 0) LIMIT 1) AS ImageSight,
                          (SELECT   b1.ValueText
                            FROM          ObservationResult AS b1
                            WHERE      (o.ObservationUID = b1.ObservationUID) AND (b1.ObservationID = 'IMP') AND (DeleteFlag = 0) LIMIT 1) AS ImageDiagnosis, o.AbnormalFlags AS IsMasculine, o.ResultStatus AS State, 
                      '' AS PregnancyFlag, o.PrivacyLevel AS Privacy, CASE WHEN o.ServiceSectID IN ('CR', 'DR', 'DX', 'CT', 'MR', 'RF', 'XA') THEN 'RIS' WHEN o.ServiceSectID IN ('PIS', 
                      'PS') THEN 'PIS' WHEN o.ServiceSectID IN ('US') THEN 'UIS' WHEN o.ServiceSectID IN ('ES') THEN 'EIS' WHEN o.ServiceSectID IN ('ECG') 
                      THEN 'ECG' ELSE o.ServiceSectID END AS SysID, NULL AS PublishDate, NULL AS DigitalSignature, NULL AS DeclassifiedPki,
                          (SELECT     OrganizationName
                            FROM          OrganizationMst
                            WHERE      (o.OrganizationID = OrganizationID)) AS HospitalName, '' AS ReportFileType, '' AS ReportFilePath, 0 AS ReportFlag, 0 AS UpdateFlag, '' AS PrintState, 
                      0 AS PrintCount, NULL AS PrintTime, '' AS PrintUser, '' AS PrintHost, '' AS PrintOffice, '' AS OrderFilePath, o.SpecimenID AS BarCodeNo, 0 AS PDFCreateState, 
                      o.ObservationLocation AS ExamineRoom, o.ObservationEquipment AS ExamineEquipment, o.ObservationEquipmentID AS ExamineEquipmentID, 
                      o.ObservationMethod AS ExamineTechnology, o.CriticalValue, 0 AS PushState, o.InfectionName,
                          (SELECT     b2.ValueText
                            FROM          ObservationResult AS b2
                            WHERE      (o.ObservationUID = b2.ObservationUID) AND (b2.ObservationID = 'ADT')) AS Annotation, 0 AS LockState, 0 AS FilmNeed
FROM         ObservationRequest AS o INNER JOIN
                      Visit AS v ON o.VisitUID = v.VisitUID INNER JOIN
                      PatientIndex AS p ON o.PatientID = p.PatientID AND o.PIDAssigningAuthority = p.PIDAssigningAuthority AND v.PatientID = p.PatientID AND 
                      v.PIDAssigningAuthority = p.PIDAssigningAuthority
WHERE     (o.DeleteFlag = 0) AND (o.ClinicInfoType = 'Exam')
;

CREATE VIEW V_DocumentInCurrentService
AS
SELECT     Document.FileUID, Document.BusinessID, Document.BusinessType, Document.BusinessTime, Document.ClassCode, 
                      Document.TypeCode, Document.FormatCode, Document.UniqueID, Document.MimeType, Document.FileSHA, 
                      Document.FileSize, Document.FileCreateTime, Document.FileCreateUserID, Document.FileCreateUserName, 
                      Document.OriginalFileName, Document.Title, Document.UploadTime, Document.ParentFileUID, 
                      Document.TransformMimeType, Document.FolderFlag, ServiceConfigMst.ServiceID, ServiceConfigMst.ServiceName, ServiceConfigMst.Endpoint, 
					  MediaMst.MediaName, MediaMst.MediaHost, MediaMst.PathType, MediaMst.Path, DocumentInService.FileRelativePath
FROM         Document INNER JOIN
                      DocumentInService ON Document.FileUID = DocumentInService.FileUID INNER JOIN
                      MediaMst ON DocumentInService.MediaUID = MediaMst.MediaUID INNER JOIN
                      ServiceConfigMst ON DocumentInService.ServiceUID = ServiceConfigMst.ServiceUID
WHERE     Document.DeleteFlag = 0 AND ServiceConfigMst.CurrentFlag = 1
;

CREATE view V_Exam as
SELECT     o.ObservationUID, o.PatientID, o.PIDAssigningAuthority, o.PatientMasterID, o.PatientClass, o.VisitUID, o.OrderUID, o.OrganizationID, org.OrganizationName, o.ClinicInfoType, 
                      o.PlacerOrderNO, o.PlacerAssigningAuthority, o.PlacerOrderDetailNO, o.FillerOrderNO, o.FillerAssigningAuthority, o.AccessionNumber, o.ServiceID, o.ServiceCodeScheme, o.ServiceText, 
                      o.ServiceIDInsur, o.ServiceSectID, o.ProcedureID, o.ProcedureName, o.ProviderID, o.ProviderName, o.ProviderPhone, o.RequestDeptID, o.RequestDeptName, o.RequestOrgID, o.RequestOrgName, 
                      o.RequestedDate, o.Reason, o.Attention, o.Symptom, o.ClinicDiagnosis, o.RelevantClinicalInfo, o.SpecimenID, o.SpecimenName, o.SpecimenType, 
                      o.SpecimenSource, o.CollectorID, o.CollectorName, o.CollectionDept, o.CollectionMethod, o.CollectionVolume, o.SpecimenReceivedDate, o.RegisterID, 
                      o.RegisterName, o.RegTime, o.ObservationDeptID, o.ObservationDeptName, o.ObservationDate, o.ObservationEndDate, o.ObservationLocation, 
                      o.ObservationEquipmentID, o.ObservationEquipment, o.EquipmentModel, o.ObservationMethod, o.StudyInstanceUID, o.TechnicianID, o.TechnicianName, 
                      o.ResultAssistantID, o.ResultAssistantName, o.PreliminaryDate, o.ResultPrincipalID, o.ResultPrincipalName, o.AuditDate, o.ResultReviseID, o.ResultReviseName, o.ReviseDate, o.ResultDate, o.ResultStatus, 
                      o.ResultStatusCode, o.ResultPrintCount, o.ResultPrintTime,
                          (SELECT     ValueText
                            FROM          ObservationResult AS r
                            WHERE      (o.ObservationUID = ObservationUID) AND (ObservationID = 'GDT') AND (DeleteFlag = 0) LIMIT 1) AS ImageSight,
                          (SELECT     ValueText
                            FROM          ObservationResult AS r1
                            WHERE      (o.ObservationUID = ObservationUID) AND (ObservationID = 'IMP') AND (DeleteFlag = 0) LIMIT 1) AS ImageDiagnosis, o.AbnormalFlags, o.CriticalValue, 
                      o.InfectionName, o.PrivacyLevel, o.PrivacyLevelExt, o.Charges, o.Payments, o.PaymentsFlag, o.FilmNeed, o.FilmCount, o.HasImage, o.ImageLocation, o.ConsultStatus, o.ConsultRequestDate, 
                      o.ConsultEndDate, s.ScheduleID, s.ScheduleResourceUID, s.ScheduleResourceName, s.ScheduleStartDate, s.ScheduleEndDate, 
                      s.ScheduleNotice, s.ScheduleOperatorID, s.ScheduleOperatorName, v.VisitID, v.AlternateVisitID, v.AssigningAuthority, v.MedRecNO, v.CardType, v.CardNO, v.Age, 
                      v.AgeUnit, v.MaritalStatus, v.Occupation, v.AdmitDate, v.ReAmissionFlag, v.AdmissionType, v.AdmitPatCondition, v.DeptID, v.DeptName, v.PointOfCareID, v.PointOfCare, v.Room, 
                      v.Bed, v.AdmittingDoctorID, v.AdmittingDoctorName, v.AttendingDoctorID, v.AttendingDoctorName, v.DirectorDoctorID, v.DirectorDoctorName, v.CurPatCondition, 
                      v.NursingGrade, v.DietType, v.PrimaryDiagnosis, v.DischargeDate, v.DischargeDisposition, v.TotalCharges, v.TotalPayments, v.PaymentMode, 
                      v.MedicalPaymentMode, v.OutPatientNO, v.InPatientNO, v.PatientType, p.Name, p.NameSpell, p.MotherName, p.Sex, p.BirthDate, p.BirthPlace, p.Nation, p.Citizenship,
                       p.IdentityType, p.IdentityID, p.IDCardNO, p.HealthCardNO, p.ContactPhoneNO, p.HomePhoneNO, p.BusinessPhoneNO, p.Email, p.AddressProvince, p.AddressCity, 
                      p.AddressDistrict, p.AddressStreet, p.AddressRoad, p.AddressDetail, p.Postalcode, p.WorkUnit, p.Language, p.InsuranceType, p.InsuranceID, o.PushState, o.LastUpdateDate, o.RowTimestamp
FROM         ObservationRequest AS o LEFT OUTER JOIN
                      ObservationSchedule AS s ON o.ObservationUID = s.ObservationUID INNER JOIN
                      OrganizationMst AS org ON o.OrganizationID = org.OrganizationID INNER JOIN
                      Visit AS v ON o.VisitUID = v.VisitUID INNER JOIN
                      PatientIndex AS p ON o.PatientID = p.PatientID AND o.PIDAssigningAuthority = p.PIDAssigningAuthority
WHERE     (o.DeleteFlag = 0) AND (o.ClinicInfoType = 'Exam')
;

CREATE view V_ExamLab as
SELECT     o.ObservationUID, o.PatientID, o.PIDAssigningAuthority, o.PatientMasterID, o.PatientClass, o.VisitUID, o.OrderUID, o.OrganizationID, org.OrganizationName, o.ClinicInfoType, 
                      o.PlacerOrderNO, o.PlacerAssigningAuthority, o.PlacerOrderDetailNO, o.FillerOrderNO, o.FillerAssigningAuthority, o.AccessionNumber, o.ServiceID, o.ServiceCodeScheme, o.ServiceText, 
                      o.ServiceIDInsur, o.ServiceSectID, o.ProcedureID, o.ProcedureName, o.ProviderID, o.ProviderName, o.ProviderPhone, o.RequestDeptID, o.RequestDeptName, o.RequestOrgID, o.RequestOrgName, 
                      o.RequestedDate, o.Reason, o.Attention, o.Symptom, o.ClinicDiagnosis, o.RelevantClinicalInfo, o.SpecimenID, o.SpecimenName, o.SpecimenType, 
                      o.SpecimenSource, o.CollectorID, o.CollectorName, o.CollectionDept, o.CollectionMethod, o.CollectionVolume, o.SpecimenReceivedDate, o.RegisterID, 
                      o.RegisterName, o.RegTime, o.ObservationDeptID, o.ObservationDeptName, o.ObservationDate, o.ObservationEndDate, o.ObservationLocation, 
                      o.ObservationEquipmentID, o.ObservationEquipment, o.EquipmentModel, o.ObservationMethod, o.StudyInstanceUID, o.TechnicianID, o.TechnicianName, 
                      o.ResultAssistantID, o.ResultAssistantName, o.PreliminaryDate, o.ResultPrincipalID, o.ResultPrincipalName, o.AuditDate, o.ResultReviseID, o.ResultReviseName, o.ReviseDate, o.ResultDate, o.ResultStatus, 
                      o.ResultStatusCode, o.ResultPrintCount, o.ResultPrintTime,
                          (SELECT     ValueText
                            FROM          ObservationResult AS r
                            WHERE      (o.ObservationUID = ObservationUID) AND (ObservationID = 'GDT') AND (DeleteFlag = 0) LIMIT 1) AS ImageSight,
                          (SELECT     ValueText
                            FROM          ObservationResult AS r1
                            WHERE      (o.ObservationUID = ObservationUID) AND (ObservationID = 'IMP') AND (DeleteFlag = 0) LIMIT 1) AS ImageDiagnosis, o.AbnormalFlags, o.CriticalValue, 
                      o.InfectionName, o.PrivacyLevel, o.PrivacyLevelExt, o.Charges, o.Payments, o.PaymentsFlag, o.FilmNeed, o.FilmCount, o.HasImage, o.ImageLocation, o.ConsultStatus, o.ConsultRequestDate, 
                      o.ConsultEndDate, s.ScheduleID, s.ScheduleResourceUID, s.ScheduleResourceName, s.ScheduleStartDate, s.ScheduleEndDate, 
                      s.ScheduleNotice, s.ScheduleOperatorID, s.ScheduleOperatorName, v.VisitID, v.AlternateVisitID, v.AssigningAuthority, v.MedRecNO, v.CardType, v.CardNO, v.Age, 
                      v.AgeUnit, v.MaritalStatus, v.Occupation, v.AdmitDate, v.ReAmissionFlag, v.AdmissionType, v.AdmitPatCondition, v.DeptID, v.DeptName, v.PointOfCareID, v.PointOfCare, v.Room, 
                      v.Bed, v.AdmittingDoctorID, v.AdmittingDoctorName, v.AttendingDoctorID, v.AttendingDoctorName, v.DirectorDoctorID, v.DirectorDoctorName, v.CurPatCondition, 
                      v.NursingGrade, v.DietType, v.PrimaryDiagnosis, v.DischargeDate, v.DischargeDisposition, v.TotalCharges, v.TotalPayments, v.PaymentMode, 
                      v.MedicalPaymentMode, v.OutPatientNO, v.InPatientNO, v.PatientType, p.Name, p.NameSpell, p.MotherName, p.Sex, p.BirthDate, p.BirthPlace, p.Nation, p.Citizenship,
                       p.IdentityType, p.IdentityID, p.IDCardNO, p.HealthCardNO, p.ContactPhoneNO, p.HomePhoneNO, p.BusinessPhoneNO, p.Email, p.AddressProvince, p.AddressCity, 
                      p.AddressDistrict, p.AddressStreet, p.AddressRoad, p.AddressDetail, p.Postalcode, p.WorkUnit, p.Language, p.InsuranceType, p.InsuranceID, o.PushState, o.LastUpdateDate, o.RowTimestamp
FROM         ObservationRequest AS o LEFT OUTER JOIN
                      ObservationSchedule AS s ON o.ObservationUID = s.ObservationUID INNER JOIN
                      OrganizationMst AS org ON o.OrganizationID = org.OrganizationID INNER JOIN
                      Visit AS v ON o.VisitUID = v.VisitUID INNER JOIN
                      PatientIndex AS p ON o.PatientID = p.PatientID AND o.PIDAssigningAuthority = p.PIDAssigningAuthority
where o.DeleteFlag=0
;

CREATE view V_ExamResultFile as
SELECT     V_Exam.*, Document.FileUID, Document.Title, Document.MimeType, 
                      MediaMst.MediaHost + '\\' + DocumentInService.FileRelativePath AS FilePath,
                      ServiceConfigMst.Endpoint + '/Download/Document?fileUID=' + Document.FileUID AS FileDownloadUrl,
					  ServiceConfigMst.Endpoint + '/Download/Document?preferredContentType=application/pdf&fileUID=' + Document.FileUID AS FileDownloadUrlPdf
FROM         V_Exam INNER JOIN
                      Document ON V_Exam.ObservationUID = Document.BusinessID INNER JOIN
                      DocumentInService ON DocumentInService.FileUID = Document.FileUID INNER JOIN
                      MediaMst ON MediaMst.MediaUID = DocumentInService.MediaUID INNER JOIN
                      ServiceConfigMst ON ServiceConfigMst.ServiceUID = DocumentInService.ServiceUID
WHERE     (Document.DeleteFlag = 0) AND (DocumentInService.DeleteFlag = 0) AND (Document.BusinessType = 'Exam') AND 
                      (Document.TypeCode = 'ExamResult')
;

create view V_PS_Report as
SELECT  o.ObservationUID, v.MedRecNO as MEDRECNO, o.AccessionNumber as MODALITYNO, p.Name as PNAME, p.Sex as PSex, v.Age+v.AgeUnit as PAge, 
        (select r.ValueText from ObservationResult r where o.ObservationUID = r.ObservationUID and r.ObservationID='GDT' and r.DeleteFlag=0 LIMIT 1) as INSPECTIONRESULT, 
        (select r1.ValueText from ObservationResult r1 where o.ObservationUID = r1.ObservationUID and r1.ObservationID='IMP' and r1.DeleteFlag=0 LIMIT 1) as DIAGNOSE,
        (select r1.ValueText from ObservationResult r1 where o.ObservationUID = r1.ObservationUID and r1.ObservationID='ADT' and r1.DeleteFlag=0 LIMIT 1) as REPORTREMARK,
        ResultDate as REPORTDATE
FROM   ObservationRequest o INNER JOIN
       Visit v ON o.VisitUID = v.VisitUID INNER JOIN
       PatientIndex p ON o.PatientID = p.PatientID AND o.PIDAssigningAuthority = p.PIDAssigningAuthority
where o.DeleteFlag=0 and ResultStatus='审核完成' and (ServiceSectID = 'PS' or ServiceSectID = 'PIS')
;




--  Create Stored Procedures 
DELIMITER //
CREATE PROCEDURE P_UpdateObsResultPrintCount
(
	IN ObservationUID varchar(64),
	IN PlacerOrderNO varchar(64),
	IN PlacerAssigningAuthority varchar(64),
	IN FillerOrderNO varchar(64),
	IN FillerAssigningAuthority varchar(64),
	IN ClientHost varchar(64),
	IN ClientName varchar(64)
)
BEGIN
	UPDATE ObservationRequest SET ResultPrintCount=ResultPrintCount+1, ResultPrintTime=now() WHERE ObservationUID=ObservationUID;
END

;


